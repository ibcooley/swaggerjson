{
    "swagger": "2.0",
    "info": {
        "description": "Open/Mate is the third party API for accessing data on Auto/Mate Dealer Servers.\nThis is the latest revision of the specifications using REST and JSON.\n\n\n## License\n\n\u00a9 Auto/Mate, Inc.  |  4 Airline Dr.  |  Albany NY 12205  |  800.371.3970 \n\nThe information contained in this document is confidential and may be privileged or otherwise protected from disclosure.\nThis information is provided for discussion purposes only and does not bind or obligate Auto/Mate Dealership Systems, Inc. in any way.\n\n## API Launch Stages\n\nAPI endpoints typically go through three stages of release: \n1. Alpha\n2. Beta\n3. General Availability (GA).  \n\nAdditional stages an API _may_ go through are Pre-alpha and/or Deprecated.\n\n**Pre-alpha**  \n\nThis is an early preview of an API where documentation is made public but functionality is not yet available.\nDocumentation is intended to assist integration planning but may have significant changes by Alpha phase.\n\n**Alpha**\n\nThis is an early preview of an API and is intended to test and develop new features and\nfunctionality requirements in a testing environment. Significant, backwards-incompatible changes should be expected.\nThe APIs may have significant design and availability problems. These APIs are *not* suitable\nfor production use but may be available in some production environments.\n\n**Beta**\n\nThis is an early release of an API for feedback prior to general availability. Changes to\nthe API may not be backwards-compatible with prior releases.  These APIs may be available for limited production use\nduring the pilot phase of a new integration.\n\n**General Availability (GA)**\n\nThis API is available for general production use.  Any changes to the API within this\nmajor release will maintain backwards-compatibility.\n\n**Deprecated**\n\nThe API is no longer supported and will be removed in the near future. If your application is currently integrated with\na deprecated endpoint it is highly recommended to begin development work to replace it. New development work should not \nbe done against any API marked deprecated.  \n\nAll deprecated functionality is on a schedule for removal. A typical schedule ranges from 1 to 3 months before \nfunctionality is removed but can be extended if requested. Deprecation schedules can be found in the Open/Mate release \nnotes email. If you would like to subscribe to this email please contact AM-openmate-support@dealersocket.com.\n\n## Authentication\nAll calls to OpenMate services require authentication via username and password using HTTP basic authentication.\n\nSee [here for an overview of basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)\n\nAn OpenMate username is also sometimes referred to as a `third party id` and is an integer value.\n\n### Example\nCredentials must be passed in the HTTP Authorization header containing the base64-encoded value for username:password.\n\nFor example, if the browser uses `Aladdin` as the username and `OpenSesame` as the password, then the field's value \nis the base64-encoding of `Aladdin:OpenSesame`, or `QWxhZGRpbjpPcGVuU2VzYW1l`. \n\nThen the Authorization header will appear as:\n\n`Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l`\n\n### Testing with Curl\n\nIf you are using [Curl](https://curl.haxx.se/) to call the services you can pass this via the `-u` parameter.\nFor example, `curl -u \"username:password\" ...`\n\n## Error Handling\n\nThere are multiple error types throughout the Open/Mate API you may encounter. These error types are shared across the\napplication and when they arise depends on the context of the request being made. Below are the types of errors and \ncodes you may see when making requests.\n\n*Note:* When an error does occur it's important to review the response body which is an `ApiError` model. This will help \ndetermine the cause of the issue and how to rectify it.  While HTTP status codes are valuable they typically do not \nprovide enough information for diagnostics. If you still need assistance with the error please send the entire response \nbody to Open/Mate support.\n\n### Error Types\n\n**AggregateException** - This error is used to collect multiple errors into one and means there are multiple issues with \nthe request that need to be addressed before receiving a successful response. The details list in the `ApiError` \nresponse will contain the specific issues with the request. `HTTP status code 400`\n\n**InputRequiredException** - This error indicates a request does not contain required input needed to process the \nrequest. `HTTP status code 400`\n\n**InputFormatException** - This error indicates a request contains input that is not in the expected format. \n`HTTP status code 400`\n\n**InvalidOperationException** - This error indicates a request has valid input that is present and in a valid form but \nthe system does not support the operation. `HTTP status code 400`\n\n**PaginationException** - This error indicates there is an issue with a search request relating to offset and/or limit.\n`HTTP status code 400`\n\n**RelationshipDoesNotExistException** - This error indicates the request being made presumes a relationship that does\nnot exist. `HTTP status code 400`\n\n**RequestTimeoutException** - This error indicates that a timeout occurred while processing the request. In most cases,\nthis is due to a paginated request with a large limit. By lowering the limit, the request should process successfully.\n`HTTP status code 408`\n\n**DuplicateEntityException** - This error indicates a request to create a new entity cannot be completed because an \nentity with the same attributes already exists. `HTTP status code 409`\n\n**EntityDoesNotExistException** - This error indicates a request to retrieve an entity by its unique attributes cannot \nbe completed as the entity does not exist.  `HTTP status code 404`\n\n**PathDoesNotExistException** - This error indicates the requested URL does not exist.  `HTTP status code 404`\n\n**InvalidContentTypeException** - This error indicates the Content-Type header is invalid for POST, PUT, or PATCH request.\n`HTTP status code 415`\n\n**EntityCreationException** - This error indicates a request has passed all validation steps but the API is still unable\nto create the entity.  `HTTP status code 500`\n\n**EntityUpdateException** - This error indicates a request has passed all validation steps but the API is still unable\nto update the entity.  `HTTP status code 500`\n\n**ConfigurationException** - This error indicates a configuration problem at the dealership level which prevents the\ndesired operation. `HTTP status code 500`\n\n**PreAlphaException** - This error indicates functionality is not yet available and still in development. \n`HTTP status code 501`\n\n**ApiException** - This error indicates an unexpected issue occurred in the API while processing the request. This error \nshould be sent to the Open/Mate support team for diagnostics. `HTTP status code 500`\n\n**ConcurrentAccessException** - Error indicating the requested resource is currently locked by another user and the\n operation cannot be performed at this time `HTTP status code 409`\n \n**SubresourceDoesNotExistException** - Error indicating a subresource of a unique entity does not exist. `HTTP status code 404`\n\n## HTTP PATCH and Json Merge Patch - Update APIs\n\nUpdate support in the Open/Mate APIs is implemented using HTTP PATCH.  This allows for partial\nupdates of specific fields on an entity objects without providing the full object as would be \ntypical of an HTTP PUT.\n\nThe body of the request should follow the [JSON Merge Patch (RFC 7396)](https://tools.ietf.org/html/rfc7396)\nformat.  Only those fields passed in the body of the request will be updated.  Any field excluded\nfrom the request will be left unchanged.\n\nThis provides two primary benefits compared to a full update via HTTP PUT:\n\n1. There is no risk in changing or blanking out a field that was not\n   intended as part of the update. \n1. There is less data to transfer so it is faster.\n\nFor example, to change the start and end date/time for an appointment but otherwise leave it\nunchanged the client could send the following request body:\n\n```\n{\n    \"appointmentStartDateTime\": \"2018-11-26T15:00:00.000-04:00\",\n    \"appointmentEndDateTime\": \"2018-11-26T16:00:00.000-04:00\"\n}\n```\n\n#### Patching Arrays ####\n\nNote that the JSON Merge Patch spec linked above does not support patching of arrays.  The Open/Mate\nAPIs make a slight change to the spec to allow for more granular patching of arrays described below.\n\nWhen an object is retrieved via Open/Mate any object within an array will have a `key` field\npopulated with a text identifier, typically `\"0\"`, `\"1\"`, `\"2\"`, etc.  The `key` field identifies\nthe unique key or position within the array.  When patching an array element the `key` field \n**must** be provided in the request.\n\nNote that the `key` field must *not* be provided when initially creating an entity with\nan array -- only when patching an existing element.  The keys will be automatically assigned on \ncreation.  Keys are typically assigned in the order provided but this is not guaranteed \n(e.g. RESIDENCE address on a customer record is always put in position 0).\n\nThere are three common scenarios clients will face when patching arrays.\n\n1. *Update* an element within an array and leave all other array elements unchanged.\n1. *Add* a new element to the array\n1. *Remove* an existing element from the array.\n\nNote that the `key` fields within array elements will change as elements are added or removed from\nthe array.\n\n##### Update an element in an array #####\n\nIn this case, *all* array keys must be provided but no other fields are required except those that\nthe client intends to change.  The presence of the `key` field indicates the element should be\npreserved unchanged.\n\nFor example, assume an appointment has three existing lines in the `repairOrderLines` array element.\n\nThe update the `complaint` on the third line but leave the first and second lines unchanged the\nrequest would look as follows:\n\n```\t\n{\n    \"repairOrderLines\": [\n        { \"key\": \"0\" },\n        { \"key\": \"1\" },\n        {\n            \"complaint\": \"THIS IS AN UPDATED COMPLAINT\",\n            \"estimateLaborTime\": 0.5,\n            \"key\": \"2\"\n        }\n    ]\n}\n```\n\n##### Add an element to an array #####\n\nIn this case, array keys must be provided for elements you would like to leave in place in the\narray.  Additional items can be added to the array by including an element *without* a `key` field.\n\nFor example, adding a fourth line to the above appointment would like:\n\n```\t\n{\n    \"repairOrderLines\": [\n        { \"key\": \"0\" },\n        { \"key\": \"1\" },\n        { \"key\": \"2\" },\n        {\n            \"opCode\": \"100M4\",\n            \"payType\": \"CUSTOMER\"\n        }\n    ]\n}\n```\n\nNote that certain fields may be required when adding a new line vs. updating an existing line.  In\nthis case `opCode` and `payType` are both required.  If either of these is excluded from a new\nline an error response will be returned.\n\n##### Remove an element from an array #####\n\nTo remove an element from an array exclude it's `key` in the PATCH request.  Keys that should be\nleft in the array must be included to be preserved.\n\nFor example, to remove the second line from the appointment but leave the first and third as is:\n\n```\t\n{\n    \"repairOrderLines\": [\n        { \"key\": \"0\" },\n        { \"key\": \"2\" }\n    ]\n}\n```\n\n##### Combining update, add, and remove #####\n\nNote that all three of the above operations can be combined into a single request.  This would look\nas follows:\n\n```\t\n{\n    \"repairOrderLines\": [\n        { \"key\": \"0\" },\n        { \n            \"key\": \"2\",\n            \"complaint\": \"THIS IS AN UPDATED COMPLAINT\",\n            \"estimateLaborTime\": 0.5\n        },\n        {\n            \"opCode\": \"100M4\",\n            \"payType\": \"CUSTOMER\"\n        }\n    ]\n}\n```\n\nHere, `\"key\": \"2\"` has been updated, `\"key\": \"1\"` has been removed, and a new element has been\nadded to the end of the array.  The end result here would be the the same as sending in each of the\nabove three request examples independently.\n\n## Offset And Limit Parameters - Retrieval APIs <a name = \"Offset_And_Limit\"></a>\n\nDue to a large amount of data in the system, some API endpoints require `offset` and `limit` parameters to control how \nmany records can be retrieved per request.  \n\nInstead of returning the complete list of all records matching a given request, only one section of \nthe complete list is returned per request. Using the `offset` parameter allows you to pick where to \nstart in the list, and the `limit` parameter allows you to specify the maximum number of records \nthat can be returned.\n\n### General Usage\n\nWhen using `offset` and `limit`, you should first decide how many records to retrieve for a given request. In most use \ncases the default limit of the endpoint is a good choice. Once the `limit` is chosen, it will remain the same for each \nconsecutive request.    \n\nThe first request will always have an `offset` of 0, as to not skip any records and start from the beginning of the \nlist. For each subsequent request, the `offset` value should be the sum of the `offset` value and `limit` value from the \nprevious request.  \n\nContinue making requests until you receive a response containing no records.\nThis indicates that all records have been retrieved. \n\n#### Example:\nThis example is based off the accounting transaction endpoint: `GET /api/v2/{company}/accounting/transactions` \n\nLet's suppose we use the default limit of 500 to retrieve all transactions in the DMS.  \n\n**Request 1:** <pre>GET /api/v2/{company}/accounting/transactions?offset=0&limit=500</pre>\n**Request 2:** <pre>GET /api/v2/{company}/accounting/transactions?offset=500&limit=500</pre>\n**Request 3:** <pre>GET /api/v2/{company}/accounting/transactions?offset=1000&limit=500</pre>\n**Request 4:** <pre>GET /api/v2/{company}/accounting/transactions?offset=1500&limit=500</pre>\n\nThe response to request 4 contained no records. Once this happens all transactions in the DMS have been retrieved \nand no further requests are required.\n\n### offset parameter\n\nThe `offset` parameter indicates how many records to skip in the complete list of matching records\nbefore starting to return them. An `offset` of 0, will not skip any records and start by returning\nthe first record from the complete list of records matching the request.  An `offset` of 100, will\nskip 100 records and start by returning the 101st record from the complete list of matching records.  \n\nIf no `offset` is provided, a default value of 0 will be used.\n\n### limit parameter\n\nThe `limit` parameter indicates the maximum number of records you want to retrieve per response.  \n\nIf no `limit` is provided,a default value will be used. The default value for `limit` may vary between \nAPI endpoints.\n\n|Best Practice|\n|-------------|\n|It is recommended that you don't increase the `limit` too high, as that will result in the request possibly timing out and placing a lot of stress on the dealership server. You also should avoid changing the `limit` while you're in the middle of several requests for the same list of records.|\n\n## Publish / Subscribe APIs <a name = \"PubSub\"></a>\n\nOpen/Mate offers publish/subscribe APIs to allow for near real-time change notification.  When a\nrecord changes within the Auto/Mate system (either through the Auto/Mate system or another third\nparty integration) a change event will be published containing the latest data for the record.\n\n### Subscriptions\n\nTo utilize publish/subscribe events a client must first establish a subscription to Open/Mate for \nthe events of interest.\n\nSubscription can be established via the Open/Mate gateway subscription service.  The subscription\nservice requires HTTP basic authentication using the same credentials as the request/reply services.\nIt accepts a list of Subscription models as the body. It may take up to 5 minutes for a subscription to take effect.\n\n#### Subscription Example (Create/Update)\n\n```bash\ncurl -X PUT -H \"Content-Type: application/json\" -u \u201c{username}:{password}\u201d \\\nhttps://openmate-preprod.automate-webservices.com/OpenMateGateway/api/v1/metadata/dealers/{openmate_dealer_id}/subscriptions\n```\nWith request body (can be passed via `-d` argument if using `curl`):\n```json\n[\n    {\n      \"callback\": \"https://{your_callback_uri_here}\",\n      \"protocol\": \"REST_V1\",\n      \"version\": \"OM-2.0.0\",\n      \"operation\": \"fixed_ops.parts.inventory\",\n      \"type\": \"CREATE\",\n      \"subscriptionAttributes\": {\n        \"Authorization\": \"some_authentication_token_value\"\n        }\n    },\n    {\n      \"callback\": \"https://{your_callback_uri_here}\",\n      \"protocol\": \"REST_V1\",\n      \"version\": \"OM-2.0.0\",\n      \"operation\": \"fixed_ops.parts.inventory\",\n      \"type\": \"MODIFY\",\n      \"subscriptionAttributes\": {\n        \"Authorization\": \"some_authentication_token_value\"\n      }\n    }\n]\n```\n\n* The `callback` URI element must be HTTPS and the host must present a valid certificate.  \n  * Note that the client may choose to use a single URI for all subscriptions or separate URIs \n  per-type as desired.  Events can be distinguished via metadata included in the headers should \n  you choose to use a single URI to process multiple events.\n* The `protocol` element is always `REST_V1` for Open/Mate V2 subscriptions.\n* The `version` element is always `OM-2.0.0` for Open/Mate V2 subscriptions.\n* The `operation` corresponds to the data type you would like to subscribe to.  Supported \n  `operations` include:\n  * `customers` - customer events\n  * `vehicles` - vehicle ownership changes\n  * `fixed_ops.parts.inventory`  - parts inventory (qty, price, etc.)\n  * `fixed_ops.appointments` - service appointments\n  * `fixed_ops.repair_orders` - repair orders\n  * `vehicle_inventory` - vehicle inventory (stock number, pricing, etc.)\n  * `deals` - vehicle sales information\n    \n* The `type` is `CREATE`, `MODIFY`, or `DELETE`.  To consume all changes to a specific data\n  model a subscriber should subscribe to all three types.\n* The `subscriptionAttributes` allows specifying custom headers that will be passed back in the\n  HTTP request from Open/Mate to the subscription `callback` URI.  The typical use case here is to\n  specify and `Authorization` header with some credentials that will be validated by the `callback`\n  URI endpoint.  This can be any string value so you are free to use HTTP basic auth, a bearer token,\n  or any other mechanism desired.\n  * This allows the consumer to validate that the events were generated by the Open/Mate gateway\n  servers and not some other entity.  \n  * Open/Mate gateway server IP addresses may change due to \n  auto-scaling of services so explicit whitelisting of IPs is strongly discouraged.\n  \n#### Subscription Example (Retrieve)\n\nYou can retrieve a list of subscriptions active for a dealer via the following:\n \n```bash\ncurl -X GET -u \u201c{username}:{password}\u201d \\\nhttps://openmate-preprod.automate-webservices.com/OpenMateGateway/api/v1/metadata/dealers/{openmate_dealer_id}/subscriptions\n```\n#### Subscription Example (Unsubscribe)\n\nYou can remove a single subscription via the following:\n \n```bash\ncurl -X DELETE -u \u201c{username}:{password}\u201d \\\nhttps://openmate-preprod.automate-webservices.com/OpenMateGateway/api/v1/metadata/dealers/{openmate_dealer_id}/subscriptions/{version}/{operation}/{type}`\n```\n  \n### Publish / Subscribe Events\n\nPublish/subscribe events will be sent via HTTP POST to the provided callback URI in near-real time \nas the they are processed.  The body will contain the OpenMateV2 model and HTTP headers will \ninclude the following:\n\n`Authorization`: the authorization token from the subscription\n`X-OpenMate-API-Version`: the api version of the event: `OM-2.0.0`\n`X-OpenMate-Operation`: the operation, e.g. `fixed_ops.parts.inventory`\n`X-OpenMate-Permission-Type`: the permission type, e.g. `CREATE`\n`X-OpenMate-Dealer-Endpoint-ID`: the ID of the dealership generating the event\n`X-OpenMate-Request-ID`: a unique identifier for the publish/subscribe event\n\n### Publish / Subscribe Event Request Bodies\n\nEvent bodies will contain a single JSON object of the same type and format returned by the\nrequest/reply APIs for that interface.\n\n| Operation | Request Body Type\n|:----------:|:-------------:|\n| `customers` | `Person` |\n| `vehicles` | `Vehicle` |\n| `fixed_ops.parts.inventory` | `PartsInventoryItem` |\n| `fixed_ops.appointments` | `Appointment` |\n| `fixed_ops.repair_orders` | `RepairOrder` |\n| `vehicle_inventory` | `InventoryVehicle` |\n| `deals` | `Deal` |\n    \n#### Publish / Subscribe Event Body Example\n\nFor example a parts inventory change event request body might look like the following:\n\n```json\n{\n    \"binLocations\": [\n      \"123\"\n    ],\n    \"dealerCost\": 9.75,\n    \"description\": \"This is an example part\",\n    \"listPrice\": 12.50,\n    \"minStockingLevel\": 5,\n    \"oemCode\": \"HO\",\n    \"partNumber\": \"PARTABC\",\n    \"quantityOnHand\": 15,\n    \"quantityOnOrder\": 0,\n    \"stockingStatus\": \"STOCKED\"\n}\n```\n### [Open/Mate V1 to Open/Mate V2 Field Mappings](https://partnerportal.automate-webservices.com/wiki/index.php/V1_To_V2_Field_Mappings)\n\nThis section is to assist V1 integrations moving to the V2 API. The field mapping table for each API will show V2 paths as JSON dot notation and V1 paths as the \nXML path in the document. Any fields that do not have an equivalent in either V1 or V2 API's will be marked as N/A (not available). \nIf a V2 field is marked N/A but available in V1 and it is a field you are interested in, please email AM-openmate-support@dealersocket.com as this data may be available.\n\n[Vehicle Inventory](https://partnerportal.automate-webservices.com/wiki/index.php/Vehicle_Inventory_V1_To_V2_Field_Mappings)\n\n[Deals](https://partnerportal.automate-webservices.com/wiki/index.php/Deals_V1_To_V2_Field_Mappings)\n\n[Customers](https://partnerportal.automate-webservices.com/wiki/index.php/Customer_V1_To_V2_Field_Mappings)\n\n[Appointments](https://partnerportal.automate-webservices.com/wiki/index.php/Appointment_V1_To_V2_Field_Mappings)\n\n[Repair Orders](https://partnerportal.automate-webservices.com/wiki/index.php/Repair_Orders_V1_To_V2_Field_Mappings)\n\n## Questions and Support\nIf you have any questions or concerns regarding the APIs or their suitability \nfor your integration please contact AM-openmate-support@dealersocket.com.\n",
        "version": "2.0.0",
        "title": "OpenMateV2",
        "contact": {
            "name": "The Open/Mate Team - AM-openmate-support@dealersocket.com"
        }
    },
    "host": "openmate-preprod.automate-webservices.com",
    "basePath": "/OpenMateGateway",
    "tags": [
        {
            "name": "Accounting",
            "description": "## Debits and Credits ##\nThese terms are being used in an Accounting context and not from a debit/credit card context. In our system, positive values are treated as a debit, and negative values are treated as a credit.\n\n## GLAccount ##\n\nGLAccount is short for General Ledger Account, and these are used to categorize or track Transactions for a specific purpose. An example of a GLAccount is Accounts Payable, an account that represents what the dealership owes to other companies such as a Vendor.\n\nTransactions debit or credit against these accounts. The GLAccount's `openingBalance` is the balance the account starts with after the last closing month.\n\nA GLAccount's `lookupSwitch` field determines if and how control numbers should be looked up when a TransactionItem is debiting or crediting against that account. How the `lookupSwitch` is used will be explained below with Transactions.\n\n## Transactions ##\n\nTransactions are a fundamental record of the Accounting system. They contain a list of TransactionItems which each represent a debit or credit against a GLAccount. A Transaction must be \"balanced\", which means the values in the TransactionItems' `amount` field must sum to be zero. Practically speaking, the debits of a Transaction should be matched by the credits.\n\nA TransactionItem's `controlNumber` differs in meaning depending on the `lookupSwitch` of the GLAccount that the TransactionItem references. Control numbers are search keys that are used to find a record such as a Customer, a Vendor, or a vehicle and relate that record to the TransactionItem itself.\n\n* `NONE` means a control number isn't required.\n* `LOOKUP` means the control number is required and it will be looked up. Generally a Customer or Vendor.\n* `DO_NOT_LOOKUP` means the control number is required but it won't be looked up.\n* `STOCK_NUMBER` and `VIN_LAST_SIX` means the control number is required and it will be looked up. Both of them refer to a vehicle.\n* `APPLY_TO` means the control number is required and it will be looked up. Generally a Customer or Vendor.\n**Note:** this `lookupSwitch` value indicates that the TransactionItem's `applyTo` field must be filled. This field is not validated.\n\n\n**NOTE:** The `unitCount` field (this should really be called the `countFlag` field) indicates whether or not a transaction item should be \"counted\" by the posting/reversal/adjustment process. The **ONLY** valid values for `unitCount` are `0` and `1`. \n## Journal Source ##\n\nA JournalSource, or just Journal, is where Transactions are recorded prior to being posted to a general ledger. Journals are used to maintain very general categories of Transactions.\n\n## Journal Entry ##\n\nA JournalEntry is a summary of Journal activity for a given GLAccount and `fiscalPeriod`. Fiscal periods are defined as the month and year the JournalEntry pertains to. The `balance` of a JournalEntry is the balance of the GLAccount for the specified fiscal period.\n\n## Schedules and Statements ##\n\nA Schedule is used to generate a Schedule Statement. A Statement is a report showing the total balance for a given control number and date. What appears on the Schedule Statement is based on the GLAccounts that belong to that Schedule.\n\nEach Statement contains a list of StatementEntry objects. The `amount` values in each StatementEntry are used to calculate the `endingAgedBalance` of the Statement. If the `isAgedBalance` flag is set to `true` then the `amount` values will be summed and grouped by age. Otherwise, every `amount` gets summed together into `totalBalance` of `endingAgedBalance`.\n\nA concrete example is a Schedule containing an Accounts Payable GLAccount. A Statement generated for this Schedule and a given control number would show the total balance that is owed to that control number (in this case that could represent a Customer or Vendor). Pulling the Statement for this Schedule and control number would give you the total aged balance as well as the list of StatementEntries that make up the Statement.\n\nA Statement's beginning balance can be represented in two different ways. Because of this a Statement object will either contain a `beginningControlBalance` or a `beginningAgedBalance`, but not both.\n\n## Vendor ##\n\nA Vendor is a business or person that provides a good or service to the dealership and must be paid. This process is handled by purchase orders and invoices. Like a Customer, a Vendor is represented in our system as a Person, with the optional addition of the `defaultGlAccountId` field which defines a GLAccount associated with the Vendor.\n\n## Purchase Order ##\n\nA PurchaseOrder represents an order made to a Vendor, describing what was ordered as well as the quantities and costs. Attached to a PurchaseOrder is a Transaction that describes what GLAccounts are involved and the amounts credited or debited to those accounts.\n\nA PurchaseOrder contains a list of entries representing each line of the order. The kind of entries a PurchaseOrder contains depends on the PurchaseOrder's `type`.\n\n* `GENERAL` type indicates that the `generalEntries` list is filled.\n* `SUBLET` type indicates that the `subletEntries` list is filled.\n* `VEHICLE` type indicates that the `vehicleEntries` list is filled.\n* `PARTS` type is currently not in use.\n\nPurchaseOrders and their Transactions pushed into our system are validated before being accepted. Any validation errors will be described in an ApiError response object that Open/Mate returns to you.\n\nPurchaseOrders can be pushed in without a Transaction and updated with one at a later time. This is in contrast to Invoices, which **must** be pushed in with a Transaction.\n\n## Invoice ##\n\nAn Invoice reflects money owed by the dealership to a specified Vendor. It contains an associated Transaction which describes what GLAccounts are involved and the amounts credited or debited to those accounts. The first TransactionItem of a Transaction must reference the dealership's Accounts Payable account and the `amount` should match the `invoiceAmount` of the Invoice. Since this `amount` is being deducted from Accounts Payable it should be negative.\n\nFor example, given an Invoice with an `invoiceAmount` of `90.00`, the first TransactionItem in the Invoice's Transaction should have an `amount` of `-90.00`. The other TransactionItems in the Transaction should offset this, e.g. the second TransactionItem could have an `amount` of `50.00`, the third TransactionItem could have an `amount` of `40.00`. Summing `-90.00`, `50.00`, and `40.00` results in `0.00`, making the Transaction balanced.\n\nInvoices and their Transactions which are pushed into our system are validated before being accepted. Any validation errors will be described in an ApiError response object that Open/Mate returns to you."
        },
        {
            "name": "Accounting - GL Accounts",
            "description": "Gl Account Controller"
        },
        {
            "name": "Accounting - Invoices",
            "description": "Invoice Controller"
        },
        {
            "name": "Accounting - Schedules",
            "description": "Schedule Controller"
        },
        {
            "name": "Accounting - Transactions",
            "description": "Transaction Controller"
        },
        {
            "name": "Accounting - Vendors",
            "description": "Vendor Controller"
        },
        {
            "name": "Customers",
            "description": "## Customer Identifiers\n\nThe customer UUID should always be used as the primary identifier for a customer record via OpenMate.  However, the UUID is **not** intended to be a user-facing identifier. We don't want to display it to a user, and we **certainly** don't want the user to ever have to type it.\n\nThe user-visible identifier within Auto/Mate is the customer control number.  This is a string identifier that should be unique per dealer endpoint but is not globally unique across multiple rooftops.\n\nThe name ID (also known as NA-ID or legacy ID) is an internal integer identifier, also only unique for a single rooftop. Although this is exposed for backwards compatibility purposes a third party should **not** typically use or display this value.\n\nSee [here for more details](https://partnerportal.automate-webservices.com/wiki/index.php/Alternate_Identifiers#Customers) on alternate identifiers.\n\n\n"
        },
        {
            "name": "Deals",
            "description": "Deal Controller"
        },
        {
            "name": "Fixed Ops - Appointments",
            "description": "Appointment Controller"
        },
        {
            "name": "Fixed Ops - Parts History",
            "description": "Parts History Controller"
        },
        {
            "name": "Fixed Ops - Parts Inventory",
            "description": "Parts Inventory Controller"
        },
        {
            "name": "Fixed Ops - Parts Invoices",
            "description": "Parts Invoice Controller"
        },
        {
            "name": "Fixed Ops - Parts Order",
            "description": "Parts Order Controller"
        },
        {
            "name": "Fixed Ops - Parts Pricing",
            "description": "Parts Pricing Controller"
        },
        {
            "name": "Fixed Ops - Parts Quotes",
            "description": "Parts Quote Controller"
        },
        {
            "name": "Fixed Ops - Parts Setup",
            "description": "Parts Setup Controller"
        },
        {
            "name": "Fixed Ops - Physical Inventory",
            "description": "Physical Inventory Controller"
        },
        {
            "name": "Fixed Ops - Repair Orders",
            "description": "Fixed Ops Controller"
        },
        {
            "name": "Fixed Ops - Service Vehicles",
            "description": "## Vehicle API\n**NOTE:** Currently anything not using the `/inventory/` path is intended for \"Service Vehicles\" only.\n### Service Vehicles\n\nOur system currently stores vehicles in two different areas. There is the \"inventory\" area which stores information about vehicles actually stocked into inventory. There is also the \"service\" area which stores information about vehicles brought in for service appointments or subject of repair orders. Entries in these two areas may overlap as they are technically separate. This is subject to change in the future.\n\n\"Service Vehicles\" include basic information about the vehicle itself (model, color, mileage, etc). This information is intended to be used on the Fixed Operations side of our DMS. For example, a customer may bring their vehicle into a dealership for the first time to perform an oil change. We won't have an inventory record but our DMS needs a vehicle (with a VIN) associated to the customer to create a Repair Order. A \"Service Vehicle\" entry may be created to make the association.\n\nAny call below that does NOT have `/inventory/` in its path is used to extract or create \"Service Vehicles\" at this time.\n"
        },
        {
            "name": "OpenMate V2",
            "description": "Retrieve info such as version, health statuses, etc."
        },
        {
            "name": "Reports",
            "description": "Report Controller"
        },
        {
            "name": "Vehicle Inventory",
            "description": "**NOTE:** This is for **inventory** vehicles at the dealership.  Inventory vehicles include\nvehicles sold by the dealership or taken in on trade.  This does **not** include all vehicles that\nhave been in the dealership for service.  For service see the interfaces under `/vehicles`.\n\n## Inventory Vehicles\n\nAs mentioned in **Fixed Ops - Service Vehicles**, our system currently stores vehicles in two areas. This \"Inventory Vehicle\" area only stores information about vehicles existing within our Vehicle Merchandising application. If your intention is to work with vehicles contained in Fixed Ops/Service calls, please use **Fixed Ops - Service Vehicles**.\n\nAn \"Inventory Vehicle\" contains detailed information about the vehicle, such as production year, make, model, fuel type, wheel base, et cetera. This information is intended to be used with our Vehicle Merchandising application.\n\n### Custom Fields\n\nInventory Vehicles can return with custom fields that are defined by the dealer. These custom fields are accessible from \nthe `customFields` field on the `InventoryVehicle` model . Due to legacy reasons, `name` and `value` fields of \nthe `VehicleCustomField` model may not always be defined. Custom fields are dependent on their JSON array positions. \nIt is normal for the `customFields` JSON array to contain some JSON objects with only the `key` field defined, as those\nJSON objects are maintaining positional integrity of the custom fields."
        }
    ],
    "paths": {
        "/api/v2/{company}/accounting/gl_accounts": {
            "get": {
                "tags": [
                    "Accounting - GL Accounts"
                ],
                "summary": "Get a listing of all GL (general ledger) accounts for the company -- Release Stage: General Availability",
                "operationId": "getGLAccountsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GL accounts retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GLAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/gl_accounts/default_payable_account": {
            "get": {
                "tags": [
                    "Accounting - GL Accounts"
                ],
                "summary": "Get the default payable GL (general ledger) account for the company -- Release Stage: General Availability",
                "operationId": "getDefaultPayableGLAccountUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GL account retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/GLAccount"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/gl_accounts/opening_balance/{year}": {
            "get": {
                "tags": [
                    "Accounting - GL Accounts"
                ],
                "summary": "Get the yearly opening balances and unit counts for the given accounts as they were in the first month of the given year -- Release Stage: General Availability",
                "description": "This GET request will return the yearly opening balance and unit counts that the given GL accounts started with in the first month of the given year.\n\nA dealership can choose to use calendar or fiscal financial years. Whether a dealership is calendar or fiscal can be determined by the `fiscalMonth` field returned by the `/api/v2/{company}/accounting/setup_info` endpoint. A calendar financial year begins in January and ends in December. A fiscal financial year is different in that it can start in any month.\n\nFor example, if a dealership is a fiscal dealership and they started their current fiscal year in July 2018, that fiscal year will end in June 2019. Additionally, this period of time is considered the dealership's 2019 fiscal year because it ends in June 2019.\n\nA fiscal dealership is more complex than a calendar dealership in that you can retrieve either the fiscal or calendar yearly opening balances for that dealership.\n\n## <a name=\"Parameters\">Parameters</a> ##\n\n* The `is_fiscal_year` query parameter determines whether you want yearly opening balances for the start of the fiscal or calendar year. For a calendar dealership this parameter makes no difference. For a fiscal dealership setting `is_fiscal_year` to `true` will return the yearly opening balances for the first month of the given fiscal year. Setting `is_fiscal_year` to `false` will return the yearly opening balances for the first month of the given calendar year.\n\n* The `year` path parameter is the calendar or fiscal year that you want the yearly opening balances for. For a calendar dealership this year will always be the calendar year. For a fiscal dealership the year you request will either be calendar or fiscal depending on the value of the `is_fiscal_year` parameter you use.\n\n* The `account_numbers` query parameter contains the GL account numbers of the accounts you want yearly opening balances for. This endpoint will only return the balances for accounts you explicitly ask for.\n\n## <a name=\"Examples\">Examples</a> ##\n\nRetrieving yearly opening balances for calendar dealerships is fairly straightforward, only requiring that you send in the desired calendar year and account numbers.\n\nFor a fiscal dealership, let's return to the previous example of a fiscal dealership whose current fiscal year started in July 2018 and ends in June 2019. To get the yearly opening balances for a list of GL accounts as they were in July 2018, send in a request with the `year` set to 2019 and `is_fiscal_year` set to `true`. This will retrieve yearly opening balances for fiscal year 2019.\n\nTo get the yearly opening balances for a list of GL accounts as they were in January 2018, send in a request with the `year` set to 2018 and `is_fiscal_year` set to `false`. This will retrieve yearly opening balances for calendar year 2018.\n\n",
                "operationId": "getOpeningBalancesByYearUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The calendar or fiscal year you want the yearly opening balances for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "account_number",
                        "in": "query",
                        "description": "The account numbers of the GL accounts you want yearly opening balances for. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "is_fiscal_year",
                        "in": "query",
                        "description": "Should the returned balances be from the beginning of the fiscal year instead of the beginning of the calendar year. Only relevant for dealerships whose fiscal year doesn't start in January",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account balances retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountOpeningBalance"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/gl_accounts/opening_balances/years/{year}/months/{month}": {
            "get": {
                "tags": [
                    "Accounting - GL Accounts"
                ],
                "summary": "Get the opening balances and unit counts for the given accounts as they were for a given year and month -- Release Stage: General Availability",
                "operationId": "getOpeningBalancesByYearAndMonthUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The calendar or fiscal year you want the opening balances for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "The month you want the opening balances for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "account_number",
                        "in": "query",
                        "description": "The account numbers of the GL accounts you want yearly opening balances for. This query parameter **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "is_fiscal_year",
                        "in": "query",
                        "description": "Should the returned balances be from the beginning of the fiscal year instead of the beginning of the calendar year. Only relevant for dealerships whose fiscal year doesn't start in January",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account balances retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountOpeningBalance"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/gl_accounts/{account_number}": {
            "get": {
                "tags": [
                    "Accounting - GL Accounts"
                ],
                "summary": "Get a listing of GL (general ledger) accounts by account number -- Release Stage: General Availability",
                "operationId": "getGLAccountsByAccountNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "account_number",
                        "in": "path",
                        "description": "The account number for the GL account you wan to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GL accounts retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GLAccount"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/invoices": {
            "get": {
                "tags": [
                    "Accounting - Invoices"
                ],
                "summary": "Get a listing of all invoices in the dealer's accounting system by invoice status -- Release Stage: General Availability",
                "operationId": "getAccountingInvoicesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoice_status",
                        "in": "query",
                        "description": "invoice status. This query parameter **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "UNPOSTED",
                                "POSTED",
                                "PARTIAL_PAY",
                                "PAID",
                                "PAID_NO_ACCT",
                                "VOIDED",
                                "MARKED",
                                "UNPAID",
                                "ALL"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "UNPOSTED",
                            "POSTED",
                            "PARTIAL_PAY",
                            "PAID",
                            "PAID_NO_ACCT",
                            "VOIDED",
                            "MARKED",
                            "UNPAID",
                            "ALL"
                        ]
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "yyyy-MM-DD",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "yyyy-MM-DD",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountingInvoice"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/invoices/pending/{userName}": {
            "post": {
                "tags": [
                    "Accounting - Invoices"
                ],
                "summary": "Create an invoice and corresponding pending transaction to the dealer's accounting system -- Release Stage: General Availability",
                "description": "An Accounting Invoice reflects money owed by the dealership to a specified Vendor. It contains an associated Transaction which describes the GLAccounts involved and the amounts credited or debited to those accounts.\n\nThis POST request can create a new Invoice with an `invoiceStatus` of `UNPOSTED`. It is currently not possible to create posted Invoices via Open/Mate. Instead, this must be done by the dealership using the Auto/Mate DMS. When we refer to \"POST\" in the context of this request we mean the POST HTTP request method, and not posting in an Accounting context.  \n\nWhen creating an Invoice it's important to keep in mind what requirements must be met. These requirements are enforced by an automated validation process each time an Invoice is created or updated. This is explained in more detail below in the <a href=\"#Invoice_Validation\">Validation</a> section.\n\n## <a name=\"Parameters\">Parameters</a> ##\n* The `userName` parameter is used in two places. First, it is written to the accompanying Transaction and represents who created that Transaction. This value is visible to the dealership user in the Auto/Mate DMS.\n\n    Secondly, if the `createdBy` field is not present in the JSON pushed in during Invoice creation, the value in `userName` will be used instead.\n\n## <a name=\"Requirements\">Recommendations and Requirements</a> ##\n\n### <a name=\"Invoice_Uniqueness\">Invoice uniqueness</a> ###\n\nInvoices must be unique. An Invoice must have an `invoiceDealerNumber` that is unique for the given `invoiceDate`. By default the `invoiceDealerNumber` is also used as the Invoice's `referenceNumber`.\n\n\n| Best Practice |\n| --------------|\n|If you decide to set the <code>referenceNumber</code> manually, make sure that this <code>referenceNumber</code> value is unique, as this value is also used as the attached Transaction's <code>referenceNumber</code>. A Transaction with a non-unique <code>referenceNumber</code> can cause problems. |\n\n### <a name=\"Selecting_Vendor\">Selecting a vendor</a> ###\n\nUse the `GET /v2/{company}/accounting/vendors` request to get all possible Vendors for the desired company. Inside of each Vendor is a Person. Inside of the Person is a `controlNumber` field.\n\nFill in the Invoice's `vendorNumber` field with the `controlNumber` of the Vendor you want.\n\n### <a name=\"Discounts\">Discounts</a> ###\n\nAt times a Vendor might offer a discount on the Invoice amount if the Invoice is paid by a certain date. The total `payAmount` required to pay the Invoice is the `invoiceAmount` subtracted by the `discountAmount`. For example, if the `invoiceAmount` is `50.00` and the `discountAmount` is `20.00` then when paying the Invoice the final `payAmount` would be `30.00`.\n\n### <a name=\"createdBy\">Usage of createdBy</a> ###\n\n`createdBy` is meant to represent the user/dealership employee who created the Invoice. This value is visible to the user in the Auto/Mate DMS.\n\n\n|Best Practice|\n|-------------|\n|This field can only be set when the Invoice is first created. Any subsequent updates to the Invoice will not modify this field so it's recommended that you provide this value when creating the Invoice.|\n\n## <a name=\"Invoice_Validation\">Validation</a> ##\nAccounting Invoices and the Transaction attached to them are validated by Open/Mate during the PUT and POST requests. This validation covers specific requirements that the Transaction's first TransactionItem must meet, as well as more general requirements for the entire Transaction. Errors that occur during validation are returned to you inside of an ApiError object. \n\nThe different types of error messages are listed below. Small snippets of JSON are included as needed. Keep in mind that these snippets are not valid on their own, and only include the minimum necessary to demonstrate the concept.\n\n### <a name=\"No_Vendor_Found\">No vendor found</a> ###\n```\n{\n    \"message\": \"No vendor found for control number [vendor # here] on invoice\"\n}\n```\n\n**Explanation:** The Vendor specified by `vendorNumber` could not be found.\n\n---\n\n### <a name=\"No_Discount_GL_Found\">No discount GL account found</a> ###\n```\n{\n    \"message\": \"No discount GL account found for account number [account # here]\"\n}\n```\n\n**Explanation:** The GLAccount specified by `discountGlAccount` could not be found.\n\n\n## Validation for Transaction's first TransactionItem ##\n\n### <a name=\"Default_Payable_GL\">Does not use a payable account</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.accountNumber\",\n            \"detailMessage\": \"First transaction item must use one of the following payable account numbers:  [account numbers here]\"\n        }\n    ]\n}\n```\n**Explanation:** Each dealership has set of Accounts Payable GLAccounts and this must be used for the first TransactionItem. Generally, the correct GLAccount will be called `Accounts Payable` and will be visible when pulling the list of the company's GLAccounts. This error message will append the expected GLAccounts to the end of the `detailMessage`.\n\n---\n\n### <a name=\"Invoice_Amount\">Amount is not equal to negative of invoice amount</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.amount\",\n            \"detailMessage\": \"First transaction item's amount should equal negative of invoice amount\"\n        }\n    ]\n}\n```\n**Explanation:** Because the `invoiceAmount` is being deducted from the Accounts Payable GLAccount, the TransactionItem's `amount` should be negative. This negative value is meant to offset the `invoiceAmount` completely, such that summing the `invoiceAmount` and `amount` would result in `0`.\n\n**Example**:\n```\n{\n    \"invoiceAmount\": 90.00,\n    \"transaction\": {\n        \"transactionItems\": [\n            {\n                \"amount\": -90.00\n            }\n        ]\n    }\n}\n```\n---\n\n### <a name=\"Vendor_Number\">Control number does not equal vendor number</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.controlNumber\",\n            \"detailMessage\": \"First transaction item's control number should equal vendor number\"\n        }\n    ]\n}\n```\n\n**Explanation:** The first TransactionItem must reference the Vendor that the Invoice is for.\n\n**Example:**\n```\n{\n    \"vendorNumber\": \"V1234\",\n    \"transaction\": {\n        \"transactionItems\": [\n            {\n                \"controlNumber\": \"V1234\"\n            }\n        ]\n    }\n}\n```\n\n## Validation for entire Transaction ##\n\n### <a name=\"No_GL_Found\">No GL account found</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.accountNumber\",\n            \"detailMessage\": \"No GL account found for account number [account # here] on item [transaction item # here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** The GLAccounts of each TransactionItem are looked up to make sure that they exist. This error message will include the non-existent account number as well as which TransactionItem has that account number.\n\n---\n\n### <a name=\"GL_Inactive\">GL account is not active</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.accountNumber\",\n            \"detailMessage\": \"GL account found for account number [account # here] on item [transaction item # here] is not active\"\n        }\n    ]\n}\n```\n\n**Explanation:** The GLAccount was found, but it's inactive. Only active GLAccounts can be used. Like the above error message, this message will include the inactive account number as well as which TransactionItem has that account number.\n\n---\n\n### <a name=\"No_Record_Found\">No record found for control number</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.controlNumber\",\n            \"detailMessage\": \"No record found for control number [control # here] on item [transaction item # here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** This means that the system attempted to look up the control number given in the specified TransactionItem and it was unable to find anything.\n\nWhether the control number will be looked up, and what kind of control number is expected, is defined by the `lookupSwitch` of the GLAccount contained in the specified TransactionItem.\n\n---\n\n### <a name=\"Out_Of_Balance\">Out of balance</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.amount\",\n            \"detailMessage\": \"Transaction is out of balance by [amount in dollars here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** A Transaction must be balanced. That means when we add up the `amount` values in all of the TransactionItems, the sum should equal `0`.\n\n**Example:**\n\n```\n{\n    \"transactionItems\": [\n        {\n            \"amount\": -90.00\n        },\n        {\n            \"amount\": 40.00\n        },\n        {\n            \"amount\": 50.00\n        }\n    ]\n}\n```",
                "operationId": "createPendingAccountingInvoiceUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "Represents user who created the accompanying Transaction, visible to user in Auto/Mate DMS",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "invoiceMap",
                        "description": "An InboundAccountingInvoice is a simplified version of AccountingInvoice.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InboundAccountingInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "schema": {
                            "$ref": "#/definitions/AccountingInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/invoices/{userName}": {
            "put": {
                "tags": [
                    "Accounting - Invoices"
                ],
                "summary": "Update an existing invoice in the dealer's accounting system -- Release Stage: General Availability",
                "description": "An Accounting Invoice reflects money owed by the dealership to a specified Vendor. It contains an associated Transaction which describes which GLAccounts are involved and the amounts credited or debited to those accounts.\n\nThis PUT request can update a pre-existing Invoice with an `invoiceStatus` of `UNPOSTED`. Attempting to update an `invoiceStatus` from `UNPOSTED` to any other status will fail. Currently, Invoices can only be posted and paid by the dealership in the Auto/Mate DMS. Once an Invoice has been posted by the dealership, it can no longer be updated via Open/Mate.\n\nIn order to update an Invoice, Open/Mate will attempt to match what you push in against an existing Invoice in the system. The fields that are used to do this are the `vendorNumber`, the `invoiceDealerNumber` and the `invoiceDate`.\n\n\n| **Caution** |\n|-------------|\n|The `vendorNumber`, `invoiceDealerNumber` and `invoiceDate` fields **must not** be updated, as changing them is equivalent to looking for an entirely different Invoice. If any of these fields have to be changed, they must be changed in the Auto/Mate DMS itself or you must push in a new Invoice via Open/Mate.|\n\n## Validation ##\n\nThe same validation rules used while creating an Invoice must be followed when updating an Invoice. See documentation <a href=\"#operations-AccountingService-createPendingAccountingInvoice\">here</a>.",
                "operationId": "updateAccountingInvoiceUsingPUT",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "Represents user who created the accompanying Transaction, visible to user in Auto/Mate DMS",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "invoiceMap",
                        "description": "An InboundAccountingInvoice is a simplified version of AccountingInvoice",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InboundAccountingInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "schema": {
                            "$ref": "#/definitions/AccountingInvoice"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/journal_entries": {
            "get": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Get a listing of all journal entries by the given period and account number -- Release Stage: General Availability",
                "operationId": "getJournalEntriesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_period",
                        "in": "query",
                        "description": "yyyy-MM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end_period",
                        "in": "query",
                        "description": "yyyy-MM",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "account_number",
                        "in": "query",
                        "description": "account_number",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Journal entries retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JournalEntry"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/journal_sources": {
            "get": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Get a listing of all journal sources for the company -- Release Stage: General Availability",
                "operationId": "getJournalSourcesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Journal sources retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/JournalSource"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/purchase_orders": {
            "get": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Get a listing of purchase orders based on filter parameters -- Release Stage: General Availability",
                "operationId": "getPurchaseOrdersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Multiple values are permitted",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "OPEN",
                                "CLOSED",
                                "DELETED",
                                "VOIDED",
                                "MANUALLY_CLOSED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "OPEN",
                            "CLOSED",
                            "DELETED",
                            "VOIDED",
                            "MANUALLY_CLOSED"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Multiple values are permitted",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GENERAL",
                                "SUBLET",
                                "PARTS",
                                "VEHICLE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "GENERAL",
                            "SUBLET",
                            "PARTS",
                            "VEHICLE"
                        ]
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "yyyy-MM-DD",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "yyyy-MM-DD",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase orders retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/purchase_orders/{userName}": {
            "post": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Add a purchase order (and transaction) to the system -- Release Stage: General Availability",
                "description": "A Purchase Order is a document that describes the details of a dealer's outside purchases such as price, quantity, vendor info, etc. The details of money owed are contained in a Transaction.\n\n## <a name=\"POST_vs_Posting\">POST vs Posting</a> ##\nPlease note that the word \"post\" is shared between two different areas of the Purchase Order create process and are different in meaning.\n\nWhen we refer to POST in all caps we are referencing the HTTP REST method used to create a Purchase Order. Purchase Orders are created in `PENDING` status and require additional work to be \"posted\" to the General Ledger.\n\nThe act of \"posting\" a Purchase Order, Invoice, or Transaction is an accounting convention that refers to shifting these items into the General Ledger. This process requires additional validation not currently available in our API and must be done manually in Auto/Mate after a `PENDING` Purchase Order is created.\n\n## <a name=\"Use_Cases_Of_Single_Fields\">Use Cases of Single Fields</a> ##\n\n### <a name=\"Purchase_Order_Usernames\">Usernames</a> ###\nThe `userName` path parameter and the `requestedBy` field are primarily used for logging/auditing purposes. There are plans in the future to use these fields for per-user authorization. We recommend using the Auto/Mate username of the user creating this pending Purchase Order when sending in both of these values. The user in question will have this information.\n\nThe `approvedBy` field is only used to identify who has posted the Purchase Order in our system and should not be sent in when creating.\n\n### <a name=\"Purchase_Order_Alternate_Company\">`alternateCompany`</a> ###\nThe `alternateCompany` field is required to create or update purchase orders. In the majority of cases this field will be the Dealer Endpoint ID of the dealership/company you're working on. There are some cases where this may vary depending on how the dealership's accounting system is set up, but you will be made aware of this discrepancy.\n\n### <a name=\"Purchase_Order_Status\">`status`</a> ###\nPurchase Orders must be created with a `status` of `OPEN`. Our system does not allow any other type of PO to be modified as this could negatively affect other areas of the system where the Purchase Order has been applied.\n\n### <a name=\"Selecting_a_Vendor\">Selecting a vendor</a> ###\n\nUse the `GET /v2/{company}/accounting/vendors` request to get all possible Vendors for the desired company. Inside of each Vendor is a Person. Inside of the Person is a `controlNumber` field.\n\nFill in the Purchase Order's `vendorNumber` field with the `controlNumber` of the Vendor you want.\n\n## <a name=\"Purchase_Order_Entries_and_Types\">Purchase Order Entries and Types</a> ##\nMultiple types of items (or \"lines\") may be grouped into a single Purchase Order. Our API refers to these lines as `*Entries` and may vary based on the Purchase Order's `type`:\n\nOnly one `*Entries` list will be in use per each Purchase Order and it must match the Purchase Order's `type`. These entries are listed as separate objects because they may contain different info depending on their type.\n### <a name=\"Purchase_Order_GENERAL\">`GENERAL`</a> ###\nThis type indicates that the `generalEntries` list is filled.\n\nGeneral Purchase Orders represent any Purchase Order that doesn't fall under any of the three categories below.\n### <a name=\"Purchase_Order_SUBLET\">`SUBLET`</a> ###\nThis type indicates that the `subletEntries` list is filled.\n\nSublet Purchase Orders are Purchase Orders made out of Sublet Repairs (repairs made by an outside vendor billed to the dealer). These Purchase Orders need to reference a Repair Order number (found in the `subletEntries` object) in order for the money from the customer to be applied properly.\n### <a name=\"Purchase_Order_VEHICLE\">`VEHICLE`</a> ###\nThis type indicates that the `vehicleEntries` list is filled.\n\nVehicle Purchase Orders are Purchase Orders made to buy vehicles for the dealership's inventory.\n### <a name=\"Purchase_Order_PARTS\">`PARTS`</a> ###\nThis type is currently not in use.\n\n## <a name=\"Purchase_Order_Transaction_Validation\">Purchase Order Transaction Validation</a> ##\nA `transaction` is typically attached to a purchase order to indicate more granular detail. However, a `transaction` is not required when creating (POST) a Purchase Order. This is in case the dealer is expected to complete this information manually through Auto/Mate.\n\nWhen adding or updating purchase orders, our system validates the information sent in to make sure it can be processed correctly. The following conditions need to be met to pass our validation:\n\n* The first `transactionItem` on the Purchase Order's `transaction` has a few specific requirements:\n  * It must use a payable GL Account `accountNumber` that is allowed for Purchase Orders. We don't currently have a consistent way of pulling this information, but this will typically be the number of a GL Account object pulled with \"AP\" or \"Accounts Payable\" somewhere in the name. If there's any doubt, the dealer will have this information.\n  * It must have an `amount` equal to negative of the Purchase Order's `amount`\n  * It must have a `controlNumber` equal to the Purchase Order's Vendor's `vendorNumber`\n* The rest of the `transactionItem`s need to, at the very least, contain a valid `controlNumber` and a valid and active `accountNumber`\n\nSee the Pending Invoices section for a more in-depth description of this validation process.\n",
                "operationId": "createPurchaseOrderUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "userName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "purchaseOrderModel",
                        "description": "purchaseOrderModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Purchase order successfully added",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Update a purchase order (and transaction) in the system -- Release Stage: General Availability",
                "operationId": "updatePurchaseOrderUsingPUT",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "userName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "purchaseOrderModel",
                        "description": "purchaseOrderModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase order successfully updated",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/schedules": {
            "get": {
                "tags": [
                    "Accounting - Schedules"
                ],
                "summary": "Get a listing of all schedules for the company -- Release Stage: General Availability",
                "operationId": "getSchedulesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedules retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/schedules/statements/{scheduleId}": {
            "get": {
                "tags": [
                    "Accounting - Schedules"
                ],
                "summary": "Get a listing of all statements by schedule ID -- Release Stage: General Availability",
                "description": "The response will include one, but not both, of either the beginningControlBalance or beginningAgedBalance fields.",
                "operationId": "getStatementsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The unique identifier for a schedule.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transaction_date",
                        "in": "query",
                        "description": "Must be in the format YYYY-MM-DD",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statements retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Statement"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/schedules/statements/{scheduleId}/{controlNum}": {
            "get": {
                "tags": [
                    "Accounting - Schedules"
                ],
                "summary": "Get a listing of all statements by schedule ID and control number -- Release Stage: General Availability",
                "description": "The response will include one, but not both, of either the beginningControlBalance or beginningAgedBalance fields.",
                "operationId": "getStatementUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The unique identifier for the schedule to retrieve the statement for.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "controlNum",
                        "in": "path",
                        "description": "The control number to retrieve that statement for.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statements retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Statement"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/setup_info": {
            "get": {
                "tags": [
                    "Accounting"
                ],
                "summary": "Get the accounting setup information for the company -- Release Stage: General Availability",
                "operationId": "getSetupInfoUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountingSetupInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/transactions": {
            "get": {
                "tags": [
                    "Accounting - Transactions"
                ],
                "summary": "Get a listing of all transactions that match query parameters -- Release Stage: General Availability",
                "description": "Transactions are a fundamental record of the Accounting system. They contain a list of TransactionItems which each represent a debit or credit against a GLAccount. Taken as a whole, the TransactionItems record how money was moved between the various GLAccounts in order to facilitate that particular Transaction.\n\nThis GET request can retrieve Transactions with a `transactionStatus` of `POSTED`.\n\n|  **Caution** |\n|--------------|\n|Currently there is a known issue causing the `transactionStatus` field to default to `PENDING`. Despite this, these Transactions all genuinely have a status of `POSTED`.|\n\n## <a name=\"Requirements\">Requirements and Recommendations</a> ##\n\n## <a name=\"Voided_Reversed_Adjusted\">Finding Voided, Reversed and Adjusted Transactions</a> ##\n\nFinding transactions by their void, reversal or adjustment date for a transaction works a bit differently, as they cannot be individually edited after they're posted. Auto/Mate's accounting system handles voided and adjusted transactions by posting a new transaction for each type of \"edit\".\n\nWhen a transaction is **voided** in our system, the following steps are performed internally:\n\n1. The `adjustReverseFlag` of the posted transaction as well as its transaction items are updated to say `REVERSED`. Nothing else is changed on the original posted transaction.\n\n2. An opposite transaction is created and posted that undoes whatever the original transaction did. This opposite transaction has the same `journalSourceCode`, `referenceNumber` and `transactionDateTime` as the transaction it is cancelling out. Because the `referenceNumber` is the same, the `duplicateReferenceNumber` will be incremented to differentiate between the original and opposite transactions. Its `adjustReverseFlag` fields will also say `REVERSED`. The `postingDateTime` field is the date that the reversal occurred, not the original transaction's posting date.\n\n3. If the transaction is `REVERSED` with a different transaction date than the original transaction, an opposite transaction is created and posted that undoes whatever the original transaction did. This opposite transaction has the same `journalSourceCode` and `referenceNumber` as the transaction it is cancelling out. The `transactionDateTime` is the reversal's transaction date, not the original transaction date. The `duplicateReferenceNumber` isn't incremented because the transaction date is different. Its `adjustReverseFlag` fields will also say `REVERSED`. The `postingDateTime` field is the date that the reversal occurred, not the original transaction\u2019s posting date. The response is sorted by transaction date and internal transaction ID. \n\nWhen a transaction is **edited/adjusted** in our system, the previous two steps are performed as well as a third step:\n\n4. A new transaction with the edited information will be created and posted. Again, the new transaction will have the same `journalSourceCode`, `referenceNumber` and `transactionDateTime` as the original transaction. The `duplicateReferenceNumber` field will be incremented again. Its `adjustReverseFlag` fields will say `ADJUSTED`. The `postingDateTime` field is the date that the reversal in step 2 occurred.",
                "operationId": "getTransactionsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Starting `transactionDateTime` to include in search range, uses `YYYY-MM-DD` format",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Ending `transactionDateTime` to include in search range, uses `YYYY-MM-DD` format",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "start_posting_date_time",
                        "in": "query",
                        "description": "Starting `transactionPostingDateTime` to include in search range, uses `yyyy-MM-ddTHH:mm:ss` format",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "end_posting_date_time",
                        "in": "query",
                        "description": "Ending `transactionPostingDateTime` to include in search range, uses `yyyy-MM-ddTHH:mm:ss` format",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "control_number",
                        "in": "query",
                        "description": "Include Transactions with TransactionItems with this `controlNumber`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "journal_source",
                        "in": "query",
                        "description": "Include Transactions recorded to this `journalSourceCode`",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 500. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 500,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/transactions/pending/{userName}": {
            "post": {
                "tags": [
                    "Accounting - Transactions"
                ],
                "summary": "Post pending transaction to dealership accounting system -- Release Stage: General Availability",
                "description": "Transactions are a fundamental record of the Accounting system. They contain a list of TransactionItems which each represent a debit or credit against a GLAccount. Taken as a whole, the TransactionItems record how money was moved between the various GLAccounts in order to facilitate that particular Transaction.\n\nThis POST request can create Transactions with a `transactionStatus` of `PENDING`. It is currently not possible to create posted Transactions via Open/Mate. Instead, this must be done by the dealership using the Auto/Mate DMS. When we refer to \"POST\" in the context of this request we mean the POST HTTP request method, and not posting in an Accounting context.\n\nBecause Transactions lay underneath many aspects of Accounting, pushing in incorrect Transactions can cause a lot of problems. In order to reduce or eliminate these problems, Transactions undergo an automated validation process each time a Transaction is created. If a Transaction fails validation the response sent back to you will be an ApiError object containing an explanation of the issue.\n\nFurther below we document in more detail how to form a valid Transaction and what the possible failure scenarios are.\n\n## <a name=\"Parameters\">Parameters</a> ##\n* The `userName` path parameter is meant to represent who created the Transaction. This value is visible to the dealership user in the Auto/Mate DMS.\n\n  | Best Practice |\n  |---------------|\n  | Due to how `userName` is stored when a Transaction is posted in the Auto/Mate DMS, it has a maximum size of 6 characters. Any strings larger than that will be truncated. It is suggested that you choose a username that fits within this limit so that it remains meaningful. |\n\n## <a name=\"Requirements\">Requirements and Recommendations</a> ##\n\n### <a name=\"Transaction_Uniqueness\">Transaction uniqueness</a> ###\n\nTransactions must be unique. A Transaction must have a `referenceNumber` and `duplicateReferenceNumber` that are unique for the `journalSourceCode` you're using.  \n\nThe `duplicateReferenceNumber` is only used when the `referenceNumber` by itself is not unique, otherwise it's not required.\n\n| Best Practice |\n|---------------|\n| The `duplicateReferenceNumber` defaults to `0`, meaning the Transaction's `referenceNumber` is unique. The `duplicateReferenceNumber` should be incremented by 1 each time a `referenceNumber` is re-used. |\n\n### <a name=\"Transaction_Type\">TransactionItem Type</a> ###\n\nA Transaction's `transactionItemType` field defaults to `NORMAL` and generally this is the type you should stick with.\n\nThe `itemType` field of each TransactionItem field defaults to `NORMAL` as well. `COST` and `INVENTORY` types are used for TransactionItems that are automatically generated during the posting process, and you shouldn't have to use these types directly.\n\n| Best Practice |\n|---------------|\n| If a TransactionItem in your Transaction is using a GLAccount that has a `costAccountNumber` and `inventoryAccount`, and you populate the `cost` field in the TransactionItem, there is no need to manually create `COST` and `INVENTORY` TransactionItems. <br> <br> This process is done automatically when the Transaction is posted in the Auto/Mate DMS. Two new TransactionItems are created inside of the Transaction to record the cost being debited from the Cost account and credited from the Inventory account. |\n\n### <a name=\"Transaction_Status\">Transaction Status</a> ###\n\nSince this request only involves pending Transactions, a `transactionStatus` of `POSTED` or `VOIDED` will be discarded and replaced by `PENDING` when the Transaction is saved to the database.\n\n### <a name=\"Adjust_Reversal\">Usage of adjustReverseFlag</a> ###\n\nThe `adjustReverseFlag` field for each TransactionItem is used to handle reversing and adjusting Transactions that have already been posted. Since this request only involves pending Transactions and the adjustment/reversal process does not apply, this field should be set to `NORMAL`.\n\n## <a name=\"Validation\">Validation</a> ##\n\nTransactions are validated by Open/Mate during the POST request. Errors that occur during validation are returned to you inside of an ApiError object.\n\nThe different types of error messages are listed below. Small snippets of JSON are included as needed. Keep in mind that these snippets are not valid on their own, and only include the minimum necessary to demonstrate the concept.\n\n### <a name=\"No_GL_Found\">No GL account found</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.accountNumber\",\n            \"detailMessage\": \"No GL account found for account number [account # here] on item [transaction item # here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** The GLAccounts of each TransactionItem are looked up to make sure that they exist. This error message will include the non-existent account number as well as which TransactionItem has that account number.\n\n---\n\n### <a name=\"GL_Inactive\">GL account is not active</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.accountNumber\",\n            \"detailMessage\": \"GL account found for account number [account # here] on item [transaction item # here] is not active\"\n        }\n    ]\n}\n```\n\n**Explanation:** The GLAccount was found, but it's inactive. Only active GLAccounts can be used. Like the above error message, this message will include the inactive account number as well as which TransactionItem has that account number.\n\n---\n\n### <a name=\"No_Record_Found\">No record found for control number</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.controlNumber\",\n            \"detailMessage\": \"No record found for control number [control # here] on item [transaction item # here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** This means that the system attempted to look up the control number given in the specified TransactionItem and it was unable to find anything.\n\nWhether the control number will be looked up, and what kind of control number is expected, is defined by the `lookupSwitch` of the GLAccount contained in the specified TransactionItem.\n\n---\n\n### <a name=\"Out_Of_Balance\">Out of balance</a> ###\n```\n{\n    \"message\": \"Validation failed for transaction\",\n    \"detail\": [\n        {\n            \"target\": \"transactionItem.amount\",\n            \"detailMessage\": \"Transaction is out of balance by [amount in dollars here]\"\n        }\n    ]\n}\n```\n\n**Explanation:** A Transaction must be balanced. That means when we add up the `amount` values in all of the TransactionItems, the sum should equal `0`.\n\n**Example:**\n\n```\n{\n    \"transactionItems\": [\n        {\n            \"amount\": -90.00\n        },\n        {\n            \"amount\": 40.00\n        },\n        {\n            \"amount\": 50.00\n        }\n    ]\n}\n```",
                "operationId": "createPendingTransactionUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "Represents the user who created this Transaction, visible to user in Auto/Mate DMS",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "pendingTransactionModel",
                        "description": "A PendingTransaction is a simplified version of Transaction",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PendingTransaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pending transaction successfully created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Request failed due to a server-side problem",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/accounting/vendors": {
            "get": {
                "tags": [
                    "Accounting - Vendors"
                ],
                "summary": "Get a listing of all vendors for a company -- Release Stage: General Availability",
                "operationId": "getVendorsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vendors retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vendor"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Search for customers -- Release Stage: General Availability",
                "description": "This resource defines a general customer search/extract.\n\nThis supports the most-typical search criteria required by third party systems interfacing with Auto/Mate.  Note that it does **not** support arbitrary AND/OR criteria and in most cases each parameter is only supported as a unique search.\n\nAn exception to this is first and last name.  If both are provided this will perform a logical AND.  Last name can be searched on its own but first name can only be searched in combination with last name.\n\nA search for an individual would generally use first/last name.  A search for a business would typically use company name.\n\n## Batch extracts\n\nA common use case is for a partner to perform a batch extract of customer data up front when a dealer is activated.  This allows the full customer database to be synced to the partner's local system.  In cases where an integration requires a batch extract there a several best-practices to follow for efficiency purposes.\n\n\n### Sync customer database (batch request/reply)\n\nIf **all** customer data is required, simply utilize the company, offset, and limit query parameters to page through the dataset until no more results are returned.\n\nFor example, assume we are retrieving data for company 1 and there are 2500 customer records in the database.  A typical extract process should do these in batches of 1000 records at a time, leading to the following series of requests:\n\n* <pre>GET /OpenMateGateway/api/v2/1/customers?offset=0&limit=1000</pre>\n  * Response includes records 0 - 1000\n* <pre>GET /OpenMateGateway/api/v2/1/customers?offset=1000&limit=1000</pre>\n  * Response includes records 1000 - 2000\n* <pre>GET /OpenMateGateway/api/v2/1/customers?offset=2000&limit=1000</pre>\n  * Response includes records 2000 - 2500\n  * At this point you can see that records returns (500) is less than records requests (1000) so we have reached the end of the batch\n  * Alternatively, you could also detect this if you continue the process for the next batch and get back an empty result\n* <pre>GET /OpenMateGateway/api/v2/1/customers?offset=3000&limit=1000</pre>\n  * <empty success response>\n\nIf you're only interested in customers that have more recently been into the dealership (e.g. activity after 2017-01-01) you can follow the same process described above but also include the `last_modified_after` query parameter in each request.\n\ne.g. `GET /OpenMateGateway/api/v2/1/customers?last_modified_after=2017-01-01&offset=0&limit=1000`\n\nNote that customer database for large dealers may include several hundred thousand records so it may take potentially hundreds of requests to complete the initial data sync.\n\n|  **Caution** |\n|--------------|\n|The offset of a request must always be a multiple of the limit. Our system will return a PaginationException if an invalid combination is provided.\n|\n|Ex: `limit=100` and `offset=99`, or `limit=100` and `offset=50` would be invalid combinations and would return an error.\n\n### Resync customer database (request/reply)\n\nOnce the initial batch data sync is completed incremental syncs can be used to keep the data up to date with minimal overhead and minimal number of requests.\n\nAssume you've extracted all customer data and now want to keep things up to date within 24 hours via a nightly sync process.  In this case you would use a query based on last_modified_after to specify a date/time of (current time - 24 hours) then page through the results to pull them into your system.  For a small range (1 day) this would typically be a relatively small result set (e.g. 100 records).\n\nlast_modified_after supports granularity down to the second although it's typically not recommended that it be used at that frequency.  A daily, hourly, or every 15 minutes type of refresh is considered acceptable.\n\n### Resync customer database (subscriptions)\n\nSubscriptions allow you to receive notifications anytime a customer is added or changed within Auto/Mate via a near-real-time POST of a change event to a callback URI defined by the partner.\nMore info about subscriptions can be found <a href=\"#PubSub\">here</a>. \n\n",
                "operationId": "searchCustomersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "control_number",
                        "in": "query",
                        "description": "The control number belonging to the customer.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vin",
                        "in": "query",
                        "description": "The Vehicle Identification Number for the vehicle belonging to the customer.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "The phone number belonging to the customer.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Only supported in combination with the last_name parameter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "The last name of the customer",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "Organization name for a business customer record",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email belonging to the customer.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_modified_after",
                        "in": "query",
                        "description": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer -- Release Stage: General Availability",
                "operationId": "createUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "person",
                        "description": "person",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersonCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/customers/name_ids/{nameId}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Release Stage:  Deprecated",
                "operationId": "searchByNaIdUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nameId",
                        "in": "path",
                        "description": "nameId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ],
                "deprecated": true
            }
        },
        "/api/v2/{company}/customers/{uuid}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Retrieve a customer by UUID -- Release Stage: General Availability",
                "operationId": "retrieveByUuidUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for a customer.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Customers"
                ],
                "summary": "Partial update an existing customer -- Release Stage: General Availability",
                "description": "This resource defines a partial-update of a customer via PATCH.\n\nSee the HTTP PATCH and Json Merge Patch section of the Overview\nfor details.",
                "operationId": "patchUsingPATCH_1",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json",
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for a customer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "personMergePatch",
                        "description": "personMergePatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersonUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Page through deals with optional filters. Maximum page size 500 with a default size of 500 -- Release Stage: General Availability",
                "operationId": "getDealsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "created_start_date",
                        "in": "query",
                        "description": "**DEPRECATED**. Please use endpoint `GET /created_date_range`. ",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "created_end_date",
                        "in": "query",
                        "description": "**DEPRECATED**. Please use endpoint `GET /created_date_range`. ",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by deal status. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "SOLD",
                                "CLOSED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "PENDING",
                            "SOLD",
                            "CLOSED"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 500. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 500,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deal"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/balloon": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "summary": "Create a new balloon deal -- Release Stage: General Availability",
                "operationId": "createBalloonDealUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createBalloonDealModel",
                        "description": "createBalloonDealModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateBalloonDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/balloon/deal-id/{dealId}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing balloon deal -- Release Stage: General Availability",
                "operationId": "patchBalloonDealByIdUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateBalloonDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/balloon/deal-number/{dealNumber}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing balloon deal -- Release Stage: General Availability",
                "operationId": "patchBalloonDealByDealNumberUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealNumber",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateBalloonDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/cash": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "summary": "Create a new cash deal -- Release Stage: General Availability",
                "operationId": "createCashDealUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createCashDealModel",
                        "description": "createCashDealModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCashDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/cash/deal-id/{dealId}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing cash deal -- Release Stage: General Availability",
                "operationId": "patchCashDealByIdUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateCashDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/cash/deal-number/{dealNumber}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing cash deal -- Release Stage: General Availability",
                "operationId": "patchCashDealByDealNumberUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealNumber",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateCashDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/created_date_range": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Page through deals, filtering by created date. Maximum page size 500 with a default size of 500 -- Release Stage: General Availability",
                "operationId": "getDealsByCreatedDateRangeUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_created_date",
                        "in": "query",
                        "description": "Filter by deal created date. Format **`YYYY-MM-DD`**. This filter **is not** repeatable.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_created_date",
                        "in": "query",
                        "description": "Filter by deal created date. Format **`YYYY-MM-DD`**. This filter **is not** repeatable.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by deal status. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "SOLD",
                                "CLOSED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "PENDING",
                            "SOLD",
                            "CLOSED"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 500. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 500,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deal"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/deal_numbers/{dealNumber}": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve a deal by its deal number -- Release Stage: General Availability",
                "operationId": "getDealByDealNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealNumber",
                        "in": "path",
                        "description": "The deal number for a deal.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/finance": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "summary": "Create a new finance deal -- Release Stage: General Availability",
                "operationId": "createFinanceDealUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createFinanceDealModel",
                        "description": "createFinanceDealModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateFinanceDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/finance/deal-id/{dealId}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing finance deal -- Release Stage: General Availability",
                "operationId": "patchFinanceDealByIdUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateFinanceDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/finance/deal-number/{dealNumber}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing finance deal -- Release Stage: General Availability",
                "operationId": "patchFinanceDealByDealNumberUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealNumber",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateFinanceDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/last_modified_range": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Page through deals, filtering by last modified datetime. Maximum page size 500 with a default size of 500 -- Release Stage: General Availability",
                "operationId": "getDealsByLastModifiedUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "last_modified_after",
                        "in": "query",
                        "description": "Filter by deal last modified datetime. Format: **`yyyy-MM-dd'T'HH:mm:ss.SSS`**. This query parameter **is not** repeatable.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "last_modified_before",
                        "in": "query",
                        "description": "Filter by deal last modified datetime. Format: **`yyyy-MM-dd'T'HH:mm:ss.SSS`**. This query parameter **is not** repeatable.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by deal status. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "SOLD",
                                "CLOSED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "PENDING",
                            "SOLD",
                            "CLOSED"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 500. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 500,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deal"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/lease": {
            "post": {
                "tags": [
                    "Deals"
                ],
                "summary": "Create a new lease deal -- Release Stage: General Availability",
                "operationId": "createLeaseDealUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createLeaseDealModel",
                        "description": "createLeaseDealModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLeaseDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/lease/deal-id/{dealId}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing lease deal -- Release Stage: General Availability",
                "operationId": "patchLeaseDealByIdUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateLeaseDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/lease/deal-number/{dealNumber}": {
            "patch": {
                "tags": [
                    "Deals"
                ],
                "summary": "Update an existing lease deal -- Release Stage: General Availability",
                "operationId": "patchLeaseDealByDealNumberUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealNumber",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "dealPatch",
                        "description": "dealPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateLeaseDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/lenders": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve all lenders for the given company -- Release Stage: General Availability",
                "operationId": "getLendersUsingGET_1",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lender"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/lenders/{lenderId}": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve a lender by its id for the given company -- Release Stage: General Availability",
                "operationId": "getLendersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "lenderId",
                        "in": "path",
                        "description": "lenderId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lender"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/sale_date_range": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Page through deals, filtering by sale date. Maximum page size 500 with a default size of 500 -- Release Stage: General Availability",
                "operationId": "getDealsBySaleDateRangeUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_sale_date",
                        "in": "query",
                        "description": "Filter by deal sale date. Format **`YYYY-MM-DD`**. This filter **is not** repeatable.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_sale_date",
                        "in": "query",
                        "description": "Filter by deal sale date. Format **`YYYY-MM-DD`**. This filter **is not** repeatable.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by deal status. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PENDING",
                                "SOLD",
                                "CLOSED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "PENDING",
                            "SOLD",
                            "CLOSED"
                        ]
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 500. This query parameter **is not** repeatable. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 500,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deal"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/salespeople": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve all sales staff for the given company -- Release Stage: General Availability",
                "operationId": "getSalespeopleUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SalesStaff"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/salespeople/{salesPersonId}": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve sales person for the given company -- Release Stage: General Availability",
                "operationId": "getSalesPersonUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "salesPersonId",
                        "in": "path",
                        "description": "salesPersonId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SalesPerson"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/accessories": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve accessories setups for the given company, deal type (if provided) and state (if provided) -- Release Stage: General Availability",
                "operationId": "getAccessoriesSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The 2 character abbreviation for the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deal_type",
                        "in": "query",
                        "description": "The type of deal the setup is used for. Valid values are: FINANCE, LEASE, CASH, BALLOON.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FINANCE",
                            "LEASE",
                            "CASH",
                            "BALLOON"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccessorySetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/custom_statuses": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve a list of custom deal statuses defined by the dealer. If no custom statuses are defined, empty array is returned. -- Release Stage: General Availability",
                "operationId": "getCustomStatusesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/fees": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve fee setups for the given company, deal type (if provided) and state (if provided) -- Release Stage: General Availability",
                "operationId": "getFeeSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The 2 character abbreviation for the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deal_type",
                        "in": "query",
                        "description": "The type of deal the setup is used for. Valid values are: FINANCE, LEASE, CASH, BALLOON.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FINANCE",
                            "LEASE",
                            "CASH",
                            "BALLOON"
                        ]
                    },
                    {
                        "name": "vehicle_type",
                        "in": "query",
                        "description": "The vehicle type that the fee setup is used for. Valid values are: NEW, USED, DEMO, OTHER.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NEW",
                            "USED",
                            "DEMO",
                            "OTHER"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeeSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/gap_insurance": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve GAP insurance setup information -- Release Stage: General Availability",
                "operationId": "getGapInsuranceSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GapInsuranceSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/incentives": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve incentive setups for the given company -- Release Stage: General Availability",
                "operationId": "getIncentiveSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IncentiveSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/product_insurance": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve product insurance setup information -- Release Stage: General Availability",
                "operationId": "getProductInsuranceSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInsuranceSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/rebates": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve rebate setups for the given company -- Release Stage: General Availability",
                "operationId": "getRebateSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The 2 character abbreviation for the state",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RebateSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/service_contracts": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve service contract setups for the given company, deal type (if provided) and state (if provided) -- Release Stage: General Availability",
                "operationId": "getServiceContractSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The 2 character abbreviation for the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deal_type",
                        "in": "query",
                        "description": "The type of deal the setup is used for. Valid values are: FINANCE, LEASE, CASH, BALLOON.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FINANCE",
                            "LEASE",
                            "CASH",
                            "BALLOON"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceContractSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/setup/taxes": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve state tax setups for the given company, state (if provided) and deal type (if provided) -- Release Stage: General Availability",
                "operationId": "getStateSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The 2 character abbreviation for the state",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deal_type",
                        "in": "query",
                        "description": "The type of deal the setup is used for. Valid values are: FINANCE, LEASE, CASH, BALLOON.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FINANCE",
                            "LEASE",
                            "CASH",
                            "BALLOON"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StateTaxSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/deals/{dealId}": {
            "get": {
                "tags": [
                    "Deals"
                ],
                "summary": "Retrieve a deal by its deal id -- Release Stage: General Availability",
                "operationId": "getDealByIdUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "The unique identifier for a deal.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointment_flags": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get the dealer-defined list of appointment flags (Waiter, Comeback, Shuttle, Rental, etc. -- Release Stage: General Availability",
                "description": "The \"Appointment Flags\" are sometimes referred to as \"Delivery Flags\"",
                "operationId": "getAppointmentFlagsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments": {
            "post": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Create a new appointment -- Release Stage: General Availability",
                "description": "The deliveryFlags can be retrieved from the Fixed Ops \"Appointment Flags\" endpoint",
                "operationId": "createAppointmentUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createAppointmentModel",
                        "description": "createAppointmentModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments/appointment_numbers/{appointmentNumber}": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Search for appointments by appointment number -- Release Stage: General Availability",
                "operationId": "getAppointmentByNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "appointmentNumber",
                        "in": "path",
                        "description": "The internal identifier for an appointment",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments/customers/{customerUuid}": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Search for appointments by customer uuid -- Release Stage: General Availability",
                "operationId": "getAppointmentsByCustomerUuidUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerUuid",
                        "in": "path",
                        "description": "The unique identifier for a customer.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments/scheduled": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Search for appointments by date range -- Release Stage: General Availability",
                "operationId": "getScheduledAppointmentsByDateRangeUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "include_appointments_with_repair_orders",
                        "in": "query",
                        "description": "When set to true, returns all appointments (with or without repair orders) and when set to false returns only appointments without repair orders. If the parameter is not provided than it defaults to true.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments/vehicles/{vin}": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Search for appointments by vehicle vin -- Release Stage: General Availability",
                "operationId": "getAppointmentsByVinUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/appointments/{uuid}": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Retrieve single appointment by uuid -- Release Stage: General Availability",
                "operationId": "getAppointmentUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for an appointment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Delete an appointment -- Release Stage: General Availability",
                "operationId": "deleteAppointmentUsingDELETE",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for an appointment",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Fixed Ops - Appointments"
                ],
                "summary": "Partially update an existing appointment -- Release Stage: General Availability",
                "description": "This resource defines a partial-update of an appointment via PATCH.\n\nSee the HTTP PATCH and Json Merge Patch section of the Overview\nfor details.",
                "operationId": "patchUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for an appointment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "apptMergePatch",
                        "description": "apptMergePatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CreateAppointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/labor_rates": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get the dealer-defined list of labor rates -- Release Stage: General Availability",
                "operationId": "getLaborRatesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LaborRate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/history/franchises/{franchise}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts History"
                ],
                "summary": "Page through all of parts history for a manufacturer -- Release Stage: General Availability",
                "operationId": "pageHistoryUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsHistory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Page through all of parts inventory. -- Release Stage: General Availability",
                "operationId": "pageUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/franchises/{franchise}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Page through parts inventory by manufacturer. --Release Stage: General Availability",
                "operationId": "searchFranchisesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/franchises/{franchise}/parts": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Retrieve parts by part numbers and manufacturer -- Release Stage: General Availability",
                "operationId": "getPartsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "part_number",
                        "in": "query",
                        "description": "The part number belonging to the parts. This query param **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/franchises/{franchise}/parts/{partNumber}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Retrieve a part by part number and manufacturer -- Release Stage: General Availability",
                "operationId": "getPartUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the part.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "partNumber",
                        "in": "path",
                        "description": "The part number belonging to the part.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/franchises/{franchise}/search": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Search parts inventory by manufacturer. -- Release Stage: General Availability",
                "description": "Search for a list of parts inventory items by franchise and a string of characters that its part number or part description contains. \n\n>***NOTE:*** *Supersessions cannot be returned through these calls. Please send a separate call to pull by exact part number and franchise if you are looking for supersession data.*",
                "operationId": "searchUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "part_number_contains",
                        "in": "query",
                        "description": "The partial part number used to lookup parts.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "part_description_contains",
                        "in": "query",
                        "description": "The partial part description used to look up parts.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/parts/{dmsPartNumber}": {
            "patch": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Patch a part -- Release Stage: General Availability",
                "operationId": "patchPartUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "dmsPartNumber",
                        "in": "path",
                        "description": "The part number as it exists within the DMS.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "partsInventoryMergePatch",
                        "description": "partsInventoryMergePatch",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartsInventoryItemUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsInventoryItem"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/inventory/search": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Inventory"
                ],
                "summary": "Search all of parts inventory. -- Release Stage: General Availability",
                "description": "Search for a list of parts inventory items by a string of characters that its part number or part description contains. \n\n>***NOTE:*** *Supersessions cannot be returned through these calls. Please send a separate call to pull by exact part number and franchise if you are looking for supersession data.*",
                "operationId": "searchUsingGET_1",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "part_number_contains",
                        "in": "query",
                        "description": "The partial part number used to lookup parts.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "part_description_contains",
                        "in": "query",
                        "description": "The partial part description used to look up parts.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_exact_part_number",
                        "in": "query",
                        "description": "Field that indicates if the parameter part_number_contains is the exact part number",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInventoryItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices": {
            "post": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Create a new parts invoice -- Release Stage: General Availability",
                "operationId": "createInvoiceUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createPartsInvoiceModel",
                        "description": "createPartsInvoiceModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePartsInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/invoice_numbers/{invoiceNumber}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Get a listing of parts invoices by document number and type -- Release Stage: General Availability",
                "operationId": "getInvoicesByDocumentNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "path",
                        "description": "The invoice number for an invoice.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "invoice type. To see all valid values use the Swagger 'Try it now' button.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "REPAIR_ORDER",
                                "INVOICE",
                                "INVOICE_PENDING",
                                "SPECIAL_ORDER",
                                "QUOTE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "REPAIR_ORDER",
                            "INVOICE",
                            "INVOICE_PENDING",
                            "SPECIAL_ORDER",
                            "QUOTE"
                        ]
                    },
                    {
                        "name": "include_related",
                        "in": "query",
                        "description": "When set to true, all related invoices to the invoice number will be returned. When set to false only invoices that match the invoice number are returned. This parameter defaults to true. Invoices can be related to one another in the case of Special Order Requests (SORs); when a dealer creates an SOR for some parts, an initial invoice is created to collect a deposit. An additional invoice is created to sell those parts when the SOR arrives. This new invoice will be related to the first invoice; if either this or the original invoice's numbers are queried, both will be included in the response.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 100. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInvoice"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/search": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Search API for parts invoices -- Release Stage: General Availability",
                "operationId": "searchInvoicesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "invoice state. To see all valid values use the Swagger 'Try it now' button.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "OPEN",
                                "PICKED",
                                "ORDERED",
                                "SHIPPED",
                                "DELIVERED",
                                "COMPLETE",
                                "VOIDED",
                                "CLOSED",
                                "EXPIRED",
                                "MIGRATED"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "OPEN",
                            "PICKED",
                            "ORDERED",
                            "SHIPPED",
                            "DELIVERED",
                            "COMPLETE",
                            "VOIDED",
                            "CLOSED",
                            "EXPIRED",
                            "MIGRATED"
                        ]
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "yyyy-MM-dd -- start of invoice date range you want to search by -- must be used along with end_date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "yyyy-MM-dd -- end of invoice date range you want to search by -- must be used along with start_date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "start_closed_date",
                        "in": "query",
                        "description": "yyyy-MM-dd -- start of closed date range you want to search by -- must be used along with end_closed_date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_closed_date",
                        "in": "query",
                        "description": "yyyy-MM-dd -- end of closed date range you want to search by -- must be used along with start_closed_date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "customer_uuid",
                        "in": "query",
                        "description": "The unique identifier for a customer.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "franchise",
                        "in": "query",
                        "description": "The franchise or manufacturer for a part that is on the invoice.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "invoice type. To see all valid values use the Swagger 'Try it now' button.\n* REPAIR_ORDER: An invoice created to a repair order\n* INVOICE: Parts Invoice\n* INVOICE_PENDING: A Pending parts invoice that could change.\n* SPECIAL_ORDER: An invoice created for a customer where parts have been placed on order\n* QUOTE: A quoted invoice where parts have not been relieved from inventory",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "REPAIR_ORDER",
                            "INVOICE",
                            "INVOICE_PENDING",
                            "SPECIAL_ORDER",
                            "QUOTE"
                        ]
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 100. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInvoice"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/tax_setups": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Get dealer tax settings/defaults for parts invoice data -- Release Stage: General Availability",
                "operationId": "getInvoiceTaxSetupsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsInvoiceTaxSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/{invoiceId}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Retrieve single part invoice by the invoice id -- Release Stage: General Availability",
                "operationId": "getInvoiceUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "the unique identifier for the parts invoice",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/{invoiceId}/lines": {
            "post": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Add lines to a parts invoice -- Release Stage: General Availability",
                "operationId": "addLinesToPendingInvoiceUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "the unique identifier for the parts invoice",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "invoiceLines",
                        "description": "lines to add to the parts invoice",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreatePartsInvoiceLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/invoices/{invoiceId}/lines/{lineId}": {
            "delete": {
                "tags": [
                    "Fixed Ops - Parts Invoices"
                ],
                "summary": "Remove a line from a parts invoice -- Release Stage: General Availability",
                "operationId": "deleteLineFromPendingInvoiceUsingDELETE",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "The unique identifier for the parts invoice",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lineId",
                        "in": "path",
                        "description": "The unique identifier for the parts invoice line",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeletePartsInvoiceLineResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/orders": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Order"
                ],
                "summary": "Get a list of parts orders from a list of order numbers -- Release Stage: General Availability",
                "operationId": "getOrdersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "The order number for a parts order.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/orders/franchises/{franchise}": {
            "post": {
                "tags": [
                    "Fixed Ops - Parts Order"
                ],
                "summary": "Create a parts order from the dealership to the manufacturer -- Release Stage: General Availability",
                "operationId": "createOrderUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer for a part.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "createPartsOrderModel",
                        "description": "createPartsOrderModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePartsOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PartsOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/orders/receive": {
            "post": {
                "tags": [
                    "Fixed Ops - Parts Order"
                ],
                "summary": "Receive a part on an existing parts order -- Release Stage: General Availability",
                "operationId": "receiveOrderUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "receivePartsOrderModel",
                        "description": "receivePartsOrderModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReceivePartsOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsOrder"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/orders/search/dates": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Order"
                ],
                "summary": "Get a list of parts orders within a creation date range -- Release Stage: General Availability",
                "operationId": "searchOrdersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "The earliest date to retrieve parts orders from.",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "The latest date to retrieve parts orders to",
                        "required": true,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/orders/{orderNumber}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Order"
                ],
                "summary": "Get a parts order by order number -- Release Stage: General Availability",
                "operationId": "getOrderUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderNumber",
                        "in": "path",
                        "description": "The order number for a parts order.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/pricing/customers/{customerId}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Pricing"
                ],
                "summary": "Retrieve customer-specific pricing for part numbers provided -- Release Stage: General Availability",
                "operationId": "getCustomerSpecificPricingQuotesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "The unique identifier for a customer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "part_number",
                        "in": "query",
                        "description": "The part number for a part. This query parameter **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sale_type_fallback",
                        "in": "query",
                        "description": "Sale type to use if the dealership does not have a sale type configured for the customer provided. This is optional. To view sale types defined at the dealership see endpoint  `/api/v2/{company}/fixed_ops/parts/setup/sale_types`  in Fixed Ops - Parts Setup API",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "expanded_part_search",
                        "in": "query",
                        "description": "Example: if the part number provided is ABC and the DMS has part A-B-C, setting expanded_part_search=true will find this part number",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parts Quote Item"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/pricing/franchises/{franchise}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Pricing"
                ],
                "summary": "Retrieve repair order / warranty internal pricing for part numbers provided for a single franchise -- Release Stage: General Availability",
                "operationId": "getInternalPricingQuotesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "part_number",
                        "in": "query",
                        "description": "The part number for a part. This query parameter **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sale_type",
                        "in": "query",
                        "description": "Sale type to use for pricing. To view sale types defined at the dealership see endpoint  `/api/v2/{company}/fixed_ops/parts/setup/sale_types`  in Fixed Ops - Parts Setup API",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parts Quote Item"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/pricing/franchises/{franchise}/customers/{customerId}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Pricing"
                ],
                "summary": "Retrieve customer-specific pricing for part numbers provided for a single franchise -- Release Stage: General Availability",
                "operationId": "getCustomerSpecificPricingQuotesUsingGET_1",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "franchise",
                        "in": "path",
                        "description": "The franchise or manufacturer of the parts",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "The unique identifier for a customer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "part_number",
                        "in": "query",
                        "description": "The part number for a part. This query parameter **is** repeatable.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sale_type_fallback",
                        "in": "query",
                        "description": "Sale type to use if the dealership does not have a sale type configured for the customer provided. This is optional. To view sale types defined at the dealership see endpoint  `/api/v2/{company}/fixed_ops/parts/setup/sale_types`  in Fixed Ops - Parts Setup API",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "expanded_part_search",
                        "in": "query",
                        "description": "Example: if the part number provided is ABC and the DMS has part A-B-C, setting expanded_part_search=true will find this part number",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Parts Quote Item"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/quotes": {
            "post": {
                "tags": [
                    "Fixed Ops - Parts Quotes"
                ],
                "summary": "Create a new parts quote -- Release Stage: General Availability",
                "operationId": "createQuoteUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createPartsQuoteModel",
                        "description": "createPartsQuoteModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePartsQuoteModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/quotes/quote_number/{number}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Quotes"
                ],
                "summary": "Get a parts quote by number -- Release Stage: General Availability",
                "operationId": "getQuoteByNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "number",
                        "in": "path",
                        "description": "number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/quotes/{uuid}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Quotes"
                ],
                "summary": "Get a parts quote by UUID -- Release Stage: General Availability",
                "operationId": "getQuoteByUuidUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PartsInvoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/setup/franchises": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Setup"
                ],
                "summary": "Retrieve all franchises associated with a given company -- Release Stage: General Availability",
                "operationId": "getFranchisesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FranchiseSetup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/setup/franchises/{name}": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Setup"
                ],
                "summary": "Retrieve franchise by name associated with a given company -- Release Stage: General Availability",
                "operationId": "getFranchiseByNameUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of a franchise or manufacturer.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FranchiseSetup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/setup/sale_types": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Setup"
                ],
                "summary": "Retrieve all part invoice sale types associated with a given company -- Release Stage: General Availability",
                "operationId": "getSaleTypesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsSaleType"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/parts/setup/salespeople": {
            "get": {
                "tags": [
                    "Fixed Ops - Parts Setup"
                ],
                "summary": "Retrieve all salespeople who work for a specified company -- Release Stage: General Availability",
                "operationId": "getSalesPeopleUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsSalesPerson"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/physical_inventory/parts": {
            "get": {
                "tags": [
                    "Fixed Ops - Physical Inventory"
                ],
                "summary": "Retrieve all parts included in an open physical inventory -- Release Stage: Beta",
                "operationId": "getUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_page",
                        "in": "query",
                        "description": "start_page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "end_page",
                        "in": "query",
                        "description": "end_page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PhysicalInventoryPartModel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/physical_inventory/parts_count": {
            "post": {
                "tags": [
                    "Fixed Ops - Physical Inventory"
                ],
                "summary": "Count parts included in a physical inventory -- Release Stage: Beta",
                "operationId": "updatePartCountUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "physicalInventoryCounts",
                        "description": "physicalInventoryCounts",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PhysicalInventoryCountFileModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PartsScanningUpdateCountFileResponseModel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve a list of repair orders. -- Release Stage: General Availability",
                "operationId": "getRepairOrdersUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The repair order status. To see all valid values use the Swagger 'Try it now' button.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OPEN",
                            "CLOSED",
                            "VOID"
                        ]
                    },
                    {
                        "name": "vin",
                        "in": "query",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Create a new repair orderRelease Stage: General Availability",
                "description": "A Repair Order (or RO) describes work that needs to be done on a vehicle, as well as basic information about that vehicle and the customer who owns it.\n\nThis POST request creates a new Repair Order with a `detailedStatus` of `OPEN`. Up to 26 Repair Order lines can be attached to a Repair Order, with line \"numbers\" from `A` to `Z`.\n\n## Requirements ##\n\n### Provide a customer UUID, vehicle VIN ###\n\nThe `customerUuid` of the customer as well as the `vin` of the customer's vehicle is required in order to create a new Repair Order. If a service vehicle entry needs to be created to associate a vin, this can be doing using our Vehicle API below.\n\nBoth of these fields can be found by using the <a href=\"#operations-CustomerService-searchCustomers\">`GET /v2/{company}/customers`</a> request. In the response, you will find a `vehicles` list, representing the vehicle(s) that the customer owns. The `thirdPartyUuid` represents the UUID of the customer.\n\n### Provide a service advisor ID ###\n\nThe `id` can be found by using the <a href=\"#operations-FixedOperationsService-getServiceAdvisors\">`GET /v2/{company}/fixed_ops/service_advisors`</a> request. In the response, the `id` is the value you want to use when creating the Repair Order.\n\n## Recommendations ##\n\n### Repair Order Lines ###\n\nIt is not required to include a list of Repair Order lines when creating the Repair Order, but if you do decide to include them be aware of those requirements as described in the documentation <a href=\"#operations-FixedOperationsService-addRepairOrderLine\">here</a>.\n",
                "operationId": "createRepairOrderUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "createRepairOrderModel",
                        "description": "createRepairOrderModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRepairOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RepairOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/appointments/{uuid}": {
            "post": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Convert an appointment to a repair order -- Release Stage: General Availability",
                "description": "This call converts an Appointment to a Repair Order. This can also be considered converting the \"prospective work\" order into the \"actual work\" order.\n\n  \n#### UUID\nThe desired appointment `uuid` can be found with a POST to `/v2/{company}/fixed_ops/appointments` and the appropriate search parameters.",
                "operationId": "convertAppointmentToRepairOrderUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for an appointment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "apptToRoModel",
                        "description": "apptToRoModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentToRepairOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RepairOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/created_range": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve a list of repair orders. -- Release Stage: General Availability",
                "operationId": "getRepairOrdersByCreatedDateRangeUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The repair order status. To see all valid values use the Swagger 'Try it now' button.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OPEN",
                            "CLOSED",
                            "VOID"
                        ]
                    },
                    {
                        "name": "created_after",
                        "in": "query",
                        "description": "yyyy-MM-dd'T'HH:mm:ss.SSS",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "created_before",
                        "in": "query",
                        "description": "yyyy-MM-dd'T'HH:mm:ss.SSS",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "vin",
                        "in": "query",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/last_modified_range": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve a list of repair orders. -- Release Stage: General Availability",
                "operationId": "getRepairOrdersByLastModifiedDateRangeUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The repair order status. To see all valid values use the Swagger 'Try it now' button.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OPEN",
                            "CLOSED",
                            "VOID"
                        ]
                    },
                    {
                        "name": "last_modified_after",
                        "in": "query",
                        "description": "yyyy-MM-dd'T'HH:mm:ss.SSS",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "last_modified_before",
                        "in": "query",
                        "description": "yyyy-MM-dd'T'HH:mm:ss.SSS",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "vin",
                        "in": "query",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/roNum/{roNum}": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve a list of repair orders matching a given repair order number. -- Release Stage: General Availability",
                "operationId": "getRepairOrdersByRepairOrderNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "roNum",
                        "in": "path",
                        "description": "The repair order number for a repair order.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 1000. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 1000,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairOrder"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/search_by_uuids": {
            "post": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Search for repair orders from a list of uuids. Max 1000 repair orders can be retrieved per request-- Release Stage: General Availability",
                "operationId": "getRepairOrdersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "uuids",
                        "description": "List of repair order uuids to search for",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairOrderUuidSearchResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{roUuid}/recommended_services": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve recommended services for a repair order by third party uuid -- Release Stage: General Availability",
                "operationId": "getRecommendedServicesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "roUuid",
                        "in": "path",
                        "description": "The unique identifier for a repair order.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RecommendedServices"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{uuid}": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve single repair order by third party uuid -- Release Stage: General Availability",
                "operationId": "getRepairOrderUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for a repair order.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Update an existing repair order -- Release Stage: General Availability",
                "operationId": "updateRepairOrderUsingPATCH",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "Company number where the repair order exists",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier for the repair order",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "repairOrderPatch",
                        "description": "repairOrderPatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateRepairOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairOrder"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{uuid}/line": {
            "post": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Add a single Repair Order line to a pre-existing Repair Order -- Release Stage: General Availability",
                "operationId": "addRepairOrderLineUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The `uuid` of the RepairOrder",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "roLine",
                        "description": "roLine",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRepairOrderLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RepairOrderLine"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{vin}/{roNum}": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve single repair order by vin and repair order number -- Release Stage: General Availability",
                "description": "This resource defines an individual repair order lookup.\n\nThis only allows for search by a combination of VIN and Repair Order Number.\n\n## <a name=\"Parameters\">Parameters</a> ##\n\n* The `vin` parameter is the vehicle identification number of the vehicle the repair order is created for\n\n* The `roNum` parameter is the Repair Order Number, the identifier for repair orders in our system.\nRepair order numbers are sequential integer values generated in our system.\n\n## <a name=\"Repair Order Number Uniqueness\">Repair Order Number Uniqueness</a> ##\n\nRepair order numbers are generated sequentially in our system. This eventually leads to the reuse of repair order numbers.\nUniqueness instead comes from the combination of repair order number and VIN, as it is impossible in our system to have\ntwo repair orders with the same repair order number for the same VIN.\n\n## <a name=\"Repair Order Statuses\">Repair Order Statuses</a> ##\n\nBelow is a description of the possible status in our system and what they mean\n\n### Completed ###\n\nAll work on the repair order is completed and has been sent to end of day\n\n### Partial Close ###\n\nA subset of the repair order lines have been closed out but open lines remain,\nthe Repair Order will not go to end of day in this state\n\n### Warranty Not Submitted ###\n\nAll work is done on the repair order awaiting submission of warranty claim\n\n### Warranty Submitted ###\n\nAll work is done and warranty claim has been submitted\n\n### Open ###\n\nRepair order has no completed repair order lines and is still available for work\n\n### Void ###\n\nCancelled repair order no longer available for work",
                "operationId": "getRepairOrderUsingGET_1",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roNum",
                        "in": "path",
                        "description": "The repair order number for a repair order.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairOrder"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{vin}/{roNum}/line": {
            "post": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Add a single Repair Order line to a pre-existing Repair Order -- Release Stage: General Availability",
                "description": "A RepairOrderLine identifies a single repair or service to be performed on the vehicle, e.g. rotate tires. A RepairOrderLine is associated with a specific RepairOrder, and a RepairOrder can contain multiple RepairOrderLines.\n\nThis POST request can add new RepairOrderLines to a pre-existing RepairOrder. The RepairOrder you are adding a line to must have empty lines available. A maximum of 26 lines are supported, and are \"numbered\" from `A` to `Z`.\n\nThis request uses the `vin` of a RepairOrder's `vehicle` as well as the `roNumber` to associate a RepairOrderLine with the correct RepairOrder.\n\n## Optionally provide an `opCode` ##\nUse the `GET /v2/{company}/fixed_ops/service_operations` request to get a listing of a dealership's existing ServiceOperations.\n\nProviding the `opCode` of the ServiceOperation in a RepairOrderLine will pre-fill shared fields such as `complaint`, `cause`, and `correction` so that you don't have to fill these in yourself.\n\nThese values are used as defaults, but you can override them by providing your own values. This allows you to use the defaults as you wish, but mix in custom values if necessary.\n\n## <a name=\"RO_Line_Requirements\">Requirements</a> ##\n\n### Provide a `payType` ###\n\nIt is required that you select a `payType` when adding a RepairOrderLine. This field indicates how the work for the RepairOrderLine will be paid for.\n\n* `CUSTOMER`, the customer will be billed.\n* `SERVICE_CONTRACT`, the work is covered under a contract that the customer purchased, e.g. a contract that pays for any oil changes within a period of time.\n* `INTERNAL`, the dealership itself will be billed.\n* `WARRANTY`, the work is covered under the vehicle's warranty.\n\n## Recommendations ##\n\nA Repair Order line can contain a list of Parts that would be \"quoted\" to the ro line when it is created.  The process in the dealership involves someone from the Parts Department to manually \"sell\" the parts to a line on the repair order.\n\nThe RepairOrder that is returned will contain a list of quoted parts as one of the root fields at the top-level (header) of the object.  The repair order lines parts list will be empty because they have not been billed to the repair order.",
                "operationId": "addRepairOrderLineUsingPOST_1",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The `vin` of the vehicle attached to the RepairOrder you want to add the line to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roNum",
                        "in": "path",
                        "description": "The `roNumber` of the RepairOrder you want to add the line to",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "roLine",
                        "description": "roLine",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRepairOrderLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/RepairOrderLine"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/repair_orders/{vin}/{roNum}/recommended_services": {
            "get": {
                "tags": [
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Retrieve recommended services for a repair order by vin and repair order number -- Release Stage: General Availability",
                "operationId": "getRecommendedServicesUsingGET_1",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roNum",
                        "in": "path",
                        "description": "The repair order number for a repair order.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RecommendedServices"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/service_advisors": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get a listing of all service advisors for the company -- Release Stage: General Availability",
                "operationId": "getServiceAdvisorsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceAdvisor"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/service_operations": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get a listing of all default operation codes for the company -- Release Stage: General Availability",
                "operationId": "getServiceOperationsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceOperation"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/service_techs": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get a listing of all service technicians for the company -- Release Stage: General Availability",
                "operationId": "getServiceTechsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceTechnician"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/fixed_ops/setup": {
            "get": {
                "tags": [
                    "Fixed Ops - Appointments",
                    "Fixed Ops - Repair Orders"
                ],
                "summary": "Get fixed operations setup information for the company -- Release Stage: General Availability",
                "operationId": "getFixedOpsSetupUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FixedOpsSetup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/health": {
            "get": {
                "tags": [
                    "OpenMate V2"
                ],
                "summary": "Retrieve health statuses of the available services -- Release Stage: General Availability",
                "operationId": "reportHealthUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiHealthStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/info": {
            "get": {
                "tags": [
                    "OpenMate V2"
                ],
                "summary": "Retrieve general info about OpenMate -- Release Stage: General Availability",
                "operationId": "getInfoUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OpenMateInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/reports/service_tech_hours": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Request generation of the service tech hours report -- Release Stage: General Availability",
                "description": "# Service Tech Hours Report\n\nThe Service Tech Hours report shows the amount of hours each Service Technician worked on the given Repair Order Line.\nThis report is returned as the content field of the response ExtractReport, formatted as a CSV. The report's data is based on the date range passed in the query parameters,\nwhich represent the date that the Repair Order was opened. This report also only displays History Repair Orders, excluding WIP Repair Orders.\n\n# Report Structure\nThe report consists of the following fields (columns):\n* Svc_adv - The ID of the Service Advisor for the Repair Order\n* RO_number - The Repair Order number\n* Line - The character defining which Line of the Repair Order this is\n* Tech_hrs_1 - The amount of hours the first Service Technician worked on this Line of the Repair Order\n* Tech_hrs_2 - The amount of hours the second Service Technician worked on this Line of the Repair Order\n* Tech_hrs_3 - The amount of hours the third Service Technician worked on this Line of the Repair Order\n* Tech_1 - The ID of the first Service Technician on the Repair Order Line\n* Tech_2 - The ID of the second Service Technician on the Repair Order Line\n* Tech_3 - The ID of the third Service Technician on the Repair Order Line\n* RO Line EOD Date - The date (formatted ***MM-DD-YYYY***) that the Line on the Repair Order was sent to Accounting\n\n\n",
                "operationId": "generateTechHoursReportUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "The starting date for the report data. Format **`YYYY-MM-DD`**. This filter requires additional query parameter `end_date`.If not provided will default to today",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "The ending date for the report data. Format **`YYYY-MM-DD`**. This filter requires additional query parameter `start_date`.If not provided will default to today",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExtractReport"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Retrieve all inventory vehicles with optional status and type filters. -- Release Stage: General Availability",
                "operationId": "findVehiclesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The vehicle status. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AVAILABLE",
                                "ON_ORDER",
                                "SOLD",
                                "HOLD",
                                "NOT_AVAILABLE",
                                "ASSIGNED_BY_MANUFACTURER",
                                "INACTIVE",
                                "WHOLESALE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "AVAILABLE",
                            "ON_ORDER",
                            "SOLD",
                            "HOLD",
                            "NOT_AVAILABLE",
                            "ASSIGNED_BY_MANUFACTURER",
                            "INACTIVE",
                            "WHOLESALE"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The vehicle type. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "NEW",
                                "USED",
                                "DEMO",
                                "OTHER"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "NEW",
                            "USED",
                            "DEMO",
                            "OTHER"
                        ]
                    },
                    {
                        "name": "last_modified_after",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "last_modified_before",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "creation_date_before",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "creation_date_after",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 200. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 200,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory vehicle retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryVehicle"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory/active": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Retrieve only active inventory vehicles with optional status and type filters. -- Release Stage: General Availability",
                "operationId": "findOnlyActiveVehiclesUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The vehicle status. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AVAILABLE",
                                "ON_ORDER",
                                "SOLD",
                                "HOLD",
                                "NOT_AVAILABLE",
                                "ASSIGNED_BY_MANUFACTURER",
                                "INACTIVE",
                                "WHOLESALE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "AVAILABLE",
                            "ON_ORDER",
                            "SOLD",
                            "HOLD",
                            "NOT_AVAILABLE",
                            "ASSIGNED_BY_MANUFACTURER",
                            "INACTIVE",
                            "WHOLESALE"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The vehicle type. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "NEW",
                                "USED",
                                "DEMO",
                                "OTHER"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "NEW",
                            "USED",
                            "DEMO",
                            "OTHER"
                        ]
                    },
                    {
                        "name": "last_modified_after",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "last_modified_before",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "creation_date_before",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "creation_date_after",
                        "in": "query",
                        "description": "yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Used for paging. Number of records to skip. When not provided this parameter defaults to 0. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Used for paging. Limit response size to this number of records. When not provided this parameter defaults to 200. For more information on this field can be found <a href=\"#Offset_And_Limit\">here</a>. ",
                        "required": false,
                        "type": "integer",
                        "default": 200,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory vehicle retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryVehicle"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory/ownership": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Retrieve the inventory ownership configuration -- Release Stage: General Availability",
                "description": "This endpoint provides the setup information for the dealership vehicle inventory customer records.  \nEach inventory type links to a customer record identifying vehicles of that type.  \n\nIn this case, the customer record identifies the dealership itself.  \n\nExamples include 'NEW INVENTORY' and 'USED INVENTORY'.",
                "operationId": "getOwnershipUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory Ownership configuration retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryOwnership"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory/setup": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Get setup information for the vehicle inventory system -- Release Stage: General Availability",
                "operationId": "getSetupUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VehicleInventorySetup"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory/stock_number/{stockNumber}": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Retrieve inventory vehicle by stock number and optionally statuses -- Release Stage: General Availability",
                "operationId": "findByStockNumberUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The vehicle status. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AVAILABLE",
                                "ON_ORDER",
                                "SOLD",
                                "HOLD",
                                "NOT_AVAILABLE",
                                "ASSIGNED_BY_MANUFACTURER",
                                "INACTIVE",
                                "WHOLESALE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "AVAILABLE",
                            "ON_ORDER",
                            "SOLD",
                            "HOLD",
                            "NOT_AVAILABLE",
                            "ASSIGNED_BY_MANUFACTURER",
                            "INACTIVE",
                            "WHOLESALE"
                        ]
                    },
                    {
                        "name": "stockNumber",
                        "in": "path",
                        "description": "The stock number for a vehicle.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory vehicle retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryVehicle"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Partial update of inventory vehicle -- Release Stage: General Availability",
                "description": "This resource defines a partial-update of a vehicle via PATCH.\n\nNote that **only** vehicles with a status of AVAILABLE can be patched.\n\nIn the event that another user of the system is currently editing the vehicle that is to be updated, the vehicle will\nbe locked and a `ConcurrentAccessException` will be returned.\n\nSee the HTTP PATCH and Json Merge Patch section of the Overview\nfor details.",
                "operationId": "patchUsingPATCH_3",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "stockNumber",
                        "in": "path",
                        "description": "The stock number for a vehicle.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vehiclePatch",
                        "description": "vehiclePatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateVehicle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventory vehicle updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/InventoryVehicle"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicle_inventory/vin/{vin}": {
            "get": {
                "tags": [
                    "Vehicle Inventory"
                ],
                "summary": "Retrieve inventory vehicle by vin with optional status filter. -- Release Stage: General Availability",
                "operationId": "findByVinUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The vehicle status. To see all valid values use the Swagger 'Try it now' button. This query parameter **is** repeatable.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AVAILABLE",
                                "ON_ORDER",
                                "SOLD",
                                "HOLD",
                                "NOT_AVAILABLE",
                                "ASSIGNED_BY_MANUFACTURER",
                                "INACTIVE",
                                "WHOLESALE"
                            ]
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "AVAILABLE",
                            "ON_ORDER",
                            "SOLD",
                            "HOLD",
                            "NOT_AVAILABLE",
                            "ASSIGNED_BY_MANUFACTURER",
                            "INACTIVE",
                            "WHOLESALE"
                        ]
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryVehicle"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicles": {
            "post": {
                "tags": [
                    "Fixed Ops - Service Vehicles"
                ],
                "summary": "Create a new vehicle -- Release Stage: General Availability",
                "operationId": "createUsingPOST_1",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "vehicle",
                        "description": "vehicle",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Vehicle created successfully",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicles/owner/{uuid}": {
            "post": {
                "tags": [
                    "Fixed Ops - Service Vehicles"
                ],
                "summary": "Associate a vehicle to a customer -- Release Stage: General Availability",
                "description": "Associate vehicle ownership to an existing customer.\n\nIf the vehicle already exists, only the `vin` field is required in the request body.  *Other fields will be ignored if the vehicle already exists*.\n\nIf the vehicle does not exist in the system it will be created using the data specified in the request body. \n\nNote that the customer **must** exist in the system.",
                "operationId": "associateVehicleUsingPOST",
                "consumes": [
                    "application/json;charset=UTF-8"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The unique identifier for a customer.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vehicleModel",
                        "description": "vehicleModel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "204": {
                        "description": "Vehicle associated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicles/owner/{vin}": {
            "delete": {
                "tags": [
                    "Fixed Ops - Service Vehicles"
                ],
                "summary": "Disassociate a vehicle from a customer -- Release Stage: General Availability",
                "operationId": "disassociateVehicleUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Vehicle disassociated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/v2/{company}/vehicles/{vin}": {
            "get": {
                "tags": [
                    "Fixed Ops - Service Vehicles"
                ],
                "summary": "Retrieve a vehicle by VIN -- Release Stage: General Availability",
                "operationId": "retrieveByVinUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Fixed Ops - Service Vehicles"
                ],
                "summary": "Use patch to update a vehicle -- Release Stage: General Availability",
                "operationId": "patchUsingPATCH_2",
                "consumes": [
                    "application/merge-patch+json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "description": "company",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vin",
                        "in": "path",
                        "description": "The Vehicle Identification Number for a vehicle.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vehicleMergePatch",
                        "description": "vehicleMergePatch",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "User Authentication": [
                            
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "User Authentication": {
            "type": "basic"
        }
    },
    "definitions": {
        "Accessory": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Dealership cost of the accessory",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the accessory",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The position of the accessory in the accessories list when the deal is viewed through the DMS user interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                },
                "grossCreditedTo": {
                    "type": "string",
                    "description": "Whether the accessory gross is credited to the front or back.",
                    "allowEmptyValue": false,
                    "enum": [
                        "FRONT",
                        "BACK"
                    ]
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the accessory",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the accessory",
                    "allowEmptyValue": false
                },
                "selected": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the accessory is selected",
                    "allowEmptyValue": false
                }
            },
            "title": "Accessory"
        },
        "AccessoryItemModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The accessory description.",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The displayPosition of the accessory in the accessories list when the deal is viewed through the DMS user interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                },
                "grossCreditedTo": {
                    "type": "string",
                    "description": "Whether the accessory gross is credited to the front or back.",
                    "allowEmptyValue": false,
                    "enum": [
                        "FRONT",
                        "BACK"
                    ]
                },
                "includedByDefault": {
                    "type": "boolean",
                    "example": false,
                    "description": "If the accessory is included by default.",
                    "allowEmptyValue": false
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the accessory is to be paid (Cap/Inception/Per payment). Only applicable to LEASE accessory setups.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the accessory.",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Tax rate percentage applied to the accessory.",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the accessory gross is taxable.",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The accessory type.\n* NONE: None -- Default type if the setup does not have a type selected.\n* EXCESS_PROTECTION: Excess Protection -- Insurance purchased by customer to protect against mileage overage and incidental damage to the vehicle. Specific to Toyota\n* HARD_ADD: Hard Add -- An accessory that is attached to the vehicle, ie., a tow package or running board. Hard adds are typically \"Front Gross\" accessories where as products are \"Back Gross\" accessories. Specific to Ford\n* KEY_REPLACEMENT: Key Replacement -- Specific to Ford\n* PAINT_AND_FABRIC: Paint & Fabric -- Specific to Ford\n* THEFT_DETERRENT: Theft Deterrent -- A device sold by the dealer used to deter theft of a vehicle. Specific to Ford\n* TIRE_AND_WHEEL: Tire & Wheel -- Certain states or regions require this to be displayed as insurance. Specific to Ford\n* WEAR_CARE: Wear Care -- Specific to Ford",
                    "allowEmptyValue": false,
                    "enum": [
                        "NONE",
                        "EXCESS_PROTECTION",
                        "HARD_ADD",
                        "KEY_REPLACEMENT",
                        "PAINT_AND_FABRIC",
                        "THEFT_DETERRENT",
                        "TIRE_AND_WHEEL",
                        "WEAR_CARE"
                    ]
                }
            },
            "title": "AccessoryItemModel"
        },
        "AccessorySetup": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "The list of specific accessories for this state and financing type",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/AccessoryItemModel"
                    }
                },
                "dealType": {
                    "type": "string",
                    "description": "The type of deal (Finance/Lease/etc) that this accessory is applicable to",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "state": {
                    "type": "string",
                    "description": "The state abbreviation",
                    "allowEmptyValue": false
                }
            },
            "title": "AccessorySetup",
            "description": "Accessory default values"
        },
        "AccountOpeningBalance": {
            "type": "object",
            "required": [
                "accountNumber"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Unique account number of the GL account",
                    "allowEmptyValue": false
                },
                "openingBalance": {
                    "type": "number",
                    "description": "The opening balance of the GL account at the beginning of the given time frame.",
                    "allowEmptyValue": false
                },
                "openingUnitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the GL account tracks a number of units for a particular scenario (ex. number of cars sold) then this is that quantity at the beginning of the given time frame.",
                    "allowEmptyValue": false
                }
            },
            "title": "AccountOpeningBalance"
        },
        "AccountingInvoice": {
            "type": "object",
            "required": [
                "checkDate",
                "checkNumber",
                "comment",
                "createdBy",
                "discountAmount",
                "dueDate",
                "invoiceAmount",
                "invoiceDate",
                "invoiceDealerNumber",
                "invoiceStatus",
                "openBalance",
                "payAmount",
                "payableGLAccount",
                "posted",
                "purchaseOrders",
                "referenceNumber",
                "transaction",
                "uuid",
                "vendorNumber"
            ],
            "properties": {
                "checkDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the individual payment. Paid invoice only",
                    "allowEmptyValue": false
                },
                "checkNumber": {
                    "type": "string",
                    "description": "Document reference number of the payment. Paid invoice only",
                    "allowEmptyValue": false
                },
                "comment": {
                    "type": "string",
                    "description": "Dealer comments on the invoice",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "description": "Dealership user who created the invoice",
                    "allowEmptyValue": false
                },
                "discountAmount": {
                    "type": "number",
                    "description": "Amount after vendor's allowed discount percentage is applied to the invoice amount",
                    "allowEmptyValue": false
                },
                "discountDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date discount was applied if payment is made and meets discount criteria",
                    "allowEmptyValue": false
                },
                "discountGLAccount": {
                    "description": "GL account used for discount applied to this invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/GLAccount"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The vendor's date that the bill is due",
                    "allowEmptyValue": false
                },
                "invoiceAmount": {
                    "type": "number",
                    "description": "Total value of the invoice",
                    "allowEmptyValue": false
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The vendor's date that the bill was issues",
                    "allowEmptyValue": false
                },
                "invoiceDealerNumber": {
                    "type": "string",
                    "description": "Dealer-facing invoice ID",
                    "allowEmptyValue": false
                },
                "invoiceStatus": {
                    "type": "string",
                    "description": "The status of the invoice",
                    "allowEmptyValue": false,
                    "enum": [
                        "UNPOSTED",
                        "POSTED",
                        "PARTIAL_PAY",
                        "PAID",
                        "PAID_NO_ACCT",
                        "VOIDED",
                        "MARKED",
                        "UNPAID",
                        "ALL"
                    ]
                },
                "openBalance": {
                    "type": "number",
                    "description": "Payable invoice outstanding balance",
                    "allowEmptyValue": false
                },
                "payAmount": {
                    "type": "number",
                    "description": "Total check/payment amount for the invoice",
                    "allowEmptyValue": false
                },
                "payableGLAccount": {
                    "description": "GL account used for this invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/GLAccount"
                },
                "postDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date the invoice was posted if applicable",
                    "allowEmptyValue": false
                },
                "posted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is the invoice pending (false), or posted (true)",
                    "allowEmptyValue": false
                },
                "purchaseOrders": {
                    "type": "array",
                    "description": "Purchase orders that are a part of this invoice",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrder"
                    }
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "Dealer-facing invoice reference number. Typically matches invoice ID",
                    "allowEmptyValue": false
                },
                "transaction": {
                    "description": "The accounting transaction for this invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Transaction"
                },
                "uuid": {
                    "type": "string",
                    "description": "The internal UUID for the invoice. Can be used as a primary key",
                    "allowEmptyValue": false
                },
                "vendorNumber": {
                    "type": "string",
                    "description": "Identifier for the vendor related to this invoice",
                    "allowEmptyValue": false
                },
                "voidDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date the invoice was voided if applicable",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "AccountingInvoice",
            "description": "A full AccountingInvoice as it appears in our system"
        },
        "AccountingSetupInfo": {
            "type": "object",
            "required": [
                "companyName",
                "companyNumber",
                "cutOffDate",
                "fiscalMonth",
                "lastClose",
                "postAheadMonth"
            ],
            "properties": {
                "companyName": {
                    "type": "string",
                    "description": "Human-readable name of the company",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID this setup info is for",
                    "allowEmptyValue": false
                },
                "cutOffDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-10-06",
                    "description": "Date that transactions must be posted later than",
                    "allowEmptyValue": false
                },
                "fiscalMonth": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates which month begins the fiscal year",
                    "allowEmptyValue": false
                },
                "lastClose": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-10",
                    "description": "Year and month of last close",
                    "allowEmptyValue": false
                },
                "postAheadMonth": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates which month transactions must be posted earlier than",
                    "allowEmptyValue": false
                }
            },
            "title": "AccountingSetupInfo"
        },
        "Address": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string",
                    "description": "Line 1 on the address",
                    "allowEmptyValue": false
                },
                "addressLine2": {
                    "type": "string",
                    "description": "Line 2 on the address",
                    "allowEmptyValue": false
                },
                "addressType": {
                    "type": "string",
                    "description": "The type of the address.  Only one address per type is permitted.  Default is RESIDENCE",
                    "allowEmptyValue": false,
                    "enum": [
                        "RESIDENCE",
                        "POSTAL",
                        "BILLING",
                        "SHIPPING",
                        "PREVIOUS"
                    ]
                },
                "city": {
                    "type": "string",
                    "description": "City on the address",
                    "allowEmptyValue": false
                },
                "countryCode": {
                    "type": "string",
                    "description": "Country code on the address",
                    "allowEmptyValue": false
                },
                "county": {
                    "type": "string",
                    "description": "County on the address",
                    "allowEmptyValue": false
                },
                "key": {
                    "type": "string",
                    "description": "The 'patch' key for update",
                    "allowEmptyValue": false
                },
                "sendMail": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer would like to receive postal mail",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "State on the address",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Zip code on the address",
                    "allowEmptyValue": false
                }
            },
            "title": "Address"
        },
        "AgedBalance": {
            "type": "object",
            "required": [
                "current",
                "overNinety",
                "overOneHundredTwenty",
                "overSixty",
                "overThirty",
                "totalBalance"
            ],
            "properties": {
                "current": {
                    "type": "number",
                    "description": "Current balance",
                    "allowEmptyValue": false
                },
                "overNinety": {
                    "type": "number",
                    "description": "Balance between 91 to 120 days old",
                    "allowEmptyValue": false
                },
                "overOneHundredTwenty": {
                    "type": "number",
                    "description": "Balance 121 days or older",
                    "allowEmptyValue": false
                },
                "overSixty": {
                    "type": "number",
                    "description": "Balance between 61 to 90 days old",
                    "allowEmptyValue": false
                },
                "overThirty": {
                    "type": "number",
                    "description": "Balance between 31 to 60 days old",
                    "allowEmptyValue": false
                },
                "totalBalance": {
                    "type": "number",
                    "description": "The sum total of all balances",
                    "allowEmptyValue": false
                },
                "units": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If applicable, a count of inventory units for this balance",
                    "allowEmptyValue": false
                }
            },
            "title": "AgedBalance"
        },
        "ApiError": {
            "type": "object",
            "required": [
                "error",
                "message"
            ],
            "properties": {
                "correlationId": {
                    "type": "string",
                    "description": "Unique identifier generated with the error. Please provide this identifier when requesting help from the Open/Mate support team",
                    "allowEmptyValue": false
                },
                "details": {
                    "type": "array",
                    "description": "List containing further information about the error",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiErrorDetail"
                    }
                },
                "endpointId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The endpoint id the request referred to",
                    "allowEmptyValue": false
                },
                "error": {
                    "type": "string",
                    "description": "OpenMate error type",
                    "allowEmptyValue": false
                },
                "message": {
                    "type": "string",
                    "description": "Message describing the cause of the error",
                    "allowEmptyValue": false
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP request method",
                    "allowEmptyValue": false
                },
                "path": {
                    "type": "string",
                    "description": "The path of the request",
                    "allowEmptyValue": false
                },
                "queryString": {
                    "type": "string",
                    "description": "The request query string from the request made",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "The HTTP status code",
                    "allowEmptyValue": false,
                    "enum": [
                        "100",
                        "101",
                        "102",
                        "103",
                        "200",
                        "201",
                        "202",
                        "203",
                        "204",
                        "205",
                        "206",
                        "207",
                        "208",
                        "226",
                        "300",
                        "301",
                        "302",
                        "303",
                        "304",
                        "305",
                        "307",
                        "308",
                        "400",
                        "401",
                        "402",
                        "403",
                        "404",
                        "405",
                        "406",
                        "407",
                        "408",
                        "409",
                        "410",
                        "411",
                        "412",
                        "413",
                        "414",
                        "415",
                        "416",
                        "417",
                        "418",
                        "419",
                        "420",
                        "421",
                        "422",
                        "423",
                        "424",
                        "426",
                        "428",
                        "429",
                        "431",
                        "451",
                        "500",
                        "501",
                        "502",
                        "503",
                        "504",
                        "505",
                        "506",
                        "507",
                        "508",
                        "509",
                        "510",
                        "511"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "description": "Date/time the error was generated with an offset from UTC in the ISO-8601 system.",
                    "allowEmptyValue": false
                },
                "version": {
                    "type": "string",
                    "description": "The version of Open/Mate v2",
                    "allowEmptyValue": false
                }
            },
            "title": "ApiError",
            "description": "Error object describing the failure and its cause"
        },
        "ApiErrorDetail": {
            "type": "object",
            "required": [
                "error",
                "message"
            ],
            "properties": {
                "error": {
                    "type": "string",
                    "description": "OpenMate error type",
                    "allowEmptyValue": false
                },
                "message": {
                    "type": "string",
                    "description": "Message describing the cause of the error",
                    "allowEmptyValue": false
                }
            },
            "title": "ApiErrorDetail"
        },
        "ApiHealthStatus": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "string",
                    "description": "Name of the API reporting the health status",
                    "allowEmptyValue": false
                },
                "details": {
                    "type": "string",
                    "description": "Additional details about the health status",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "Health status of the API\n* AVAILABLE: The API is reporting healthy and available for request processing\n* UNAVAILABLE: The API is reporting unhealthy and not available for request processing\n* UNKNOWN: The API is an unknown state",
                    "allowEmptyValue": false,
                    "enum": [
                        "AVAILABLE",
                        "UNAVAILABLE",
                        "UNKNOWN"
                    ]
                }
            },
            "title": "ApiHealthStatus",
            "description": "Object describing the health status of an API"
        },
        "ApiWarning": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Details describing the warning",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of warning",
                    "allowEmptyValue": false
                }
            },
            "title": "ApiWarning",
            "description": "Warning object describing non-fatal update errors"
        },
        "Appointment": {
            "type": "object",
            "required": [
                "appointmentEndDateTime",
                "appointmentStartDateTime",
                "appointmentStatus",
                "customer",
                "serviceAdvisor",
                "uuid",
                "vehicle"
            ],
            "properties": {
                "appointmentEndDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Scheduled end date/time for the appointment",
                    "allowEmptyValue": false
                },
                "appointmentNotes": {
                    "type": "string",
                    "description": "General purpose notes or remarks for the appointment",
                    "allowEmptyValue": false
                },
                "appointmentNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The service appointment number for this appointment.",
                    "allowEmptyValue": false
                },
                "appointmentStartDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Scheduled start date/time for the appointment",
                    "allowEmptyValue": false
                },
                "appointmentStatus": {
                    "type": "string",
                    "description": "The current status of the appointment",
                    "allowEmptyValue": false,
                    "enum": [
                        "PENDING",
                        "COMPLETED"
                    ]
                },
                "customer": {
                    "description": "Customer this appointment is associated with",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "deliveryFlags": {
                    "type": "object",
                    "description": "Indicates transportation method of customer, defaults are WAITER and PICKUP, dealership can define custom values outside of defaults",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated mileage of the vehicle at time of appointment",
                    "allowEmptyValue": false
                },
                "repairOrderLines": {
                    "type": "array",
                    "description": "Repair order lines for scheduled work on the vehicle",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrderLine"
                    }
                },
                "roNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The repair order that was opened from this appointment.  This is only populated for completed appointments.",
                    "allowEmptyValue": false
                },
                "serviceAdvisor": {
                    "description": "Service advisor associated with appointment",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceAdvisor"
                },
                "serviceTech": {
                    "description": "Service tech associated with appointment",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceTechnician"
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID for the appointment. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                },
                "vehicle": {
                    "description": "Vehicle this appointment is associated with",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Vehicle"
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "Appointment"
        },
        "AppointmentToRepairOrder": {
            "type": "object",
            "properties": {
                "deliveryFlags": {
                    "type": "object",
                    "description": "Indicates transportation method of customer, defaults are WAITER and PICKUP, dealership can define custom values outside of defaults. If flags are provided that are not defined in the dealership then they are ignored.",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "hangTag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Hang tag used in dealership to track the vehicle for a repair order",
                    "allowEmptyValue": false
                },
                "odometerEstimated": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is odometer reading estimated",
                    "allowEmptyValue": false
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading at time of service",
                    "allowEmptyValue": false
                },
                "promiseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time repair order completion date given to customer. This value will override any promiseText value passed in.",
                    "allowEmptyValue": false
                },
                "promiseText": {
                    "type": "string",
                    "description": "An alternative non-date promise text value, e.g. 'tomorrow pm'. This value is limited to 15 characters max.",
                    "allowEmptyValue": false
                }
            },
            "title": "AppointmentToRepairOrder"
        },
        "Buyer": {
            "type": "object",
            "properties": {
                "formName": {
                    "type": "string",
                    "description": "Name of the buyer on the deal which is used in subsequent forms printed at the dealership. This name may or may not match the buyer identity information.",
                    "allowEmptyValue": false
                },
                "identity": {
                    "description": "Identifying information for the buyer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                }
            },
            "title": "Buyer"
        },
        "Company": {
            "type": "object",
            "properties": {
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The DMS company number that is visible to an end-user at the dealership. This number correlates to the openMateId (dealer endpoint id) but is NOT interchangeable and is exposed through the API for support purposes.",
                    "allowEmptyValue": false
                },
                "openMateId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint id, also known as Open/Mate id. This is unique to the Open/Mate API and an end-user at the dealership may or may not be aware of this id.",
                    "allowEmptyValue": false
                }
            },
            "title": "Company"
        },
        "Contact": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string",
                    "description": "Contact's address line 1",
                    "allowEmptyValue": false
                },
                "address2": {
                    "type": "string",
                    "description": "Contact's address line 2",
                    "allowEmptyValue": false
                },
                "city": {
                    "type": "string",
                    "description": "Contact's city",
                    "allowEmptyValue": false
                },
                "email": {
                    "type": "string",
                    "description": "Contact's email address",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Contact's name",
                    "allowEmptyValue": false
                },
                "phone": {
                    "type": "string",
                    "description": "Contact's phone number",
                    "allowEmptyValue": false
                },
                "phoneExtension": {
                    "type": "string",
                    "description": "Contact's phone number extension",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "Contact's state",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Contact's zip code",
                    "allowEmptyValue": false
                }
            },
            "title": "Contact"
        },
        "ControlBeginBalance": {
            "type": "object",
            "required": [
                "accountNumber",
                "balance",
                "companyNumber"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The GL account for the balance",
                    "allowEmptyValue": false
                },
                "balance": {
                    "type": "number",
                    "description": "The balance in dollars",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the GL account belongs to",
                    "allowEmptyValue": false
                }
            },
            "title": "ControlBeginBalance"
        },
        "CreateAcquisitionFee": {
            "type": "object",
            "required": [
                "paidAt"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the fee",
                    "allowEmptyValue": false
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the fee is to be paid (Cap/Inception). Only CAP and INCEPTION are valid for the acquisition fee.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate the fee should be taxed at if it is taxable",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the fee should be taxed",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateAcquisitionFee"
        },
        "CreateAppointment": {
            "type": "object",
            "required": [
                "appointmentStartDateTime",
                "customer",
                "serviceAdvisor",
                "vehicle"
            ],
            "properties": {
                "appointmentEndDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Scheduled end date/time for the appointment.  If not provided this will be calculated  based on the operation lines provided in the appointment or defaulted to 30 minutes.",
                    "allowEmptyValue": false
                },
                "appointmentNotes": {
                    "type": "string",
                    "description": "General purpose notes or remarks for the appointment",
                    "allowEmptyValue": false
                },
                "appointmentStartDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Scheduled start date/time for the appointment",
                    "allowEmptyValue": false
                },
                "customer": {
                    "description": "UUID for customer on the appointment",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "deliveryFlags": {
                    "type": "object",
                    "description": "Indicates transportation method of customer, defaults are WAITER and PICKUP, dealership can define custom values outside of defaults",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Estimated mileage of the vehicle at time of appointment",
                    "allowEmptyValue": false
                },
                "repairOrderLines": {
                    "type": "array",
                    "description": "Repair order lines for scheduled work on the vehicle",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateRepairOrderLine"
                    }
                },
                "serviceAdvisor": {
                    "description": "Service advisor assigned to appointment",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceAdvisorId"
                },
                "serviceTech": {
                    "description": "Service tech associated with appointment",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceTechId"
                },
                "vehicle": {
                    "description": "Vehicle on the appointment.  Minimally, VIN or year/make/model are required",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateAppointmentVehicle"
                }
            },
            "title": "CreateAppointment"
        },
        "CreateAppointmentVehicle": {
            "type": "object",
            "properties": {
                "make": {
                    "type": "string",
                    "description": "Manufacturer of the vehicle",
                    "allowEmptyValue": false
                },
                "model": {
                    "type": "string",
                    "description": "Brand of vehicle from manufacturer",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle identification number",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Year of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateAppointmentVehicle"
        },
        "CreateBalloonDeal": {
            "type": "object",
            "required": [
                "buyer",
                "lender",
                "saleDate",
                "taxState"
            ],
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. Max of 15 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "fees": {
                    "type": "array",
                    "description": "Any fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealFee"
                    }
                },
                "incentives": {
                    "type": "array",
                    "description": "Any incentives on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealIncentive"
                    }
                },
                "insurance": {
                    "description": "Any Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealInsurance"
                },
                "leaseTerms": {
                    "description": "Specific terms for lease deals",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateLeaseTerms"
                },
                "lender": {
                    "description": "The Lender on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealLender"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal.",
                    "allowEmptyValue": false
                },
                "payment": {
                    "description": "Payment information about the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPayment"
                },
                "primarySalesperson": {
                    "description": "The primary salesperson for the deal.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealSalesperson"
                },
                "rebates": {
                    "type": "array",
                    "description": "Any rebates on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealRebate"
                    }
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer. This field is required.",
                    "allowEmptyValue": false
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "Any service contracts on the deal. Max of 3 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealServiceContract"
                    }
                },
                "taxState": {
                    "type": "string",
                    "description": "The state the taxes are to be applied for the deal.",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "Terms of the payments on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPaymentTerms"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Any vehicle trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealVehicleTradeIn"
                    }
                },
                "vehicle": {
                    "description": "Vehicle on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealVehicle"
                },
                "vsi": {
                    "type": "number",
                    "format": "double",
                    "description": "Vendor single interest insurance (VSI) amount",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateBalloonDeal"
        },
        "CreateCashDeal": {
            "type": "object",
            "required": [
                "buyer",
                "lender",
                "saleDate",
                "taxState"
            ],
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. Max of 15 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "fees": {
                    "type": "array",
                    "description": "Any fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealFee"
                    }
                },
                "incentives": {
                    "type": "array",
                    "description": "Any incentives on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealIncentive"
                    }
                },
                "insurance": {
                    "description": "Any Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealInsurance"
                },
                "lender": {
                    "description": "The Lender on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealLender"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal.",
                    "allowEmptyValue": false
                },
                "primarySalesperson": {
                    "description": "The primary salesperson for the deal.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealSalesperson"
                },
                "rebates": {
                    "type": "array",
                    "description": "Any rebates on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealRebate"
                    }
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer. This field is required.",
                    "allowEmptyValue": false
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "Any service contracts on the deal. Max of 3 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealServiceContract"
                    }
                },
                "taxState": {
                    "type": "string",
                    "description": "The state the taxes are to be applied for the deal.",
                    "allowEmptyValue": false
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Any vehicle trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealVehicleTradeIn"
                    }
                },
                "vehicle": {
                    "description": "Vehicle on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealVehicle"
                }
            },
            "title": "CreateCashDeal"
        },
        "CreateDealAccessory": {
            "type": "object",
            "required": [
                "description",
                "displayPosition"
            ],
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "The cost of the accessory",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the accessory",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The position of the accessory in the accessories list when the deal is viewed through the DMS user interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the accessory",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate the accessory is taxed at",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the accessory is taxable",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealAccessory"
        },
        "CreateDealBuyer": {
            "type": "object",
            "properties": {
                "formName": {
                    "type": "string",
                    "description": "Name of the buyer on the deal which is used in subsequent forms printed at the dealership. This name may or may not match the buyer identity information. This field must be populated if buyer uuid is not. If you provide a buyer uuid then this field cannot be provided.",
                    "allowEmptyValue": false
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID for the customer. This is the primary key for use via Open/Mate APIs. If not provided, formName field must be populated. If UUID is provided then the formName cannot be provided, it will be automatically set using the customer record.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealBuyer"
        },
        "CreateDealFee": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the fee",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The DMS user visible code",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the fee",
                    "allowEmptyValue": false
                },
                "included": {
                    "type": "boolean",
                    "example": false,
                    "description": "If the fee should be included in the deal's valuation",
                    "allowEmptyValue": false
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the fee should be paid (CAP/INCEPTION). PER_PAYMENT is not valid for fees.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate of the fee if the fee is taxable",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the fee should be taxed",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealFee",
            "description": "Fee to add on deal create"
        },
        "CreateDealIncentive": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "adjustCommission": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the incentive adjusts commission values paid on the deal",
                    "allowEmptyValue": false
                },
                "amount": {
                    "type": "number",
                    "description": "The amount of the incentive. A positive incentive amount will decrease the deal's calculated profit by that amount, while a negative incentive amount will increase the deal's calculated profit by that amount. If the amount increases the dealer gross then send a negative value (ex. -379.00; if the amount decreases the dealer gross then send a positive value (ex. 379.00)",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The code of the incentive",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incentive",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealIncentive"
        },
        "CreateDealInsurance": {
            "type": "object",
            "properties": {
                "accidentAndHealth": {
                    "description": "Accident and Health insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateInsuranceItemModel"
                },
                "gap": {
                    "description": "Gap insurance on the deal.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateGapInsuranceModel"
                },
                "life": {
                    "description": "Life insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateInsuranceItemModel"
                }
            },
            "title": "CreateDealInsurance"
        },
        "CreateDealLender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the Lender",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealLender"
        },
        "CreateDealPayment": {
            "type": "object",
            "properties": {
                "daysToFirstPayment": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days until the first payment is due",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealPayment"
        },
        "CreateDealPaymentTerms": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage rate used in payment calculation",
                    "allowEmptyValue": false
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time of the payment terms, typically in months",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealPaymentTerms",
            "description": "Rate details for financing"
        },
        "CreateDealRebate": {
            "type": "object",
            "required": [
                "rebateSetupItemId"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The rebate's amount",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The rebate's description",
                    "allowEmptyValue": false
                },
                "rebateSetupItemId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The rebate setup id. This id is unique in the rebate setups but the deal can have multiples of the same rebate.",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the rebate should be taxed.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealRebate"
        },
        "CreateDealSalesperson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the salesperson. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealSalesperson"
        },
        "CreateDealServiceContract": {
            "type": "object",
            "required": [
                "description",
                "id"
            ],
            "properties": {
                "contractNumber": {
                    "type": "string",
                    "description": "The service contract number. This is used as an identifier for the customer for reference on future claims, as well as internal reporting.",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "Dealership cost of the service contract",
                    "allowEmptyValue": false
                },
                "deductible": {
                    "type": "number",
                    "description": "The flat amount deducted before coverage begins",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the service contract",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the service contract",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the service contract",
                    "allowEmptyValue": false
                },
                "provider": {
                    "type": "string",
                    "description": "Name of the provider offering the service contract",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate the service contract should be taxed at if it is taxable (see field taxable",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the service contract should be taxed",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "The terms of the service contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceContractTerm"
                }
            },
            "title": "CreateDealServiceContract"
        },
        "CreateDealVehicle": {
            "type": "object",
            "properties": {
                "overrideMsrp": {
                    "type": "number",
                    "description": "The overridden MSRP of the vehicle for this deal. **NOTE** This does not override the MSRP value on the vehicle record. This is only used to override the MSRP field on the deal.",
                    "allowEmptyValue": false
                },
                "sellingPrice": {
                    "type": "number",
                    "description": "Selling price of the vehicle",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "Stock number assigned to vehicle by dealership",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle identification number.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealVehicle"
        },
        "CreateDealVehicleTradeIn": {
            "type": "object",
            "properties": {
                "actualCashValue": {
                    "type": "number",
                    "description": "Cash value of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "allowance": {
                    "type": "number",
                    "description": "The allowance value of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "body": {
                    "type": "string",
                    "description": "Body of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "make": {
                    "type": "string",
                    "description": "Make of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "miles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Mileage of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "model": {
                    "type": "string",
                    "description": "Model of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "payoff": {
                    "type": "number",
                    "description": "Payoff balance of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "Stock number assigned to vehicle by dealership",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle identification number.",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Year of the vehicle trade in",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDealVehicleTradeIn"
        },
        "CreateDispositionFee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the fee",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateDispositionFee"
        },
        "CreateFinanceDeal": {
            "type": "object",
            "required": [
                "buyer",
                "lender",
                "saleDate",
                "taxState"
            ],
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. Max of 15 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "fees": {
                    "type": "array",
                    "description": "Any fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealFee"
                    }
                },
                "incentives": {
                    "type": "array",
                    "description": "Any incentives on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealIncentive"
                    }
                },
                "insurance": {
                    "description": "Any Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealInsurance"
                },
                "lender": {
                    "description": "The Lender on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealLender"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal.",
                    "allowEmptyValue": false
                },
                "payment": {
                    "description": "Payment information about the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPayment"
                },
                "primarySalesperson": {
                    "description": "The primary salesperson for the deal.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealSalesperson"
                },
                "rebates": {
                    "type": "array",
                    "description": "Any rebates on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealRebate"
                    }
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer. This field is required.",
                    "allowEmptyValue": false
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "Any service contracts on the deal. Max of 3 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealServiceContract"
                    }
                },
                "taxState": {
                    "type": "string",
                    "description": "The state the taxes are to be applied for the deal.",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "Terms of the payments on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPaymentTerms"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Any vehicle trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealVehicleTradeIn"
                    }
                },
                "vehicle": {
                    "description": "Vehicle on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealVehicle"
                },
                "vsi": {
                    "type": "number",
                    "format": "double",
                    "description": "Vehicle single interest insurance (VSI) amount",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateFinanceDeal"
        },
        "CreateGapInsuranceModel": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The identifying code for the GAP insurance.",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "The cost of the insurance.",
                    "allowEmptyValue": false
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the insurance is to be paid.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "premium": {
                    "type": "number",
                    "description": "The premium amount of the insurance.",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate at which the insurance should be taxed.",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the insurance should be taxed.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateGapInsuranceModel"
        },
        "CreateInsuranceItemModel": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The identifying code for the insurance. Please adhere to the following logic for determining what code to send when adding insurance to a deal: \n* When sending a premiumOverride with accident and health insurance the code must always be 'Y'. \n* When sending a premiumOverride with life insurance the code can be either 'S' or 'J' depending on if its for Single or Joint insurance respectively. \n* When not sending a premiumOverride and using the default insurance calculation for accident and health insurance, if the insurance has enhanced insurance setup use one of those codes, otherwise use 'Y'. \n* When not sending a premiumOverride and using the default insurance calculation for life insurance, if the insurance has enhanced insurance setups use one of those codes, otherwise again use code 'S' or 'J'.",
                    "allowEmptyValue": false
                },
                "premiumOverride": {
                    "type": "number",
                    "description": "The overridden premium amount for the insurance.  If not provided this will be calculated inside of the DMS based on the deal structure and insurance code's setup.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateInsuranceItemModel"
        },
        "CreateLeaseDeal": {
            "type": "object",
            "required": [
                "buyer",
                "lender",
                "saleDate",
                "taxState"
            ],
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. Max of 15 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealBuyer"
                },
                "fees": {
                    "type": "array",
                    "description": "Any fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealFee"
                    }
                },
                "incentives": {
                    "type": "array",
                    "description": "Any incentives on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealIncentive"
                    }
                },
                "insurance": {
                    "description": "Any Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealInsurance"
                },
                "leaseTerms": {
                    "description": "Specific terms for lease deals",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateLeaseTerms"
                },
                "lender": {
                    "description": "The Lender on the deal. This field is required.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealLender"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal.",
                    "allowEmptyValue": false
                },
                "payment": {
                    "description": "Payment information about the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPayment"
                },
                "primarySalesperson": {
                    "description": "The primary salesperson for the deal.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealSalesperson"
                },
                "rebates": {
                    "type": "array",
                    "description": "Any rebates on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealRebate"
                    }
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer. This field is required.",
                    "allowEmptyValue": false
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "Any service contracts on the deal. Max of 3 allowed.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealServiceContract"
                    }
                },
                "taxState": {
                    "type": "string",
                    "description": "The state the taxes are to be applied for the deal.",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "Terms of the payments on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealPaymentTerms"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Any vehicle trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateDealVehicleTradeIn"
                    }
                },
                "vehicle": {
                    "description": "Vehicle on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDealVehicle"
                }
            },
            "title": "CreateLeaseDeal"
        },
        "CreateLeaseTerms": {
            "type": "object",
            "properties": {
                "acquisitionFee": {
                    "description": "The acquisition fee charged from a lender to cover the expenses incurred for arranging a loan or lease agreement.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateAcquisitionFee"
                },
                "anticipatedMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total expected mileage for term of the contract",
                    "allowEmptyValue": false
                },
                "applyRebatesToInception": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not to apply rebate reductions to money due at inception",
                    "allowEmptyValue": false
                },
                "applyTradeToInception": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not to apply any trade-in reductions to money due at inception",
                    "allowEmptyValue": false
                },
                "dispositionFee": {
                    "description": "The disposition fee charged to the person leasing the vehicle at the end of their lease to prepare the returned lease for the next buyer.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateDispositionFee"
                },
                "otherDepreciation": {
                    "type": "number",
                    "description": "Depreciation on MSRP prior to lease, usually from the vehicle being a demo. Dealers also occasionally use this for hard add-ons for a lease",
                    "allowEmptyValue": false
                },
                "purchaseOption": {
                    "description": "The purchase option for the vehicle at the end of the lease",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreatePurchaseOption"
                },
                "ratePerExcessMile": {
                    "type": "number",
                    "description": "Excess mileage rate for term of the contract",
                    "allowEmptyValue": false
                },
                "ratePerMile": {
                    "type": "number",
                    "description": "Mileage rate for the term of the contract",
                    "allowEmptyValue": false
                },
                "reductionTaxPaidAt": {
                    "type": "string",
                    "description": "Where reduction tax should be paid (Cap/Inception). Only CAP and INCEPTION are valid for the reduction tax\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "residualPercent": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage of MSRP that will be retained at the end of the lease",
                    "allowEmptyValue": false
                },
                "residualValue": {
                    "type": "number",
                    "description": "Retained value of the vehicle at the end of the lease",
                    "allowEmptyValue": false
                },
                "salesTaxPaidAt": {
                    "type": "string",
                    "description": "Where sales tax should be paid (Cap/Inception/Per Payment)\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "securityDeposit": {
                    "description": "The security deposit for the lease contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateSecurityDeposit"
                },
                "standardMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Standard mileage for the lease contract. Anything over this amount will be charged excess mileage to the customer.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateLeaseTerms",
            "description": "Additional deal terms specific to lease/balloon deals."
        },
        "CreateLinePricing": {
            "type": "object",
            "properties": {
                "estimatedLaborPrice": {
                    "type": "number",
                    "description": "Estimated Labor price associated with repair order line",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateLinePricing"
        },
        "CreatePartsInvoice": {
            "type": "object",
            "required": [
                "customer",
                "partsInvoiceLines",
                "salesPersonCode"
            ],
            "properties": {
                "billTo": {
                    "description": "Bill To",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoiceAddress"
                },
                "comments": {
                    "type": "array",
                    "description": "Comments - Maximum of 4 comments with 50 characters each",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "customer": {
                    "description": "Customer the parts invoice is for",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Delivery Date",
                    "allowEmptyValue": false
                },
                "partsInvoiceLines": {
                    "type": "array",
                    "description": "Part Line Items",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreatePartsInvoiceLine"
                    }
                },
                "purchaseOrderNumbers": {
                    "type": "array",
                    "description": "User supplied purchase order numbers for cross referencing. Maximum of 2 purchase order numbers can be supplied.",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "salesPersonCode": {
                    "type": "string",
                    "description": "Sales Person code",
                    "allowEmptyValue": false
                },
                "shipTo": {
                    "description": "Ship To",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoiceAddress"
                },
                "shippingCost": {
                    "type": "number",
                    "description": "Shipping Cost",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "VIN number",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePartsInvoice"
        },
        "CreatePartsInvoiceLine": {
            "type": "object",
            "required": [
                "franchise",
                "partNumber",
                "requestedQuantity",
                "saleType",
                "unitSalePrice"
            ],
            "properties": {
                "franchise": {
                    "description": "Franchise",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Franchise"
                },
                "partNumber": {
                    "type": "string",
                    "description": "Part Number",
                    "allowEmptyValue": false
                },
                "requestedQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The requested quantity for this part number.",
                    "allowEmptyValue": false
                },
                "saleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "To view sale types defined at the dealership see endpoint `/api/v2/{company}/fixed_ops/parts/setup/sale_types` in Fixed Ops - Parts Setup API",
                    "allowEmptyValue": false
                },
                "unitListPrice": {
                    "type": "number",
                    "description": "Unit List Price",
                    "allowEmptyValue": false
                },
                "unitSalePrice": {
                    "type": "number",
                    "description": "Unit Sale Price",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePartsInvoiceLine"
        },
        "CreatePartsOrder": {
            "type": "object",
            "required": [
                "createPartsOrderItems",
                "orderNumber"
            ],
            "properties": {
                "alternateOrderNumber": {
                    "type": "string",
                    "description": "Alternate number that can be used to reference a parts order",
                    "allowEmptyValue": false
                },
                "createPartsOrderItems": {
                    "type": "array",
                    "description": "The list of items on the parts order",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreatePartsOrderItem"
                    }
                },
                "orderNumber": {
                    "type": "string",
                    "description": "If the order number provided already exists in the DMS, it will be slightly modified to make the number unique. This is to ensure the order can be placed. Always use the orderNumber field from the response body.",
                    "allowEmptyValue": false,
                    "minLength": 1,
                    "maxLength": 6
                }
            },
            "title": "CreatePartsOrder"
        },
        "CreatePartsOrderItem": {
            "type": "object",
            "required": [
                "partNumber",
                "quantityOrdered"
            ],
            "properties": {
                "partNumber": {
                    "type": "string",
                    "description": "The part number of the item on the order",
                    "allowEmptyValue": false
                },
                "quantityOrdered": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity ordered",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePartsOrderItem"
        },
        "CreatePartsQuoteLineModel": {
            "type": "object",
            "required": [
                "franchise",
                "partNumber",
                "requestedQuantity",
                "saleType",
                "unitSalePrice"
            ],
            "properties": {
                "franchise": {
                    "description": "Franchise",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/FranchiseSetup"
                },
                "partNumber": {
                    "type": "string",
                    "description": "Part Number",
                    "allowEmptyValue": false
                },
                "requestedQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The requested quantity for this part number.",
                    "allowEmptyValue": false
                },
                "saleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "To view sale types defined at the dealership see endpoint `/api/v2/{company}/fixed_ops/parts/setup/sale_types` in Fixed Ops - Parts Setup API",
                    "allowEmptyValue": false
                },
                "unitListPrice": {
                    "type": "number",
                    "description": "Unit List Price",
                    "allowEmptyValue": false
                },
                "unitSalePrice": {
                    "type": "number",
                    "description": "Unit Sale Price",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePartsQuoteLineModel"
        },
        "CreatePartsQuoteModel": {
            "type": "object",
            "required": [
                "customer",
                "salesPersonCode"
            ],
            "properties": {
                "comments": {
                    "type": "array",
                    "description": "Comments - Maximum of 4 comments with 50 characters each",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "customer": {
                    "description": "Customer the parts quote is for",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Delivery Date",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Quote title - visible to salespeople",
                    "allowEmptyValue": false
                },
                "partsInvoiceLines": {
                    "type": "array",
                    "description": "Part Quote Line Items",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreatePartsQuoteLineModel"
                    }
                },
                "purchaseOrderNumbers": {
                    "type": "array",
                    "description": "User supplied purchase order numbers for cross referencing. Maximum of 2 purchase order numbers can be supplied.",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "salesPersonCode": {
                    "type": "string",
                    "description": "Sales Person code",
                    "allowEmptyValue": false
                },
                "shipTo": {
                    "description": "Ship To",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoiceAddress"
                },
                "shippingCost": {
                    "type": "number",
                    "description": "Shipping Cost",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "VIN number",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePartsQuoteModel"
        },
        "CreatePurchaseOption": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the purchase option for the vehicle at the end of the lease contract",
                    "allowEmptyValue": false
                },
                "percent": {
                    "type": "number",
                    "format": "double",
                    "description": "The percent of the residual used to calculated the purchase option amount. Residual * purchase option percent = purchase option amount",
                    "allowEmptyValue": false
                }
            },
            "title": "CreatePurchaseOption"
        },
        "CreateRepairOrder": {
            "type": "object",
            "required": [
                "customer",
                "serviceAdvisor",
                "vehicle"
            ],
            "properties": {
                "customer": {
                    "description": "UUID for customer repair order is associate with",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "deliveryFlags": {
                    "type": "object",
                    "description": "Indicates transportation method of customer, defaults are WAITER and PICKUP, dealership can define custom values outside of defaults. If flags are provided that are not defined in the dealership then they are ignored.",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "hangTag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Hang tag used in dealership to track the vehicle for a repair order",
                    "allowEmptyValue": false
                },
                "odometerEstimated": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is odometer reading estimated",
                    "allowEmptyValue": false
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading at time of service",
                    "allowEmptyValue": false
                },
                "promiseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time repair order completion date given to customer. This value will override any promiseText value passed in.",
                    "allowEmptyValue": false
                },
                "promiseText": {
                    "type": "string",
                    "description": "An alternative non-date promise text value, e.g. 'tomorrow pm'. This value is limited to 15 characters max.",
                    "allowEmptyValue": false
                },
                "repairOrderLines": {
                    "type": "array",
                    "description": "Service operations representing work to be performed on vehicle",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/CreateRepairOrderLine"
                    }
                },
                "serviceAdvisor": {
                    "description": "Service advisor assigned to repair order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceAdvisorId"
                },
                "story": {
                    "type": "string",
                    "description": "Comments or remarks about the repair order",
                    "allowEmptyValue": false
                },
                "vehicle": {
                    "description": "Vehicle identification number of vehicle repair is opened for",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleId"
                }
            },
            "title": "CreateRepairOrder"
        },
        "CreateRepairOrderLine": {
            "type": "object",
            "required": [
                "payType"
            ],
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Reason for performing repair",
                    "allowEmptyValue": false
                },
                "complaint": {
                    "type": "string",
                    "description": "Primary reason for service",
                    "allowEmptyValue": false
                },
                "correction": {
                    "type": "string",
                    "description": "Action taken to respond to concern",
                    "allowEmptyValue": false
                },
                "estimateLaborTime": {
                    "type": "number",
                    "format": "double",
                    "description": "Estimated labor time in hours",
                    "allowEmptyValue": false
                },
                "estimatedLaborHours": {
                    "type": "number",
                    "description": "The estimated number of hours for the service operation",
                    "allowEmptyValue": false
                },
                "flatRateLaborTime": {
                    "type": "number",
                    "format": "double",
                    "description": "Flat rate labor time in hours",
                    "allowEmptyValue": false
                },
                "laborPrice": {
                    "type": "number",
                    "description": "The price of labor for the service operation",
                    "allowEmptyValue": false
                },
                "narrative": {
                    "type": "string",
                    "description": "The narrative or story for the line",
                    "allowEmptyValue": false
                },
                "opCode": {
                    "type": "string",
                    "description": "Operation Code for the service operation",
                    "allowEmptyValue": false
                },
                "parts": {
                    "type": "array",
                    "description": "Parts associated to the line",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "partsPrice": {
                    "type": "number",
                    "description": "The price of parts for the service operation",
                    "allowEmptyValue": false
                },
                "payType": {
                    "type": "string",
                    "description": "Pay type for repair order line",
                    "allowEmptyValue": false,
                    "enum": [
                        "CUSTOMER",
                        "SERVICE_CONTRACT",
                        "INTERNAL",
                        "WARRANTY"
                    ]
                },
                "pricing": {
                    "description": "Pricing information for Repair Order Line",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/CreateLinePricing"
                },
                "quickOp": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the service operation is a Quick Op. Quick Ops typically indicate the most commonly used operation codes for ease of use within the system.",
                    "allowEmptyValue": false
                },
                "serviceTechnician": {
                    "description": "ID of Service technician assigned to the line",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceTechId"
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "CreateRepairOrderLine",
            "description": "Creation of a service operation representing work to be performed on vehicle"
        },
        "CreateSecurityDeposit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the security deposit to be paid by the customer",
                    "allowEmptyValue": false
                },
                "waiveDeposit": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not to waive the security deposit on the deal. This will set the security deposit to $0 on the deal. If this is being sent in as true, then the security deposit amount cannot be included.",
                    "allowEmptyValue": false
                }
            },
            "title": "CreateSecurityDeposit"
        },
        "Deal": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Accessories purchased with the vehicle.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Accessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Buyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "cashDueAtDelivery": {
                    "type": "number",
                    "description": "Money due from the customer at the close of the deal",
                    "allowEmptyValue": false
                },
                "cashPrice": {
                    "type": "number",
                    "description": "The value of the vehicle's selling price in addition to any accessories on the deal.",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Buyer"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the deal was created",
                    "allowEmptyValue": false
                },
                "customStatus": {
                    "type": "string",
                    "description": "Custom status of the deal. These are predefined by the dealer. To view all predefined custom statuses, see endpoint `/api/v2/{company}/deals/setup/custom_statuses`",
                    "allowEmptyValue": false
                },
                "dealId": {
                    "type": "string",
                    "description": "Unique id of the deal",
                    "allowEmptyValue": false
                },
                "dealNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Users at the dealership will reference a deal by this number",
                    "allowEmptyValue": false
                },
                "dealStatus": {
                    "type": "string",
                    "description": "Status of the deal",
                    "allowEmptyValue": false,
                    "enum": [
                        "PENDING",
                        "SOLD",
                        "CLOSED"
                    ]
                },
                "dealType": {
                    "type": "string",
                    "description": "Type of deal",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "fees": {
                    "type": "array",
                    "description": "Fees associated with the deal.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Fee"
                    }
                },
                "fundsReceivedFromLenderDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the accounting office receives the funds from the lender after deal close out",
                    "allowEmptyValue": false
                },
                "incentives": {
                    "type": "array",
                    "description": "Incentives on the deal.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Incentive"
                    }
                },
                "insurance": {
                    "description": "Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Insurance"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the deal was last modified",
                    "allowEmptyValue": false
                },
                "leaseTerms": {
                    "description": "Terms of the lease on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/LeaseTerms"
                },
                "lender": {
                    "description": "Lender on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Lender"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal",
                    "allowEmptyValue": false
                },
                "payment": {
                    "description": "Payments on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Payment"
                },
                "paymentTerms": {
                    "description": "Terms of the payments on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Rate"
                },
                "profit": {
                    "description": "Profit on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Profit"
                },
                "rebates": {
                    "type": "array",
                    "description": "Rebates on the deal.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Rebate"
                    }
                },
                "reductionTaxPaidAt": {
                    "type": "string",
                    "description": "Where the reduction tax is to be paid (Cap/Inception)Only CAP and INCEPTION are valid for the reduction tax\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer",
                    "allowEmptyValue": false
                },
                "saleType": {
                    "type": "string",
                    "description": "Sale type of the deal\n* RETAIL: A retail sale to an end customer, financed by cash, a loan or a lease\n* FLEET: A fleet sale, like retail but often reported on a separate line in financial statements\n* WHOLESALE: A wholesale deal to an auction or the like\n* DEALER_TRADE: A trade to another dealer, usually results in a much simpler transaction (inventory relieved)\n* PRODUCT: A product deal: service contract, aftermarket accessory, protection program, GAP, insurance, etc",
                    "allowEmptyValue": false,
                    "enum": [
                        "RETAIL",
                        "FLEET",
                        "WHOLESALE",
                        "DEALER_TRADE",
                        "PRODUCT"
                    ]
                },
                "salesStaff": {
                    "description": "Staff members involved with the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/SalesStaff"
                },
                "salesTaxPaidAt": {
                    "type": "string",
                    "description": "Where the sales tax is to be paid at (Per_Payment/Cap/Inception)\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "Service contracts purchased on the deal.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ServiceContract"
                    }
                },
                "submittedToLenderDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the accounting office submits paperwork to lender after deal close out",
                    "allowEmptyValue": false
                },
                "submittedToOfficeDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the deal is submitted to the accounting office after deal close out",
                    "allowEmptyValue": false
                },
                "taxRegion": {
                    "description": "The territory that determines the tax calculations on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/TaxRegion"
                },
                "taxSetups": {
                    "type": "array",
                    "description": "Tax setups",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TaxSetup"
                    }
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TradeIn"
                    }
                },
                "vehicle": {
                    "description": "The vehicle being purchased",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InventoryVehicle"
                },
                "vehicleCondition": {
                    "type": "string",
                    "description": "Condition of the vehicle",
                    "allowEmptyValue": false,
                    "enum": [
                        "NEW",
                        "USED",
                        "DEMO",
                        "OTHER"
                    ]
                },
                "vehicleCostOverride": {
                    "type": "number",
                    "description": "Overridden cost of the vehicle on the deal",
                    "allowEmptyValue": false
                },
                "vehicleMsrpOverride": {
                    "type": "number",
                    "description": "The overridden MSRP value of the vehicle on the deal. If the MSRP on the deal differs from the MSRP of the vehicle record then this value will be populated with the MSRP value on the deal. Otherwise if the MSRP on the deal matches the MSRP of the vehicle (not overridden) then this value will not be populated.",
                    "allowEmptyValue": false
                },
                "vehicleSellingPrice": {
                    "type": "number",
                    "description": "The selling price of the vehicle",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "Deal"
        },
        "DealerUpdatePersonIdentity": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The unique id of the buyer/cobuyer record",
                    "allowEmptyValue": false
                }
            },
            "title": "DealerUpdatePersonIdentity"
        },
        "DeletePartsInvoiceLineResponse": {
            "type": "object",
            "required": [
                "deletedLine",
                "updatedInvoice"
            ],
            "properties": {
                "deletedLine": {
                    "description": "The line that was deleted from the parts invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ExtractPartsInvoiceLineModel"
                },
                "updatedInvoice": {
                    "description": "Updated parts invoice after the line was deleted",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoice"
                }
            },
            "title": "DeletePartsInvoiceLineResponse"
        },
        "DispatchLineStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code for the dispatch status of the line. Exposed for legacy compatibility, use 'status' instead.",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "The dispatch status of the line.\n* PUNCH_OUT: Technician is punched out and will be unavailable for work. This can be either for a break or for the day.\n* TECH_UNAVAILABLE: Technician is unavailable for work.\n* PUNCH_IN: Technician is punched in and will be available for work.\n* TECH_AVAILABLE: Technician is available for work.\n* NO_TECH_ASSIGNED: No technician is assigned to this task\n* RESERVED: This task is scheduled for a technician. This task will not be started until it is assigned to that technician.\n* ASSIGNED_NOT_STARTED: This task is assigned for a technician, but this task has not been started.\n* DIAGNOSTIC_TIME: Diagnostic work is being performed by the technician.\n* WORK: Required work to complete this task is being performed by the technician.\n* QUALITY_CHECK: The work that was performed in this task is being verified.\n* STRAIGHT: Work outside of diagnostic and required work is being performed.\n* INTERRUPTED: Work for this task has stopped, to be resumed at a later point in time.\n* CUSTOMER_AUTHORIZATION_HOLD: Waiting on required customer authorization.\n* PARTS_HOLD: Waiting on required parts.\n* MANUFACTURERS_HOLD: Waiting on manufacturer support.\n* SUBLET_HOLD: Waiting on work performed by an external company.\n* BODY_SHOP_HOLD: Waiting on body shop work to be completed.\n* OVERNIGHT_TEST_HOLD: Overnight testing is being performed to diagnose the cause for this task.\n* LINE_COMPLETED: All work for this task is complete.",
                    "allowEmptyValue": false,
                    "enum": [
                        "PUNCH_OUT",
                        "TECH_UNAVAILABLE",
                        "PUNCH_IN",
                        "TECH_AVAILABLE",
                        "NO_TECH_ASSIGNED",
                        "RESERVED",
                        "ASSIGNED_NOT_STARTED",
                        "DIAGNOSTIC_TIME",
                        "WORK",
                        "QUALITY_CHECK",
                        "STRAIGHT",
                        "INTERRUPTED",
                        "CUSTOMER_AUTHORIZATION_HOLD",
                        "PARTS_HOLD",
                        "MANUFACTURERS_HOLD",
                        "SUBLET_HOLD",
                        "BODY_SHOP_HOLD",
                        "OVERNIGHT_TEST_HOLD",
                        "LINE_COMPLETED"
                    ]
                }
            },
            "title": "DispatchLineStatus",
            "description": "Dispatch status of RO line.  Only populated for dealers using auto or manual dispatch system"
        },
        "DriversLicense": {
            "type": "object",
            "properties": {
                "driversLicenseExpiration": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2020-05-08",
                    "description": "The expiration date for the license",
                    "allowEmptyValue": false
                },
                "driversLicenseNumber": {
                    "type": "string",
                    "description": "The drivers license number, e.g. 1234567890",
                    "allowEmptyValue": false
                },
                "driversLicenseState": {
                    "type": "string",
                    "description": "The drivers license state, e.g. NY",
                    "allowEmptyValue": false
                }
            },
            "title": "DriversLicense"
        },
        "EnhancedProductInsuranceSetup": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The identifying code for the insurance",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the insurance",
                    "allowEmptyValue": false
                },
                "productTypes": {
                    "type": "array",
                    "description": "Identifiers for Product Types",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of credit insurance\n* NONE: No specified insurance type\n* SINGLE: Single insurance policy\n* JOINT: Joint insurance policy\n* GAP: Gap insurance policy",
                    "allowEmptyValue": false,
                    "enum": [
                        "NONE",
                        "SINGLE",
                        "JOINT",
                        "GAP"
                    ]
                }
            },
            "title": "EnhancedProductInsuranceSetup"
        },
        "ExtractPartsInvoiceLineModel": {
            "type": "object",
            "required": [
                "id",
                "partNumber"
            ],
            "properties": {
                "closedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date that the invoice line was closed and sent through End of Day process. Only appears if invoice line was closed and sent through EOD. ",
                    "allowEmptyValue": false
                },
                "coreAmount": {
                    "type": "number",
                    "description": "Additional amount charged to the customer when a part is sold as a retainer for the customer to return the used part.",
                    "allowEmptyValue": false
                },
                "franchise": {
                    "description": "Franchise",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/FranchiseSetup"
                },
                "glAccount": {
                    "type": "string",
                    "description": "GL account number associated with this invoice line",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the parts invoice line",
                    "allowEmptyValue": false
                },
                "kitPartNumber": {
                    "type": "string",
                    "description": "Kit Part Number if part of a kit",
                    "allowEmptyValue": false
                },
                "lineNumber": {
                    "type": "string",
                    "description": "RO Line Number - Will only be populated if the the invoice is for a repair order",
                    "allowEmptyValue": false
                },
                "partDescription": {
                    "type": "string",
                    "description": "Part Description",
                    "allowEmptyValue": false
                },
                "partNumber": {
                    "type": "string",
                    "description": "Part Number",
                    "allowEmptyValue": false
                },
                "requestedQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The requested quantity for this part number.",
                    "allowEmptyValue": false
                },
                "saleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Sale Type - Integer values represent dealer-assigned categories for sale types, with range[1-15] available for the dealer to assign",
                    "allowEmptyValue": false
                },
                "soldQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The sold quantity for this part number.  Note this may differ from requested based on available stock.",
                    "allowEmptyValue": false
                },
                "unitCost": {
                    "type": "number",
                    "description": "The unit cost",
                    "allowEmptyValue": false
                },
                "unitListPrice": {
                    "type": "number",
                    "description": "Unit List Price",
                    "allowEmptyValue": false
                },
                "unitSalePrice": {
                    "type": "number",
                    "description": "Unit Sale Price",
                    "allowEmptyValue": false
                }
            },
            "title": "ExtractPartsInvoiceLineModel"
        },
        "ExtractPricingInformation": {
            "type": "object",
            "properties": {
                "advertisedPrice": {
                    "type": "number",
                    "description": "The advertised price of the vehicle",
                    "allowEmptyValue": false
                },
                "advertisingAmount": {
                    "type": "number",
                    "description": "Advertising amount - An example is the amount spent on posting a vehicle in a newspaper,  flyer, tv commercial, etc.",
                    "allowEmptyValue": false
                },
                "costBump": {
                    "type": "number",
                    "description": "Cost/Bump applied to the vehicle - Additional price change to the vehicle",
                    "allowEmptyValue": false
                },
                "destinationAndHandling": {
                    "type": "number",
                    "description": "Destination & Handling amount",
                    "allowEmptyValue": false
                },
                "holdBack": {
                    "type": "number",
                    "description": "Holdback amount - Amount paid to the dealer by the manufacturer for each new vehicle sold.  It may be calculated as a percentage of Invoice Price or Manufacturer's Suggested Retail Price (MSRP) including or excluding options, or as a fixed amount, and the calculation and amount varies across manufacturers",
                    "allowEmptyValue": false
                },
                "invoiceAmount": {
                    "type": "number",
                    "description": "Invoice Amount - The price from the manufacturer invoice which may include dealer holdback and  incentives.",
                    "allowEmptyValue": false
                },
                "marketValue": {
                    "type": "number",
                    "description": "Market value or internet website amount",
                    "allowEmptyValue": false
                },
                "msrp": {
                    "type": "number",
                    "description": "MSRP - Manufacturer's Suggested Retail Price",
                    "allowEmptyValue": false
                },
                "originalCost": {
                    "type": "number",
                    "description": "Cost of the vehicle *before* adjustments from the accounting system are made",
                    "allowEmptyValue": false
                },
                "originalPrice": {
                    "type": "number",
                    "description": "Original Price",
                    "allowEmptyValue": false
                },
                "salesCost": {
                    "type": "number",
                    "description": "A combination of totalCost, holdBack, advertisingAmount and costBump depending on dealer's settings. Settings may be found using the `setup` endpoint. If totalCost is 0, salesCost is 0.",
                    "allowEmptyValue": false
                },
                "totalCost": {
                    "type": "number",
                    "description": "Cost of the vehicle *after* adjustments from the accounting system are made",
                    "allowEmptyValue": false
                },
                "totalDollars": {
                    "type": "number",
                    "description": "Total Repair Order Dollars for this vehicle",
                    "allowEmptyValue": false
                },
                "totalPrice": {
                    "type": "number",
                    "description": "The total selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "ExtractPricingInformation"
        },
        "ExtractReport": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The content of the report",
                    "allowEmptyValue": false
                },
                "reportDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the report was ran",
                    "allowEmptyValue": false
                }
            },
            "title": "ExtractReport"
        },
        "ExtractVehicleIndicators": {
            "type": "object",
            "properties": {
                "airConditioning": {
                    "type": "boolean",
                    "example": false,
                    "description": "Has Air Conditioning",
                    "allowEmptyValue": false
                },
                "certifiedPreOwned": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is Certified Pre-owned",
                    "allowEmptyValue": false
                },
                "commercial": {
                    "type": "boolean",
                    "example": false,
                    "description": "Commercial Indicator - Vehicle is being sold for commercial use.",
                    "allowEmptyValue": false
                },
                "fleet": {
                    "type": "boolean",
                    "example": false,
                    "description": "Fleet indicator - The vehicle is owned by a company instead of an individual.  An example is the car is owned by the dealership for rental use for service loaner vehicles.",
                    "allowEmptyValue": false
                },
                "rental": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicator flagging vehicle in the rental system",
                    "allowEmptyValue": false
                },
                "threePlusAxis": {
                    "type": "boolean",
                    "example": false,
                    "description": "Has more than three axles",
                    "allowEmptyValue": false
                }
            },
            "title": "ExtractVehicleIndicators"
        },
        "Fee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The fee amount",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Code that identifies the fee",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the fee",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the fee is to be paid (CAP/INCEPTION).\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                }
            },
            "title": "Fee"
        },
        "FeeDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the fee",
                    "allowEmptyValue": false
                },
                "editable": {
                    "type": "boolean",
                    "example": false,
                    "description": "When set to true, the DMS will allow changes to the fee description. When set to false, description changes are not permitted.",
                    "allowEmptyValue": false
                }
            },
            "title": "FeeDescription"
        },
        "FeeItem": {
            "type": "object",
            "properties": {
                "calculated": {
                    "type": "boolean",
                    "example": false,
                    "description": "If the fee is calculated based on values of the deal or if it is a static value",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The type (code) of fee",
                    "allowEmptyValue": false
                },
                "feeDescription": {
                    "description": "Description detail information of the fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/FeeDescription"
                },
                "feePrice": {
                    "description": "Price detail information of the fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/FeePrice"
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the fee is to be paid (Cap/Inception/Per payment). Only applicable to LEASE fee setups.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate for the fee",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the fee should be taxed",
                    "allowEmptyValue": false
                }
            },
            "title": "FeeItem",
            "description": "Specific fee setup"
        },
        "FeePrice": {
            "type": "object",
            "properties": {
                "editable": {
                    "type": "boolean",
                    "example": false,
                    "description": "When set to true, the DMS will allow changes to the fee price. When set to false, description changes are not permitted.",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "The price for the fee",
                    "allowEmptyValue": false
                }
            },
            "title": "FeePrice"
        },
        "FeeSetup": {
            "type": "object",
            "properties": {
                "dealType": {
                    "type": "string",
                    "description": "The deal type the fee setup is for (Finance/Lease/etc)",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "fees": {
                    "type": "array",
                    "description": "The list of fees for this setup",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/FeeItem"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "The state the fee setup is for",
                    "allowEmptyValue": false
                },
                "vehicleType": {
                    "type": "string",
                    "description": "The vehicle type the fee setup is for (New/Used/etc)",
                    "allowEmptyValue": false,
                    "enum": [
                        "NEW",
                        "USED",
                        "DEMO",
                        "OTHER"
                    ]
                }
            },
            "title": "FeeSetup",
            "description": "Default fee setup for the given state, financing type, and vehicle type"
        },
        "FixedOpsSetup": {
            "type": "object",
            "required": [
                "autoDispatch",
                "manualDispatch"
            ],
            "properties": {
                "autoDispatch": {
                    "type": "boolean",
                    "example": false,
                    "description": "Dealer is configured for auto dispatch -- This is a DMS feature that if enabled will disallow adding service technicians to repair order lines via OpenMate",
                    "allowEmptyValue": false
                },
                "manualDispatch": {
                    "type": "boolean",
                    "example": false,
                    "description": "Dealer is configured for manual dispatch",
                    "allowEmptyValue": false
                }
            },
            "title": "FixedOpsSetup",
            "description": "Object containing setup information for fixed ops application"
        },
        "Franchise": {
            "type": "object",
            "properties": {
                "franchiseName": {
                    "type": "string",
                    "description": "Name of franchise",
                    "allowEmptyValue": false
                }
            },
            "title": "Franchise"
        },
        "FranchiseSetup": {
            "type": "object",
            "properties": {
                "coreCostIncluded": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the core value on parts with a clean core value is already included in the new part unit cost",
                    "allowEmptyValue": false
                },
                "franchiseName": {
                    "type": "string",
                    "description": "Name of the franchise",
                    "allowEmptyValue": false
                },
                "oemCode": {
                    "type": "string",
                    "description": "Code that identifies the OEM",
                    "allowEmptyValue": false,
                    "enum": [
                        "AF",
                        "AL",
                        "AM",
                        "AP",
                        "AT",
                        "BB",
                        "BD",
                        "BE",
                        "BL",
                        "BM",
                        "BO",
                        "BW",
                        "CH",
                        "CU",
                        "CV",
                        "CX",
                        "CY",
                        "DC",
                        "DT",
                        "DU",
                        "FE",
                        "FL",
                        "FM",
                        "FI",
                        "FW",
                        "GA",
                        "GC",
                        "GF",
                        "GL",
                        "GM",
                        "GN",
                        "GR",
                        "GS",
                        "HC",
                        "HD",
                        "HH",
                        "HO",
                        "HS",
                        "HU",
                        "HY",
                        "IN",
                        "IZ",
                        "JD",
                        "JG",
                        "KA",
                        "KI",
                        "KT",
                        "LA",
                        "LR",
                        "LX",
                        "MA",
                        "MC",
                        "MB",
                        "MG",
                        "MI",
                        "MO",
                        "MQ",
                        "MX",
                        "NA",
                        "NC",
                        "NI",
                        "NV",
                        "OX",
                        "PG",
                        "PL",
                        "PO",
                        "PU",
                        "RA",
                        "RD",
                        "RN",
                        "RO",
                        "RS",
                        "RY",
                        "SA",
                        "SB",
                        "SL",
                        "SN",
                        "SR",
                        "SS",
                        "ST",
                        "SZ",
                        "TB",
                        "TG",
                        "TM",
                        "TP",
                        "TR",
                        "TY",
                        "UD",
                        "VP",
                        "VV",
                        "VW",
                        "WB",
                        "WS",
                        "YM",
                        "MR",
                        "C1",
                        "C2",
                        "C3",
                        "C4",
                        "C5",
                        "C6",
                        "C7",
                        "C8",
                        "C9",
                        "C0"
                    ]
                },
                "sourceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Identification number that organizes a dealers inventory into subgroups of parts",
                    "allowEmptyValue": false
                }
            },
            "title": "FranchiseSetup"
        },
        "GLAccount": {
            "type": "object",
            "required": [
                "accountNumber",
                "accountType",
                "companyNumber",
                "costAccountNumber",
                "id",
                "isActive",
                "lookupSwitch",
                "name",
                "openingBalance"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Unique account number of the GL account",
                    "allowEmptyValue": false
                },
                "accountPrefix": {
                    "type": "string",
                    "description": "Rarely used, this adds some additional uniqueness to the GL account",
                    "allowEmptyValue": false
                },
                "accountType": {
                    "type": "string",
                    "description": "The type of the GL account",
                    "allowEmptyValue": false,
                    "enum": [
                        "ASSET",
                        "EXPENSE",
                        "LIABILITY",
                        "COST",
                        "SALE",
                        "MISC",
                        "DIST"
                    ]
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company that the GL account belongs to",
                    "allowEmptyValue": false
                },
                "costAccountNumber": {
                    "type": "string",
                    "description": "The GL account debited for a cost",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique id of the GL account",
                    "allowEmptyValue": false
                },
                "inventoryAccount": {
                    "type": "string",
                    "description": "The GL account credited in response to a debited cost",
                    "allowEmptyValue": false
                },
                "isActive": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the GL account is active and can be used",
                    "allowEmptyValue": false
                },
                "lookupSwitch": {
                    "type": "string",
                    "description": "Determines if `controlNumber` and `applyTo` are required on a `TransactionItem`, as well as what type of `controlNumber` should be provided. See enum definitions below.\n* NONE: No control number is required.\n* LOOKUP: An existing customer or vendor control number must be provided.\n* DO_NOT_LOOKUP: A control number must be provided, but it will not be verified.\n* APPLY_TO: An existing customer or vendor control number must be provided. Additionally, apply to must be provided\n* STOCK_NUMBER: An existing vehicle stock number must be provided as the control number.\n* VIN_LAST_SIX: The last six characters of a VIN fo an existing vehicle must be provided as the control number.",
                    "allowEmptyValue": false,
                    "enum": [
                        "NONE",
                        "LOOKUP",
                        "DO_NOT_LOOKUP",
                        "APPLY_TO",
                        "STOCK_NUMBER",
                        "VIN_LAST_SIX"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Name of the GL account",
                    "allowEmptyValue": false
                },
                "openingBalance": {
                    "type": "number",
                    "description": "The balance of the GL account at the end of the last closed month",
                    "allowEmptyValue": false
                },
                "openingUnitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the GL account tracks a number of units for a particular scenario (ex. number of cars sold) then this is that quantity at the end of the last closed month",
                    "allowEmptyValue": false
                },
                "scheduleNumber": {
                    "type": "string",
                    "description": "The number of the schedule the GL account belongs to",
                    "allowEmptyValue": false
                }
            },
            "title": "GLAccount"
        },
        "GapInsuranceSetup": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The identifying code for the insurance",
                    "allowEmptyValue": false
                },
                "companyContact": {
                    "description": "Contact information for the insurance company",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Contact"
                },
                "defaultCost": {
                    "type": "number",
                    "description": "Default cost of the gap insurance",
                    "allowEmptyValue": false
                },
                "defaultPrice": {
                    "type": "number",
                    "description": "Default price of the gap insurance",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the gap insurance setup",
                    "allowEmptyValue": false
                },
                "frontBack": {
                    "type": "string",
                    "description": "Whether the gross payment is credited to the front or back",
                    "allowEmptyValue": false,
                    "enum": [
                        "FRONT",
                        "BACK"
                    ]
                },
                "includedByDefault": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the gap insurance setup is included by default when creating a new deal inside the DMS",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "Type of credit insurance\n* NONE: No specified insurance type\n* SINGLE: Single insurance policy\n* JOINT: Joint insurance policy\n* GAP: Gap insurance policy",
                    "allowEmptyValue": false,
                    "enum": [
                        "NONE",
                        "SINGLE",
                        "JOINT",
                        "GAP"
                    ]
                }
            },
            "title": "GapInsuranceSetup"
        },
        "InboundAccountingInvoice": {
            "type": "object",
            "required": [
                "invoiceAmount",
                "invoiceDate",
                "invoiceDealerNumber",
                "transaction",
                "vendorNumber"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Dealer comments on the invoice",
                    "allowEmptyValue": false
                },
                "createdBy": {
                    "type": "string",
                    "description": "Dealership user who created the invoice",
                    "allowEmptyValue": false
                },
                "discountAmount": {
                    "type": "number",
                    "description": "Amount after vendor's allowed discount percentage is applied to the invoice amount",
                    "allowEmptyValue": false
                },
                "discountDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date discount was applied if payment is made and meets discount criteria",
                    "allowEmptyValue": false
                },
                "discountGlAccount": {
                    "description": "GL account used for discount applied to this invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InboundGlAccount"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The vendor's date that the bill is due",
                    "allowEmptyValue": false
                },
                "invoiceAmount": {
                    "type": "number",
                    "description": "Total value of the invoice",
                    "allowEmptyValue": false
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The vendor's date that the bill was issued",
                    "allowEmptyValue": false
                },
                "invoiceDealerNumber": {
                    "type": "string",
                    "description": "Dealer-facing invoice ID",
                    "allowEmptyValue": false
                },
                "payAmount": {
                    "type": "number",
                    "description": "Total check/payment amount for the invoice",
                    "allowEmptyValue": false
                },
                "poNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Represents the purchase order linked to the invoice, cannot be updated",
                    "allowEmptyValue": false
                },
                "postDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the invoice is posted. The post date will be defaulted when it is not provided or when it is invalid according to Accounting date restrictions. Please check warning list in response object",
                    "allowEmptyValue": false
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "Dealer-facing invoice reference number. Typically matches invoice ID",
                    "allowEmptyValue": false
                },
                "transaction": {
                    "description": "The pending accounting transaction for this invoice",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InboundInvoicePendingTransaction"
                },
                "vendorNumber": {
                    "type": "string",
                    "description": "Identifier for the vendor related to this invoice",
                    "allowEmptyValue": false
                }
            },
            "title": "InboundAccountingInvoice"
        },
        "InboundGlAccount": {
            "type": "object",
            "required": [
                "accountNumber",
                "companyNumber"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Unique account number of the GL account",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company that the GL account belongs to",
                    "allowEmptyValue": false
                }
            },
            "title": "InboundGlAccount"
        },
        "InboundInvoicePendingTransaction": {
            "type": "object",
            "required": [
                "transactionItems"
            ],
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "Comments for this pending transaction",
                    "allowEmptyValue": false
                },
                "transactionItems": {
                    "type": "array",
                    "description": "Transaction items that make up this pending transaction",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TransactionItem"
                    }
                }
            },
            "title": "InboundInvoicePendingTransaction"
        },
        "Incentive": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The incentive amount",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "string",
                    "description": "Code identifying the incentive",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the incentive",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The position of the incentive in the incentives list when the deal is viewed through the DMS user interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                }
            },
            "title": "Incentive"
        },
        "IncentiveSetup": {
            "type": "object",
            "properties": {
                "adjustCommission": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the incentive adjusts commission values paid on the deal",
                    "allowEmptyValue": false
                },
                "amount": {
                    "type": "number",
                    "description": "The amount of the incentive",
                    "allowEmptyValue": false
                },
                "autoApplyOnNewVehicle": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the incentive is included by default on deals created for New vehicle deals.  If this incentive is not included on deal creation it will be automatically applied with the default amount for New vehicle deals.",
                    "allowEmptyValue": false
                },
                "autoApplyOnUsedVehicle": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the incentive is included by default on deals created for Used vehicle deals.  If this incentive is not included on deal creation it will be automatically applied with the default amount for Used vehicle deals.",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The code of the incentive. This also represents the display position of the incentiveinside of the DMS.",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the incentive",
                    "allowEmptyValue": false
                },
                "oemCashIncentive": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the incentive is marked as an OEM cash incentive for the dealership",
                    "allowEmptyValue": false
                }
            },
            "title": "IncentiveSetup",
            "description": "The list of default incentives for the given company"
        },
        "Insurance": {
            "type": "object",
            "properties": {
                "accidentAndHealth": {
                    "description": "Accidental and Health insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InsuranceDetail"
                },
                "gap": {
                    "description": "Gap insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InsuranceDetail"
                },
                "life": {
                    "description": "Life insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/InsuranceDetail"
                },
                "vehicle": {
                    "description": "Vehicle insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleInsurancePolicy"
                }
            },
            "title": "Insurance"
        },
        "InsuranceDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code that identifies the insurance",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "Dealership cost",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                },
                "premium": {
                    "type": "number",
                    "description": "Insurance premium",
                    "allowEmptyValue": false
                }
            },
            "title": "InsuranceDetail"
        },
        "InventoryOwnership": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "integer",
                    "format": "int32"
                },
                "ownerUUID": {
                    "type": "string"
                },
                "soleOwner": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NEW INVENTORY",
                        "USED INVENTORY",
                        "USED INVENTORY - TRADE-IN",
                        "DEMO INVENTORY",
                        "OTHER INVENTORY"
                    ]
                },
                "updateVehicles": {
                    "type": "boolean"
                }
            },
            "title": "InventoryOwnership"
        },
        "InventoryVehicle": {
            "type": "object",
            "required": [
                "vehicleId",
                "vin"
            ],
            "properties": {
                "accountingCompany": {
                    "description": "The DMS accounting company that owns the vehicle",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Company"
                },
                "body": {
                    "type": "string",
                    "description": "Body",
                    "allowEmptyValue": false
                },
                "comments": {
                    "type": "array",
                    "description": "Comments",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "customFields": {
                    "type": "array",
                    "description": "Dealership specific attributes that provide additional information about the vehicle. These fields are free-form and are defined by users at the dealership. Objects in the array are guaranteed to not be null but fields name/value int the object are not guaranteed to be present. See documentation for VehicleCustomField.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/VehicleCustomField"
                    }
                },
                "customStatus": {
                    "type": "string",
                    "description": "Description of the vehicle's custom status",
                    "allowEmptyValue": false
                },
                "deliveryMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Miles on the vehicle at delivery",
                    "allowEmptyValue": false
                },
                "engine": {
                    "description": "Engine",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Vehicle Engine"
                },
                "entryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date vehicle was added to inventory",
                    "allowEmptyValue": false
                },
                "fuelType": {
                    "type": "string",
                    "description": "Fuel type",
                    "allowEmptyValue": false
                },
                "inServiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date that the vehicle was first sold (i.e. put into service)",
                    "allowEmptyValue": false
                },
                "inspectionMonths": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Inspection Months",
                    "allowEmptyValue": false
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "Invoice Number",
                    "allowEmptyValue": false
                },
                "keyCodes": {
                    "description": "Key Codes",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/KeyCodes"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the vehicle records was last modified",
                    "allowEmptyValue": false
                },
                "lastModifiedBy": {
                    "type": "string",
                    "description": "User whom last modified the vehicle record",
                    "allowEmptyValue": false
                },
                "lastServiceMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Miles at last service visit",
                    "allowEmptyValue": false
                },
                "licensePlate": {
                    "type": "string",
                    "description": "License plate of vehicle",
                    "allowEmptyValue": false
                },
                "licensePlateState": {
                    "type": "string",
                    "description": "License plate state",
                    "allowEmptyValue": false
                },
                "lotLocation": {
                    "description": "The area or the 'lot' where the physical vehicle resides",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Lot location (location where the physical vehicle resides)"
                },
                "make": {
                    "type": "string",
                    "description": "Manufacturer of the vehicle",
                    "allowEmptyValue": false
                },
                "milesOrKilometers": {
                    "type": "string",
                    "description": "Indicator for miles/kilometers for odometer",
                    "allowEmptyValue": false,
                    "enum": [
                        "MILES",
                        "KILOMETERS"
                    ]
                },
                "model": {
                    "type": "string",
                    "description": "Brand of vehicle from manufacturer",
                    "allowEmptyValue": false
                },
                "modelNumber": {
                    "type": "string",
                    "description": "Model number",
                    "allowEmptyValue": false
                },
                "newUsed": {
                    "type": "string",
                    "description": "Vehicle Type - (New, Used, Demo, Other)",
                    "allowEmptyValue": false,
                    "enum": [
                        "NEW",
                        "USED",
                        "DEMO",
                        "OTHER"
                    ]
                },
                "numberOfDoors": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of Doors",
                    "allowEmptyValue": false
                },
                "numberOfPassengers": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of Passengers",
                    "allowEmptyValue": false
                },
                "odometerReading": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Most recently updated mileage on the vehicle",
                    "allowEmptyValue": false
                },
                "ownerHistory": {
                    "type": "array",
                    "description": "All current and previous owners of this vehicle",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/VehicleOwnerHistory"
                    }
                },
                "pricingInfo": {
                    "description": "Pricing Information",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ExtractPricingInformation"
                },
                "promoted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the vehicle is actively being promoted through advertising channels",
                    "allowEmptyValue": false
                },
                "purchasedFrom": {
                    "description": "Describes who the vehicle was purchased from and where it was purchased",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehiclePurchasedFrom"
                },
                "salesman": {
                    "type": "string",
                    "description": "Salesman code",
                    "allowEmptyValue": false
                },
                "source": {
                    "type": "string",
                    "description": "Source",
                    "allowEmptyValue": false
                },
                "statusDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Status date - (Date vehicle status was last changed)",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "Stock number assigned to vehicle by dealership",
                    "allowEmptyValue": false
                },
                "titleStatus": {
                    "type": "string",
                    "description": "Current status of the title for the vehicle",
                    "allowEmptyValue": false,
                    "enum": [
                        "APPLIED",
                        "PROBLEM",
                        "RECEIVED"
                    ]
                },
                "transmission": {
                    "description": "Transmission",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Transmission"
                },
                "vehicleColor": {
                    "description": "Vehicle Color",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleColor"
                },
                "vehicleId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "DMS unique identifier for the vehicle",
                    "allowEmptyValue": false
                },
                "vehicleIndicators": {
                    "description": "Vehicle Indicators",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ExtractVehicleIndicators"
                },
                "vehicleOptions": {
                    "type": "array",
                    "description": "List of vehicle options",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Vehicle Option"
                    }
                },
                "vehicleStatus": {
                    "type": "string",
                    "description": "Current status of the vehicle\n* AVAILABLE:  \n* ON_ORDER:  \n* SOLD:  \n* HOLD:  \n* NOT_AVAILABLE:  \n* ASSIGNED_BY_MANUFACTURER:  \n* INACTIVE:  \n* WHOLESALE: This status is no longer used in our system but still has potential to show up in historical data",
                    "allowEmptyValue": false,
                    "enum": [
                        "AVAILABLE",
                        "ON_ORDER",
                        "SOLD",
                        "HOLD",
                        "NOT_AVAILABLE",
                        "ASSIGNED_BY_MANUFACTURER",
                        "INACTIVE",
                        "WHOLESALE"
                    ]
                },
                "vehicleTrim": {
                    "description": "Vehicle Trim",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleTrim"
                },
                "vehicleType": {
                    "type": "string",
                    "description": "Type (Car/Truck)",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAR",
                        "TRUCK",
                        "OTHER"
                    ]
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle identification number",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                },
                "warrantyModel": {
                    "description": "WarrantyModel information",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/WarrantyModel"
                },
                "weight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Weight",
                    "allowEmptyValue": false
                },
                "wheelBase": {
                    "type": "number",
                    "format": "double",
                    "description": "Wheel Base",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Year of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "InventoryVehicle"
        },
        "ItemTaxSetup": {
            "type": "object",
            "properties": {
                "leaseTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate the item is taxed at for a lease deal",
                    "allowEmptyValue": false
                },
                "leaseTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the item is taxable for a lease deal",
                    "allowEmptyValue": false
                },
                "retailTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate the item is taxed at for a retail deal",
                    "allowEmptyValue": false
                },
                "retailTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the item is taxable for a retail deal",
                    "allowEmptyValue": false
                }
            },
            "title": "ItemTaxSetup"
        },
        "JournalEntry": {
            "type": "object",
            "required": [
                "accountNumber",
                "balance",
                "companyNumber",
                "fiscalPeriod",
                "sourceCode"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The GL Account of the journal entry",
                    "allowEmptyValue": false
                },
                "balance": {
                    "type": "number",
                    "description": "The current balance for that journal source and GL account",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the journal entry belongs to",
                    "allowEmptyValue": false
                },
                "fiscalPeriod": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-10",
                    "description": "The year and month the journal entry covers",
                    "allowEmptyValue": false
                },
                "sourceCode": {
                    "type": "string",
                    "description": "The journal source code of the journal entry",
                    "allowEmptyValue": false
                },
                "unitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If applicable, number of inventory units in journal entry",
                    "allowEmptyValue": false
                }
            },
            "title": "JournalEntry"
        },
        "JournalSource": {
            "type": "object",
            "required": [
                "addUnits",
                "code",
                "id",
                "journalSourceType",
                "name"
            ],
            "properties": {
                "addUnits": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the journal source is configured to count units",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "string",
                    "description": "Unique source code of journal",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique id of the journal source",
                    "allowEmptyValue": false
                },
                "journalSourceType": {
                    "type": "string",
                    "description": "The journal's type",
                    "allowEmptyValue": false,
                    "enum": [
                        "NEW_VEHICLE_SALES",
                        "USED_VEHICLE_SALES",
                        "WHOLESALE_SALES",
                        "DEALER_TRADES",
                        "SERVICE_REPAIR_ORDER",
                        "BODY_SHOP_REPAIR_ORDER",
                        "QUICK_SERVICE",
                        "PARTS_SALE",
                        "GENERAL_PURCHASE",
                        "PARTS_COUNTER_INVOICE",
                        "PAYROLL",
                        "CASH_RECEIPTS",
                        "OPEN_ITEM_CLEARING",
                        "CASH_DISBURSEMENTS",
                        "NEW_VEHICLE_PURCHASE",
                        "USED_VEHICLE_PURCHASE",
                        "OTHER_VEHICLE_PURCHASE",
                        "PURCHASE_ORDER",
                        "GENERAL_JOURNAL",
                        "REOCCURRING_JOURNAL_ENTRIES",
                        "PRIOR_MONTH_ADJUSTMENTS",
                        "PRIOR_YEAR_ADJUSTMENTS",
                        "FINANCE_CHARGE"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable name of journal",
                    "allowEmptyValue": false
                }
            },
            "title": "JournalSource"
        },
        "JsonNode": {
            "type": "object",
            "title": "JsonNode"
        },
        "KeyCodes": {
            "type": "object",
            "properties": {
                "ignition": {
                    "type": "string",
                    "description": "Key Ignition code",
                    "allowEmptyValue": false
                },
                "keyLess": {
                    "type": "string",
                    "description": "Key less code",
                    "allowEmptyValue": false
                },
                "trunk": {
                    "type": "string",
                    "description": "Trunk Key Code",
                    "allowEmptyValue": false
                }
            },
            "title": "KeyCodes"
        },
        "LaborRate": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "labor rate code",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "labor rate description",
                    "allowEmptyValue": false
                }
            },
            "title": "LaborRate"
        },
        "LeaseAcquisitionFee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The lease acquisition amount",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the lease acquisition fee",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the lease acquisition fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                }
            },
            "title": "LeaseAcquisitionFee"
        },
        "LeaseDispositionFeeModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The lease disposition fee amount",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the lease disposition fee",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the lease disposition fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                }
            },
            "title": "LeaseDispositionFeeModel"
        },
        "LeaseTerms": {
            "type": "object",
            "properties": {
                "acquisitionFee": {
                    "description": "Fee customer pays to get a lease",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/LeaseAcquisitionFee"
                },
                "anticipatedMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total expected mileage for term of the contract",
                    "allowEmptyValue": false
                },
                "applyRebateToInception": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not to apply rebate reductions to money due at inception",
                    "allowEmptyValue": false
                },
                "applyTradeToInception": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not to apply any trade-in reductions to money due at inception",
                    "allowEmptyValue": false
                },
                "dispositionFee": {
                    "description": "Fee customer pays on return of lease",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/LeaseDispositionFeeModel"
                },
                "otherDepreciation": {
                    "type": "number",
                    "description": "Depreciation on MSRP prior to lease, usually from the vehicle being a demo. Dealers also occasionally use this for hard add-ons for a lease",
                    "allowEmptyValue": false
                },
                "ratePerExcessMile": {
                    "type": "number",
                    "description": "Excess mileage rate for term of the contract",
                    "allowEmptyValue": false
                },
                "ratePerMile": {
                    "type": "number",
                    "description": "Mileage rate for term of the contract",
                    "allowEmptyValue": false
                },
                "residualPercent": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage of MSRP that will be retained at the end of the lease",
                    "allowEmptyValue": false
                },
                "residualValue": {
                    "type": "number",
                    "description": "Calculation: MSRP * Residual Percentage",
                    "allowEmptyValue": false
                },
                "securityDeposit": {
                    "type": "number",
                    "description": "Refundable amount to secure lease",
                    "allowEmptyValue": false
                },
                "standardMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Standard mileage in contract",
                    "allowEmptyValue": false
                }
            },
            "title": "LeaseTerms",
            "description": "Lease terms for a deal"
        },
        "Lender": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Lender address",
                    "allowEmptyValue": false
                },
                "city": {
                    "type": "string",
                    "description": "Lender city",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "string",
                    "description": "Lender code",
                    "allowEmptyValue": false
                },
                "dealType": {
                    "type": "string",
                    "description": "The Deal Type this lender supports. This must match the deal type when creating a deal.",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "Unique ID of the lender",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name of the lender",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "Lender number",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "Lender state",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Lender zip",
                    "allowEmptyValue": false
                }
            },
            "title": "Lender"
        },
        "LinePricing": {
            "type": "object",
            "properties": {
                "estimatedLaborPrice": {
                    "type": "number",
                    "description": "Estimated labor price associated with repair order line",
                    "allowEmptyValue": false
                },
                "laborCost": {
                    "type": "number",
                    "description": "Labor cost associated with repair order line. RESTRICTED, email our support for access to this field",
                    "allowEmptyValue": false
                },
                "laborPrice": {
                    "type": "number",
                    "description": "Labor price associated with repair order line",
                    "allowEmptyValue": false
                },
                "partsPrice": {
                    "type": "number",
                    "description": "Price of parts associated with repair order line",
                    "allowEmptyValue": false
                }
            },
            "title": "LinePricing"
        },
        "Lot location (location where the physical vehicle resides)": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Lot Id",
                    "allowEmptyValue": false
                },
                "location": {
                    "type": "string",
                    "description": "Lot Location",
                    "allowEmptyValue": false
                }
            },
            "title": "Lot location (location where the physical vehicle resides)"
        },
        "MiscellaneousCharges": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Amount",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "string",
                    "description": "Miscellaneous Code",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description",
                    "allowEmptyValue": false
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "Invoice Number",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Quantity",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "Miscellaneous Type",
                    "allowEmptyValue": false,
                    "enum": [
                        "ADMIN",
                        "FREIGHT",
                        "LOANER",
                        "PAINT",
                        "RENTAL",
                        "SUBLET",
                        "TAX",
                        "TOWING",
                        "FLUIDS",
                        "SUPPLY_EXPENSE",
                        "SERVICE_EXPENSE",
                        "OTHER"
                    ]
                }
            },
            "title": "MiscellaneousCharges"
        },
        "OpenMateInfo": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string",
                    "description": "The version of Open/Mate V2",
                    "allowEmptyValue": false
                }
            },
            "title": "OpenMateInfo",
            "description": "Object containing information about Open/Mate V2"
        },
        "Part": {
            "type": "object",
            "properties": {
                "coreCost": {
                    "type": "number",
                    "description": "The core charge determined by the OEM that may be redeemed by the dealer when the part is returned to the OEM",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the part. This will allow you to distinguish the same part being billed to a repair order line multiple times. **This field will ONLY be populated once the part has been sold to a line on a Repair Order**",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Job line part name",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "Job line part number",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of part used for job line",
                    "allowEmptyValue": false
                },
                "returnedCoreCost": {
                    "type": "number",
                    "description": "The cost of the returned cores",
                    "allowEmptyValue": false
                },
                "returnedCoreQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of returned cores",
                    "allowEmptyValue": false
                },
                "totalCost": {
                    "type": "number",
                    "description": "Total cost of parts on job line",
                    "allowEmptyValue": false
                },
                "unitCost": {
                    "type": "number",
                    "description": "Unit cost of part",
                    "allowEmptyValue": false
                },
                "unitPrice": {
                    "type": "number",
                    "description": "Unit price of part for customer",
                    "allowEmptyValue": false
                }
            },
            "title": "Part"
        },
        "Parts Quote Item": {
            "type": "object",
            "required": [
                "calcCode",
                "customerPrice",
                "groupCode",
                "personIdModel",
                "saleType"
            ],
            "properties": {
                "calcCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer values represent dealer-assigned categories for different price calculations. Customer pricing depends on calcCode and groupCode.",
                    "allowEmptyValue": false
                },
                "customerPrice": {
                    "type": "number",
                    "description": "The quoted price of the part for this customer",
                    "allowEmptyValue": false
                },
                "groupCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer values represent dealer-assigned categories for different types of customers. Customer pricing depends on calcCode and groupCode.",
                    "allowEmptyValue": false
                },
                "partsInventoryItem": {
                    "description": "The part that the quote was created for",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInventoryItem"
                },
                "personIdModel": {
                    "description": "The customer that was quoted the part",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "saleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer values represent dealer-assigned categories for sale types, with range[1-15] available for the dealer to assign",
                    "allowEmptyValue": false
                }
            },
            "title": "Parts Quote Item"
        },
        "PartsHistory": {
            "type": "object",
            "properties": {
                "partsInventoryItem": {
                    "description": "General inventory information about the part",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInventoryItem"
                },
                "partsSalesReportByMonth": {
                    "type": "object",
                    "description": "A report of the last 12 months of various sales/return information",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "$ref": "#/definitions/PartsSalesReport"
                    }
                }
            },
            "title": "PartsHistory"
        },
        "PartsInventoryItem": {
            "type": "object",
            "required": [
                "dmsPartNumber",
                "minStockingLevel",
                "partNumber"
            ],
            "properties": {
                "bestStockingLevel": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The high-end threshold of quantity on hand when an order is system generated. This can be overridden by the user supplied max quantity which can limit the order to a lower quantity",
                    "allowEmptyValue": false
                },
                "binLocations": {
                    "type": "array",
                    "description": "The bin locations for the part. Note that there is a maximum of 3 bin locations.",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "corePrice": {
                    "type": "number",
                    "description": "A deposit that is charged in addition to the purchased part. The customer can return the old part to be reimbursed for this charge",
                    "allowEmptyValue": false
                },
                "created": {
                    "type": "string",
                    "format": "date",
                    "description": "Date the part number was added to inventory",
                    "allowEmptyValue": false
                },
                "dealerCost": {
                    "type": "number",
                    "description": "Cost to the dealer",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the parts inventory item",
                    "allowEmptyValue": false
                },
                "dmsPartNumber": {
                    "type": "string",
                    "description": "The DMS part number.  This may be the same as the OEM part number or it could be prefixed with a DMS value, e.g. A,123 for OEM part number 123.  Note that it is possible to have multiple DMS part numbers mapped to a single OEM part number.",
                    "allowEmptyValue": false
                },
                "dmsSupersedes": {
                    "type": "array",
                    "description": "DMS part numbers that this part supersedes",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "dmsSupersessions": {
                    "type": "array",
                    "description": "DMS part numbers that supersede this part",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "group": {
                    "type": "string",
                    "description": "Generic field that may be used to specify usage, availability, or classification",
                    "allowEmptyValue": false
                },
                "lastReceived": {
                    "type": "string",
                    "format": "date",
                    "description": "The last date a quantity of the part was received from the manufacturer",
                    "allowEmptyValue": false
                },
                "lastSold": {
                    "type": "string",
                    "format": "date",
                    "description": "The last date the part was sold",
                    "allowEmptyValue": false
                },
                "listPrice": {
                    "type": "number",
                    "description": "List price. Typically the MSRP but may be adjusted/escalated by the dealer.",
                    "allowEmptyValue": false
                },
                "maxStockingLevel": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of parts allowed to be kept in stock.When this is zero, the maximum number is determined automatically in the DMS.",
                    "allowEmptyValue": false
                },
                "minStockingLevel": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User-supplied, low-end threshold of quantityOnHand that will trigger an automatic parts order",
                    "allowEmptyValue": false
                },
                "msrp": {
                    "type": "number",
                    "description": "Last MSRP value Auto/Mate received from the OEM. This may be out of sync depending on the OEM's update schedule.",
                    "allowEmptyValue": false
                },
                "oemCode": {
                    "type": "string",
                    "description": "Original equipment manufacturer identification code",
                    "allowEmptyValue": false,
                    "enum": [
                        "AF",
                        "AL",
                        "AM",
                        "AP",
                        "AT",
                        "BB",
                        "BD",
                        "BE",
                        "BL",
                        "BM",
                        "BO",
                        "BW",
                        "CH",
                        "CU",
                        "CV",
                        "CX",
                        "CY",
                        "DC",
                        "DT",
                        "DU",
                        "FE",
                        "FL",
                        "FM",
                        "FI",
                        "FW",
                        "GA",
                        "GC",
                        "GF",
                        "GL",
                        "GM",
                        "GN",
                        "GR",
                        "GS",
                        "HC",
                        "HD",
                        "HH",
                        "HO",
                        "HS",
                        "HU",
                        "HY",
                        "IN",
                        "IZ",
                        "JD",
                        "JG",
                        "KA",
                        "KI",
                        "KT",
                        "LA",
                        "LR",
                        "LX",
                        "MA",
                        "MC",
                        "MB",
                        "MG",
                        "MI",
                        "MO",
                        "MQ",
                        "MX",
                        "NA",
                        "NC",
                        "NI",
                        "NV",
                        "OX",
                        "PG",
                        "PL",
                        "PO",
                        "PU",
                        "RA",
                        "RD",
                        "RN",
                        "RO",
                        "RS",
                        "RY",
                        "SA",
                        "SB",
                        "SL",
                        "SN",
                        "SR",
                        "SS",
                        "ST",
                        "SZ",
                        "TB",
                        "TG",
                        "TM",
                        "TP",
                        "TR",
                        "TY",
                        "UD",
                        "VP",
                        "VV",
                        "VW",
                        "WB",
                        "WS",
                        "YM",
                        "MR",
                        "C1",
                        "C2",
                        "C3",
                        "C4",
                        "C5",
                        "C6",
                        "C7",
                        "C8",
                        "C9",
                        "C0"
                    ]
                },
                "packageQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity that an OEM supplies when the part is ordered from the OEM",
                    "allowEmptyValue": false
                },
                "partNumber": {
                    "type": "string",
                    "description": "The OEM part number",
                    "allowEmptyValue": false
                },
                "quantityAvailable": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of parts quantity currently available",
                    "allowEmptyValue": false
                },
                "quantityOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of parts the system currently shows in inventory",
                    "allowEmptyValue": false
                },
                "quantityOnOrder": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity on order for this part",
                    "allowEmptyValue": false
                },
                "reorderPoint": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System-generated value, calculated using prior sales history from the last automatic parts order. Reaching this threshold triggers an automatic order of the number of parts it takes to reach bestStockingLevel",
                    "allowEmptyValue": false
                },
                "reservedQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity of parts currently reserved for customers and not available for sale",
                    "allowEmptyValue": false
                },
                "soldAsPackage": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether were ordered individually or by the packaged quantity provided by the OEM",
                    "allowEmptyValue": false
                },
                "sourceCode": {
                    "type": "string",
                    "description": "The parts inventory source the part is assigned to",
                    "allowEmptyValue": false
                },
                "stockingStatus": {
                    "type": "string",
                    "description": "Signifies the stocking status of the part.",
                    "allowEmptyValue": false,
                    "enum": [
                        "STOCKED",
                        "NOT_STOCKED",
                        "PHASE_OUT",
                        "AUTO_PHASE_OUT",
                        "MANUAL"
                    ]
                },
                "supersedes": {
                    "type": "array",
                    "description": "OEM part numbers that this part supersedes",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "supersessions": {
                    "type": "array",
                    "description": "OEM part numbers that supersede this part",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "unitCost": {
                    "type": "number",
                    "description": "The unit cost of the part",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "PartsInventoryItem"
        },
        "PartsInventoryItemUpdate": {
            "type": "object",
            "properties": {
                "binLocations": {
                    "type": "array",
                    "description": "The bin where the part is stored, followed by any supplemental locations",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "quantityOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of parts the system currently shows in inventory",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsInventoryItemUpdate"
        },
        "PartsInvoice": {
            "type": "object",
            "required": [
                "id",
                "invoiceDate",
                "invoiceNumber",
                "partsInvoiceLines",
                "salesman"
            ],
            "properties": {
                "billTo": {
                    "description": "Bill To",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoiceAddress"
                },
                "cashieredIndicator": {
                    "type": "boolean",
                    "example": false,
                    "description": "Cashiered indicator - Payment processed indicator",
                    "allowEmptyValue": false
                },
                "comments": {
                    "type": "array",
                    "description": "Comments - Max of 4 comments with 50 characters each",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "customer": {
                    "description": "Customer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Delivery Date",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description - Used only for quotes",
                    "allowEmptyValue": false
                },
                "discount": {
                    "type": "number",
                    "description": "Discount",
                    "allowEmptyValue": false
                },
                "freight": {
                    "type": "number",
                    "description": "freight",
                    "allowEmptyValue": false
                },
                "handlingFee": {
                    "type": "number",
                    "description": "Handling Fee",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the parts invoice",
                    "allowEmptyValue": false
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Invoice Date",
                    "allowEmptyValue": false
                },
                "invoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Invoice Number",
                    "allowEmptyValue": false
                },
                "invoiceState": {
                    "type": "string",
                    "description": "Current status of the invoice (Open, Ordered, Shipped, etc)\n* OPEN:  \n* PICKED:  \n* ORDERED:  \n* SHIPPED:  \n* DELIVERED:  \n* COMPLETE: Invoice was completed, potentially cashiered or are at least cashiering eligible,  but has not gone through the end of day process which would post the invoice to accounting.\n* VOIDED:  \n* CLOSED: Invoice has gone through EOD and was posted to accounting, no longer can be edited.\n* EXPIRED:  \n* MIGRATED:  ",
                    "allowEmptyValue": false,
                    "enum": [
                        "OPEN",
                        "PICKED",
                        "ORDERED",
                        "SHIPPED",
                        "DELIVERED",
                        "COMPLETE",
                        "VOIDED",
                        "CLOSED",
                        "EXPIRED",
                        "MIGRATED"
                    ]
                },
                "invoiceTotal": {
                    "type": "number",
                    "description": "Invoice Total",
                    "allowEmptyValue": false
                },
                "invoiceType": {
                    "type": "string",
                    "description": "Invoice Type\n* REPAIR_ORDER: An invoice created to a repair order\n* INVOICE: Parts Invoice\n* INVOICE_PENDING: A Pending parts invoice that could change.\n* SPECIAL_ORDER: An invoice created for a customer where parts have been placed on order\n* QUOTE: A quoted invoice where parts have not been relieved from inventory",
                    "allowEmptyValue": false,
                    "enum": [
                        "REPAIR_ORDER",
                        "INVOICE",
                        "INVOICE_PENDING",
                        "SPECIAL_ORDER",
                        "QUOTE"
                    ]
                },
                "originalInvoiceId": {
                    "type": "string",
                    "description": "The original invoice id that this invoice is linked to.",
                    "allowEmptyValue": false
                },
                "originalInvoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The original invoice number that this invoice is linked to.",
                    "allowEmptyValue": false
                },
                "originalInvoiceType": {
                    "type": "string",
                    "description": "The original invoice type that this invoice is linked to.\n* REPAIR_ORDER: An invoice created to a repair order\n* INVOICE: Parts Invoice\n* INVOICE_PENDING: A Pending parts invoice that could change.\n* SPECIAL_ORDER: An invoice created for a customer where parts have been placed on order\n* QUOTE: A quoted invoice where parts have not been relieved from inventory",
                    "allowEmptyValue": false,
                    "enum": [
                        "REPAIR_ORDER",
                        "INVOICE",
                        "INVOICE_PENDING",
                        "SPECIAL_ORDER",
                        "QUOTE"
                    ]
                },
                "partsInvoiceLines": {
                    "type": "array",
                    "description": "Part Line Items",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ExtractPartsInvoiceLineModel"
                    }
                },
                "payType": {
                    "type": "string",
                    "description": "Pay Type\n* REPAIR_ORDER: The pay type will be determined by the payment for the repair order.\n* CASH:  \n* CHARGE: Payment will be processed to the customers or business charge account.\n* COD: Cash on delivery.\n* INTERNAL:  \n* CREDIT_CARD:  \n* PENDING: Method to be determined\n* AMOUNT_DUE: Method to be determined during the cashiering process.",
                    "allowEmptyValue": false,
                    "enum": [
                        "REPAIR_ORDER",
                        "CASH",
                        "CHARGE",
                        "COD",
                        "INTERNAL",
                        "CREDIT_CARD",
                        "PENDING",
                        "AMOUNT_DUE"
                    ]
                },
                "purchaseOrderNumbers": {
                    "type": "array",
                    "description": "Supplier Purchase Order Numbers - Two order numbers are currently supported",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "saleTypeDescription": {
                    "type": "string",
                    "description": "Sale Type Description",
                    "allowEmptyValue": false
                },
                "salesPersonCode": {
                    "type": "string",
                    "description": "Sales Person code",
                    "allowEmptyValue": false
                },
                "salesman": {
                    "description": "Salesman",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsSalesPerson"
                },
                "shipTo": {
                    "description": "Ship To",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsInvoiceAddress"
                },
                "shippingCost": {
                    "type": "number",
                    "description": "Shipping Cost",
                    "allowEmptyValue": false
                },
                "sorDeposit": {
                    "type": "number",
                    "description": "Special Order Deposit",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "Stock Number",
                    "allowEmptyValue": false
                },
                "subTotal": {
                    "type": "number",
                    "description": "Sub-Total for the invoice",
                    "allowEmptyValue": false
                },
                "taxes": {
                    "type": "array",
                    "description": "Dealer-assigned tax values. Usage may differ based on descriptions",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PartsInvoiceTaxItem"
                    }
                },
                "totalCoreAmount": {
                    "type": "number",
                    "description": "Core Amount - The core charge determined by the OEM that may be redeemed by the dealer when the part is returned to the OEM",
                    "allowEmptyValue": false
                },
                "totalCost": {
                    "type": "number",
                    "description": "Total Cost",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "VIN number",
                    "allowEmptyValue": false
                },
                "willCall": {
                    "type": "boolean",
                    "example": false,
                    "description": "Will Call",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsInvoice"
        },
        "PartsInvoiceAddress": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string",
                    "description": "Address line 1",
                    "allowEmptyValue": false
                },
                "addressLine2": {
                    "type": "string",
                    "description": "Address line 2",
                    "allowEmptyValue": false
                },
                "city": {
                    "type": "string",
                    "description": "City",
                    "allowEmptyValue": false
                },
                "name1": {
                    "type": "string",
                    "description": "Name 1",
                    "allowEmptyValue": false
                },
                "name2": {
                    "type": "string",
                    "description": "Name 2",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "State",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Zip",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsInvoiceAddress"
        },
        "PartsInvoiceTaxItem": {
            "type": "object",
            "properties": {
                "taxAmount": {
                    "type": "number",
                    "description": "Dollar amount of tax being applied to the invoice",
                    "allowEmptyValue": false
                },
                "taxDescription": {
                    "type": "string",
                    "description": "Description of the tax usage scenario. Use the tax_setup call to match up with tax rates",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsInvoiceTaxItem"
        },
        "PartsInvoiceTaxSetup": {
            "type": "object",
            "properties": {
                "taxDescription": {
                    "type": "string",
                    "description": "Description of the tax usage scenario. If this is \"Sales Tax 1\" or \"Sales Tax 2\" then please refer to the dealership for usage. ",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Tax rate percentage applied to the invoice if used.",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsInvoiceTaxSetup"
        },
        "PartsOrder": {
            "type": "object",
            "properties": {
                "alternateOrderNumber": {
                    "type": "string",
                    "description": "Alternate order number that can be used to reference a parts order",
                    "allowEmptyValue": false
                },
                "creationDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the order was created",
                    "allowEmptyValue": false
                },
                "orderDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the order was submitted to a supplier",
                    "allowEmptyValue": false
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number",
                    "allowEmptyValue": false
                },
                "partsOrderItems": {
                    "type": "array",
                    "description": "Items on the parts order",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PartsOrderItem"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status of the parts order",
                    "allowEmptyValue": false,
                    "enum": [
                        "NOT_ORDERED",
                        "ON_ORDER",
                        "ARRIVED",
                        "ON_BACK_ORDER",
                        "RECEIPTED",
                        "SOLD",
                        "CANCELLED",
                        "VOIDED",
                        "UNKNOWN"
                    ]
                }
            },
            "title": "PartsOrder"
        },
        "PartsOrderItem": {
            "type": "object",
            "properties": {
                "binLocations": {
                    "type": "array",
                    "description": "Physical locations of the part",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "customerName": {
                    "type": "string",
                    "description": "Customers name on the parts order",
                    "allowEmptyValue": false
                },
                "dealerCost": {
                    "type": "number",
                    "description": "Dealer cost of the part",
                    "allowEmptyValue": false
                },
                "itemDescription": {
                    "type": "string",
                    "description": "Description of the part",
                    "allowEmptyValue": false
                },
                "orderStatus": {
                    "type": "string",
                    "description": "Current status of the item on the parts order",
                    "allowEmptyValue": false,
                    "enum": [
                        "NOT_ORDERED",
                        "ON_ORDER",
                        "ARRIVED",
                        "ON_BACK_ORDER",
                        "RECEIPTED",
                        "SOLD",
                        "CANCELLED",
                        "VOIDED",
                        "UNKNOWN"
                    ]
                },
                "partNumber": {
                    "type": "string",
                    "description": "The part number of the item on the order",
                    "allowEmptyValue": false
                },
                "partSourceCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The part inventory source the part was assigned to",
                    "allowEmptyValue": false
                },
                "quantityOrdered": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity ordered",
                    "allowEmptyValue": false
                },
                "quantityReceived": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity of parts received on the order",
                    "allowEmptyValue": false
                },
                "sourceInvoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The source invoice number",
                    "allowEmptyValue": false
                },
                "sourceInvoiceType": {
                    "type": "string",
                    "description": "The type of order",
                    "allowEmptyValue": false,
                    "enum": [
                        "REPAIR_ORDER",
                        "INVOICE",
                        "INVOICE_PENDING",
                        "SPECIAL_ORDER",
                        "SUBLET",
                        "QUOTE",
                        "LOST_SALE"
                    ]
                },
                "specialOrderInfo": {
                    "description": "Populated if the parts order item is a special order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PartsSpecialOrderInfo"
                },
                "suggestedRetailPrice": {
                    "type": "number",
                    "description": "List price of the part",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsOrderItem"
        },
        "PartsSaleType": {
            "type": "object",
            "required": [
                "description",
                "saleType"
            ],
            "properties": {
                "counterDefault": {
                    "type": "boolean",
                    "example": false,
                    "description": "If true, this sale type has been designated by the dealer as the default sale type for parts billed to an over-the-counter invoice",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "A description of the Sale Type",
                    "allowEmptyValue": false
                },
                "payType": {
                    "type": "string",
                    "description": "Pay Type corresponding to this sale type (customer, internal, warranty, etc.)\n* CUSTOMER: Customer pay\n* CUSTOMER_WHOLESALE_COMP: Customer pay with wholesale compensation\n* WARRANTY: Internal pay for warranty\n* INTERNAL: Internal pay for repair order\n* SERVICE_CONTRACT:  \n* OTHER:  \n* UNKNOWN:  ",
                    "allowEmptyValue": false,
                    "enum": [
                        "CUSTOMER",
                        "CUSTOMER_WHOLESALE_COMP",
                        "WARRANTY",
                        "INTERNAL",
                        "SERVICE_CONTRACT",
                        "OTHER",
                        "UNKNOWN"
                    ]
                },
                "repairOrderDefault": {
                    "type": "boolean",
                    "example": false,
                    "description": "If true, this sale type has been designated by the dealer as the default sale type for parts billed to a repair order",
                    "allowEmptyValue": false
                },
                "saleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Sale Type - Integer values represent dealer-assigned categories for sale types, with range[1-15] available for the dealer to assign",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsSaleType"
        },
        "PartsSalesPerson": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "Parts sales person's first name",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the parts sales person",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Parts sales person's last name",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsSalesPerson"
        },
        "PartsSalesReport": {
            "type": "object",
            "properties": {
                "counterReturns": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total over the counter returns for the period",
                    "allowEmptyValue": false
                },
                "counterSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total over the counter sales for the period",
                    "allowEmptyValue": false
                },
                "counterUnusualSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total over the counter sales that don't impact dealer's automatic restocking for the period",
                    "allowEmptyValue": false
                },
                "lostCounterSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total over the counter lost sales for the period",
                    "allowEmptyValue": false
                },
                "lostRepairSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total repair-order-related lost sales for the period",
                    "allowEmptyValue": false
                },
                "repairReturns": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total repair-order-related returns for the period",
                    "allowEmptyValue": false
                },
                "repairSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total repair-order-related sales for the period",
                    "allowEmptyValue": false
                },
                "repairUnusualSales": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total repair-order-related sales that don't impact dealer's automatic restocking for the period",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsSalesReport"
        },
        "PartsScanningUpdateCountFileResponseModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Success Error Message",
                    "allowEmptyValue": false
                },
                "partId": {
                    "type": "string",
                    "description": "Part Id",
                    "allowEmptyValue": false
                },
                "partNumber": {
                    "type": "string",
                    "description": "Part Number",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "Update Part details status",
                    "allowEmptyValue": false,
                    "enum": [
                        "SUCCESS",
                        "FAILURE",
                        "WARNING"
                    ]
                }
            },
            "title": "PartsScanningUpdateCountFileResponseModel"
        },
        "PartsSpecialOrderInfo": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "The customer on the special order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "When the special order will be delivered",
                    "allowEmptyValue": false
                },
                "purchaseOrderNumbers": {
                    "type": "array",
                    "description": "Supplier Purchase Order Numbers - Two order numbers are currently supported. ",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "salesPersonCode": {
                    "type": "string",
                    "description": "Sales person code",
                    "allowEmptyValue": false
                },
                "serviceAdvisor": {
                    "description": "The service advisor on the special order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceAdvisor"
                },
                "specialOrderNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The special order number",
                    "allowEmptyValue": false
                },
                "willCall": {
                    "type": "boolean",
                    "example": false,
                    "description": "If the special order will be shipped to the customer, this will be false",
                    "allowEmptyValue": false
                }
            },
            "title": "PartsSpecialOrderInfo"
        },
        "Payment": {
            "type": "object",
            "properties": {
                "amountFinanced": {
                    "type": "number",
                    "description": "Amount financed",
                    "allowEmptyValue": false
                },
                "daysToFirstPayment": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days until the first payment is due",
                    "allowEmptyValue": false
                },
                "driveOff": {
                    "type": "number",
                    "description": "The amount paid at the dealership to 'drive off'",
                    "allowEmptyValue": false
                },
                "financeCharge": {
                    "type": "number",
                    "description": "The finance charge amount from the lender for providing the loan.",
                    "allowEmptyValue": false
                },
                "firstPayment": {
                    "type": "number",
                    "description": "The amount paid on the first payment",
                    "allowEmptyValue": false
                },
                "firstPaymentDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of first payment",
                    "allowEmptyValue": false
                },
                "payment": {
                    "type": "number",
                    "description": "The amount paid for each payment after the first payment",
                    "allowEmptyValue": false
                },
                "totalCapitalizedCost": {
                    "type": "number",
                    "description": "The total capitalized cost for the deal",
                    "allowEmptyValue": false
                },
                "totalFees": {
                    "type": "number",
                    "description": "Total amount in fees",
                    "allowEmptyValue": false
                },
                "totalPaymentAmount": {
                    "type": "number",
                    "description": "Total amount in payments to be made",
                    "allowEmptyValue": false
                },
                "totalProducts": {
                    "type": "number",
                    "description": "Total amount in products",
                    "allowEmptyValue": false
                },
                "totalTax": {
                    "type": "number",
                    "description": "Total amount in taxes",
                    "allowEmptyValue": false
                },
                "totalTradeAllowance": {
                    "type": "number",
                    "description": "Total amount in trade allowance",
                    "allowEmptyValue": false
                }
            },
            "title": "Payment"
        },
        "PaymentInfo": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the payment",
                    "allowEmptyValue": false
                },
                "paymentDescription": {
                    "type": "string",
                    "description": "The description of the payment, if it is a credit card payment this will be the card type (Visa, Discover, etc.",
                    "allowEmptyValue": false
                },
                "paymentType": {
                    "type": "string",
                    "description": "The type of payment\n* CASH: Payment was made with cash\n* CHECK: Payment was made with a check\n* CREDIT_CARD: Payment was made with a credit card\n* EFT: Payment was made with an electronic funds transfer\n* CHARGE: Payment was made with charge card\n* PREPAID: Payment was made with a prepaid card\n* OTHER: Payment was made with some other type of payment",
                    "allowEmptyValue": false,
                    "enum": [
                        "CASH",
                        "CHECK",
                        "CREDIT_CARD",
                        "EFT",
                        "CHARGE",
                        "PREPAID",
                        "OTHER"
                    ]
                }
            },
            "title": "PaymentInfo"
        },
        "PendingTransaction": {
            "type": "object",
            "required": [
                "journalSourceCode",
                "originatingCompany",
                "referenceNumber",
                "transactionItems",
                "transactionStatus"
            ],
            "properties": {
                "comments": {
                    "type": "string",
                    "description": "Notes attached to the transaction",
                    "allowEmptyValue": false
                },
                "duplicateReferenceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A secondary number that allows you to have transactions with the same reference number",
                    "allowEmptyValue": false
                },
                "journalSourceCode": {
                    "type": "string",
                    "description": "The journal source the transaction was saved to",
                    "allowEmptyValue": false
                },
                "originatingCompany": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the transaction came from",
                    "allowEmptyValue": false
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "Identifies what the transaction is tied to. E.g. for an invoice this would be the invoiceDealerNumber",
                    "allowEmptyValue": false
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of the transaction. This defaults to the date the transaction was created, but it can be arbitrarily set by the dealership",
                    "allowEmptyValue": false
                },
                "transactionItemType": {
                    "type": "string",
                    "description": "DEPRECATED (this field will be removed in a future version)",
                    "allowEmptyValue": false,
                    "enum": [
                        "NORMAL",
                        "COST",
                        "INVENTORY"
                    ]
                },
                "transactionItems": {
                    "type": "array",
                    "description": "Line items of a transaction",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TransactionItem"
                    }
                },
                "transactionStatus": {
                    "type": "string",
                    "description": "The status of the transaction",
                    "allowEmptyValue": false,
                    "enum": [
                        "PENDING",
                        "POSTED",
                        "VOIDED"
                    ]
                }
            },
            "title": "PendingTransaction"
        },
        "Person": {
            "type": "object",
            "required": [
                "business",
                "controlNumber",
                "created",
                "lastModified",
                "naId",
                "systems",
                "uuid"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": false,
                    "description": "True if the customer record is marked as active, false if inactive. Records may be marked as inactive by the dealer to indicate they should no longer be used (duplicate, etc.). Note that inactive customer records are omitted from customer search results by default.",
                    "allowEmptyValue": false
                },
                "addresses": {
                    "type": "array",
                    "description": "A list of addresses for the customer. Max of 1 of each address type.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "birthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Customer date of birth",
                    "allowEmptyValue": false
                },
                "business": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer is a business or an individual",
                    "allowEmptyValue": false
                },
                "businessTitle": {
                    "type": "string",
                    "description": "The business contact's title, e.g. CEO",
                    "allowEmptyValue": false
                },
                "companyName": {
                    "type": "string",
                    "description": "The business or company name - should always be populated for business customers",
                    "allowEmptyValue": false
                },
                "contactName": {
                    "type": "string",
                    "description": "Additional contact name - often used for a contact for a business customer",
                    "allowEmptyValue": false
                },
                "controlNumber": {
                    "type": "string",
                    "description": "The customer control number. This is the user-visible identifier in our system. This value will be auto-assigned if not specified.",
                    "allowEmptyValue": false
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-01-01T10:00:00.000Z",
                    "description": "The date the customer was created",
                    "allowEmptyValue": false
                },
                "deliveryRoute": {
                    "type": "string",
                    "description": "Dealer defined delivery routing number that classifies parts deliveries to customers",
                    "allowEmptyValue": false
                },
                "doNotSell": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates that this information should not be sold",
                    "allowEmptyValue": false
                },
                "driversLicense": {
                    "description": "The driver license information for a customer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DriversLicense"
                },
                "email": {
                    "type": "string",
                    "description": "The customer email address",
                    "allowEmptyValue": false
                },
                "firstName": {
                    "type": "string",
                    "description": "First name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "gender": {
                    "type": "string",
                    "description": "Indicates gender, with possible values MALE, FEMALE, OTHER",
                    "allowEmptyValue": false,
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ]
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-03-01T16:06:38.002Z",
                    "description": "The date the customer was last modified",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "mergedParent": {
                    "type": "string",
                    "description": "UUID of parent record if this record has been merged into another",
                    "allowEmptyValue": false
                },
                "mergedRecords": {
                    "type": "array",
                    "description": "UUIDs of merged customer records",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer",
                    "allowEmptyValue": false
                },
                "naId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The customer 'name ID.' This is a backend identifier auto-assigned in our system and is not user-visible.",
                    "allowEmptyValue": false
                },
                "name2": {
                    "type": "string",
                    "description": "Free form text field with dealer-specific meaning",
                    "allowEmptyValue": false
                },
                "nickname": {
                    "type": "string",
                    "description": "A customer nickname",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "free form text customer notes",
                    "allowEmptyValue": false
                },
                "phones": {
                    "type": "array",
                    "description": "A list of phone numbers for the customer. Max of 3 phones per customer.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Phone"
                    }
                },
                "recordProtected": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the record is flagged as 'protected.' Protected records cannot be modified via Open/Mate",
                    "allowEmptyValue": false
                },
                "rewardsNumber": {
                    "type": "string",
                    "description": "The rewards number for the customer.  This is often dealer specific.",
                    "allowEmptyValue": false
                },
                "salesTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the customer can be charged sales tax",
                    "allowEmptyValue": false
                },
                "sendEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer would like to receive email",
                    "allowEmptyValue": false
                },
                "suffix": {
                    "type": "string",
                    "description": "The suffix, e.g. Jr.",
                    "allowEmptyValue": false
                },
                "systems": {
                    "type": "array",
                    "description": "Indicates which systems the customer is active in, e.g. SERVICE",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNTING",
                            "ACCOUNTS_PAYABLE",
                            "PARTS",
                            "SERVICE",
                            "BILL",
                            "PAYROLL"
                        ]
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The customer title, e.g. Mrs.",
                    "allowEmptyValue": false
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID for the customer. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                },
                "vehicles": {
                    "type": "array",
                    "description": "List of vehicles currently owned by this customer",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Vehicle"
                    }
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "Person"
        },
        "PersonCreate": {
            "type": "object",
            "required": [
                "business",
                "systems"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "description": "A list of addresses for the customer. Max of 1 of each address type.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "birthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Customer date of birth",
                    "allowEmptyValue": false
                },
                "business": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer is a business or an individual",
                    "allowEmptyValue": false
                },
                "businessTitle": {
                    "type": "string",
                    "description": "The business contact's title, e.g. CEO",
                    "allowEmptyValue": false
                },
                "companyName": {
                    "type": "string",
                    "description": "The business or company name - should always be populated for business customers",
                    "allowEmptyValue": false
                },
                "contactName": {
                    "type": "string",
                    "description": "Additional contact name - often used for a contact for a business customer",
                    "allowEmptyValue": false
                },
                "controlNumber": {
                    "type": "string",
                    "description": "The customer control number. This is the user-visible identifier in our system. This value will be auto-assigned if not specified.",
                    "allowEmptyValue": false
                },
                "doNotSell": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates that this information should not be sold",
                    "allowEmptyValue": false
                },
                "driversLicense": {
                    "description": "The driver license information for a customer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DriversLicense"
                },
                "email": {
                    "type": "string",
                    "description": "The customer email address",
                    "allowEmptyValue": false
                },
                "firstName": {
                    "type": "string",
                    "description": "First name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "gender": {
                    "type": "string",
                    "description": "Indicates gender, with possible values MALE, FEMALE, OTHER",
                    "allowEmptyValue": false,
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ]
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer",
                    "allowEmptyValue": false
                },
                "name2": {
                    "type": "string",
                    "description": "Free form text field with dealer-specific meaning",
                    "allowEmptyValue": false
                },
                "nickname": {
                    "type": "string",
                    "description": "A customer nickname",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "free form text customer notes",
                    "allowEmptyValue": false
                },
                "phones": {
                    "type": "array",
                    "description": "A list of phone numbers for the customer. Max of 3 phones per customer.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Phone"
                    }
                },
                "rewardsNumber": {
                    "type": "string",
                    "description": "The rewards number for the customer.  This is often dealer specific.",
                    "allowEmptyValue": false
                },
                "salesTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the customer can be charged sales tax",
                    "allowEmptyValue": false
                },
                "sendEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer would like to receive email",
                    "allowEmptyValue": false
                },
                "suffix": {
                    "type": "string",
                    "description": "The suffix, e.g. Jr.",
                    "allowEmptyValue": false
                },
                "systems": {
                    "type": "array",
                    "description": "Indicates which systems the customer is active in, e.g. SERVICE",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNTING",
                            "ACCOUNTS_PAYABLE",
                            "PARTS",
                            "SERVICE",
                            "BILL",
                            "PAYROLL"
                        ]
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The customer title, e.g. Mrs.",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "PersonCreate"
        },
        "PersonId": {
            "type": "object",
            "required": [
                "uuid"
            ],
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the customer/person",
                    "allowEmptyValue": false
                }
            },
            "title": "PersonId"
        },
        "PersonIdentity": {
            "type": "object",
            "required": [
                "business",
                "controlNumber",
                "created",
                "lastModified",
                "naId",
                "systems",
                "uuid"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": false,
                    "description": "True if the customer record is marked as active, false if inactive. Records may be marked as inactive by the dealer to indicate they should no longer be used (duplicate, etc.). Note that inactive customer records are omitted from customer search results by default.",
                    "allowEmptyValue": false
                },
                "addresses": {
                    "type": "array",
                    "description": "A list of addresses for the customer. Max of 1 of each address type.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "birthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Customer date of birth",
                    "allowEmptyValue": false
                },
                "business": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer is a business or an individual",
                    "allowEmptyValue": false
                },
                "businessTitle": {
                    "type": "string",
                    "description": "The business contact's title, e.g. CEO",
                    "allowEmptyValue": false
                },
                "companyName": {
                    "type": "string",
                    "description": "The business or company name - should always be populated for business customers",
                    "allowEmptyValue": false
                },
                "contactName": {
                    "type": "string",
                    "description": "Additional contact name - often used for a contact for a business customer",
                    "allowEmptyValue": false
                },
                "controlNumber": {
                    "type": "string",
                    "description": "The customer control number. This is the user-visible identifier in our system. This value will be auto-assigned if not specified.",
                    "allowEmptyValue": false
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2015-01-01T10:00:00.000Z",
                    "description": "The date the customer was created",
                    "allowEmptyValue": false
                },
                "deliveryRoute": {
                    "type": "string",
                    "description": "Dealer defined delivery routing number that classifies parts deliveries to customers",
                    "allowEmptyValue": false
                },
                "doNotSell": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates that this information should not be sold",
                    "allowEmptyValue": false
                },
                "driversLicense": {
                    "description": "The driver license information for a customer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DriversLicense"
                },
                "email": {
                    "type": "string",
                    "description": "The customer email address",
                    "allowEmptyValue": false
                },
                "firstName": {
                    "type": "string",
                    "description": "First name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "gender": {
                    "type": "string",
                    "description": "Indicates gender, with possible values MALE, FEMALE, OTHER",
                    "allowEmptyValue": false,
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ]
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-03-01T16:06:38.002Z",
                    "description": "The date the customer was last modified",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "mergedParent": {
                    "type": "string",
                    "description": "UUID of parent record if this record has been merged into another",
                    "allowEmptyValue": false
                },
                "mergedRecords": {
                    "type": "array",
                    "description": "UUIDs of merged customer records",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer",
                    "allowEmptyValue": false
                },
                "naId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The customer 'name ID.' This is a backend identifier auto-assigned in our system and is not user-visible.",
                    "allowEmptyValue": false
                },
                "name2": {
                    "type": "string",
                    "description": "Free form text field with dealer-specific meaning",
                    "allowEmptyValue": false
                },
                "nickname": {
                    "type": "string",
                    "description": "A customer nickname",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "free form text customer notes",
                    "allowEmptyValue": false
                },
                "phones": {
                    "type": "array",
                    "description": "A list of phone numbers for the customer. Max of 3 phones per customer.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Phone"
                    }
                },
                "recordProtected": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the record is flagged as 'protected.' Protected records cannot be modified via Open/Mate",
                    "allowEmptyValue": false
                },
                "rewardsNumber": {
                    "type": "string",
                    "description": "The rewards number for the customer.  This is often dealer specific.",
                    "allowEmptyValue": false
                },
                "salesTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the customer can be charged sales tax",
                    "allowEmptyValue": false
                },
                "sendEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer would like to receive email",
                    "allowEmptyValue": false
                },
                "suffix": {
                    "type": "string",
                    "description": "The suffix, e.g. Jr.",
                    "allowEmptyValue": false
                },
                "systems": {
                    "type": "array",
                    "description": "Indicates which systems the customer is active in, e.g. SERVICE",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNTING",
                            "ACCOUNTS_PAYABLE",
                            "PARTS",
                            "SERVICE",
                            "BILL",
                            "PAYROLL"
                        ]
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The customer title, e.g. Mrs.",
                    "allowEmptyValue": false
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID for the customer. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "PersonIdentity"
        },
        "PersonUpdate": {
            "type": "object",
            "required": [
                "business",
                "lastModified",
                "systems"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "description": "A list of addresses for the customer. Max of 1 of each address type.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "birthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Customer date of birth",
                    "allowEmptyValue": false
                },
                "business": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer is a business or an individual",
                    "allowEmptyValue": false
                },
                "businessTitle": {
                    "type": "string",
                    "description": "The business contact's title, e.g. CEO",
                    "allowEmptyValue": false
                },
                "companyName": {
                    "type": "string",
                    "description": "The business or company name - should always be populated for business customers",
                    "allowEmptyValue": false
                },
                "contactName": {
                    "type": "string",
                    "description": "Additional contact name - often used for a contact for a business customer",
                    "allowEmptyValue": false
                },
                "doNotSell": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates that this information should not be sold",
                    "allowEmptyValue": false
                },
                "driversLicense": {
                    "description": "The driver license information for a customer",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DriversLicense"
                },
                "email": {
                    "type": "string",
                    "description": "The customer email address",
                    "allowEmptyValue": false
                },
                "firstName": {
                    "type": "string",
                    "description": "First name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "gender": {
                    "type": "string",
                    "description": "Indicates gender, with possible values MALE, FEMALE, OTHER",
                    "allowEmptyValue": false,
                    "enum": [
                        "MALE",
                        "FEMALE",
                        "OTHER"
                    ]
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-03-01T16:06:38.002Z",
                    "description": "The date the customer was last modified",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name - should always be populated for individuals",
                    "allowEmptyValue": false
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer",
                    "allowEmptyValue": false
                },
                "name2": {
                    "type": "string",
                    "description": "Free form text field with dealer-specific meaning",
                    "allowEmptyValue": false
                },
                "nickname": {
                    "type": "string",
                    "description": "A customer nickname",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "free form text customer notes",
                    "allowEmptyValue": false
                },
                "phones": {
                    "type": "array",
                    "description": "A list of phone numbers for the customer. Max of 3 phones per customer.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Phone"
                    }
                },
                "rewardsNumber": {
                    "type": "string",
                    "description": "The rewards number for the customer.  This is often dealer specific.",
                    "allowEmptyValue": false
                },
                "salesTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the customer can be charged sales tax",
                    "allowEmptyValue": false
                },
                "sendEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the customer would like to receive email",
                    "allowEmptyValue": false
                },
                "suffix": {
                    "type": "string",
                    "description": "The suffix, e.g. Jr.",
                    "allowEmptyValue": false
                },
                "systems": {
                    "type": "array",
                    "description": "Indicates which systems the customer is active in, e.g. SERVICE",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNTING",
                            "ACCOUNTS_PAYABLE",
                            "PARTS",
                            "SERVICE",
                            "BILL",
                            "PAYROLL"
                        ]
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The customer title, e.g. Mrs.",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "PersonUpdate"
        },
        "Phone": {
            "type": "object",
            "required": [
                "number",
                "type"
            ],
            "properties": {
                "extension": {
                    "type": "string",
                    "description": "An optional phone extension",
                    "allowEmptyValue": false
                },
                "key": {
                    "type": "string",
                    "description": "The 'patch' key for update",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "The phone number. Should be unformatted - e.g. 5551234567",
                    "allowEmptyValue": false
                },
                "preferredContactTime": {
                    "type": "string",
                    "description": "Preferred contact time for this number",
                    "allowEmptyValue": false,
                    "enum": [
                        "UNKNOWN",
                        "MORNING",
                        "AFTERNOON",
                        "DAY",
                        "EVENING",
                        "ANYTIME",
                        "NEVER"
                    ]
                },
                "sendTextMessages": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if text messages may be sent to this number",
                    "allowEmptyValue": false
                },
                "type": {
                    "type": "string",
                    "description": "The type of phone number. Typically HOME, WORK, CELL but others are permitted",
                    "allowEmptyValue": false
                }
            },
            "title": "Phone"
        },
        "PhysicalInventoryBinsModel": {
            "type": "object",
            "properties": {
                "bin": {
                    "type": "string",
                    "description": "This is actual bin i.e bin1,bin2 and bin3",
                    "allowEmptyValue": false
                },
                "order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Order of Bin",
                    "allowEmptyValue": false
                }
            },
            "title": "PhysicalInventoryBinsModel"
        },
        "PhysicalInventoryCountFileModel": {
            "type": "object",
            "properties": {
                "bins": {
                    "type": "array",
                    "description": "Represent the Bin locations for part number. i.e. bin1, bin2, bin3.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PhysicalInventoryBinsModel"
                    }
                },
                "partId": {
                    "type": "string",
                    "description": "Part identification in the physical inventory",
                    "allowEmptyValue": false
                },
                "partNumber": {
                    "type": "string",
                    "description": "The OEM part number",
                    "allowEmptyValue": false
                },
                "partSourceLocation": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Physical location that the DMS records the part.",
                    "allowEmptyValue": false
                },
                "quantityOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The counted quantity entered by a user.",
                    "allowEmptyValue": false
                }
            },
            "title": "PhysicalInventoryCountFileModel"
        },
        "PhysicalInventoryPartModel": {
            "type": "object",
            "properties": {
                "bins": {
                    "type": "array",
                    "description": "Represent the Bin locations for part number. i.e. bin1, bin2, bin3",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PhysicalInventoryBinsModel"
                    }
                },
                "countedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date that count file creation was started.",
                    "allowEmptyValue": false
                },
                "countedStatus": {
                    "type": "string",
                    "description": "The current state of the count for the part specified.",
                    "allowEmptyValue": false
                },
                "oemCode": {
                    "type": "string",
                    "description": "The OEM code that identifies the dealer's inventory.",
                    "allowEmptyValue": false
                },
                "originalOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "On-hand quantity from the part inventory record at the time of physical inventory.",
                    "allowEmptyValue": false
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Page number where you can locate the part. The term Sheet number is analogous.",
                    "allowEmptyValue": false
                },
                "partId": {
                    "type": "string",
                    "description": "Part identification in the physical inventory",
                    "allowEmptyValue": false
                },
                "partNumber": {
                    "type": "string",
                    "description": "The OEM part number",
                    "allowEmptyValue": false
                },
                "partSourceLocation": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Physical location that the DMS records the part.",
                    "allowEmptyValue": false
                },
                "postedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The local date the count was posted back to inventory.",
                    "allowEmptyValue": false
                },
                "preCountOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The on hand quantity from the part inventory record, this is updated each time.",
                    "allowEmptyValue": false
                },
                "quantityOnHand": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The counted quantity entered by a user.",
                    "allowEmptyValue": false
                },
                "sheetBin": {
                    "type": "string",
                    "description": "Sheet bin determine by sort order.",
                    "allowEmptyValue": false
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The local date of the most recent count adjustment.",
                    "allowEmptyValue": false
                },
                "unitCost": {
                    "type": "number",
                    "format": "double",
                    "description": "Represents the cost of the part at the time of physical inventory creation..",
                    "allowEmptyValue": false
                }
            },
            "title": "PhysicalInventoryPartModel"
        },
        "ProductInsuranceSetup": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The identifying code for the insurance",
                    "allowEmptyValue": false
                },
                "enhancedProductInsurances": {
                    "type": "array",
                    "description": "List of enhanced product insurance setups",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/EnhancedProductInsuranceSetup"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of product insurance",
                    "allowEmptyValue": false
                }
            },
            "title": "ProductInsuranceSetup"
        },
        "Profit": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "number",
                    "description": "Finance department profit",
                    "allowEmptyValue": false
                },
                "front": {
                    "type": "number",
                    "description": "Sales department profit",
                    "allowEmptyValue": false
                },
                "reserve": {
                    "description": "Profit dealer is making on financing",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Reserve"
                },
                "total": {
                    "type": "number",
                    "description": "Sum of front and back profit",
                    "allowEmptyValue": false
                }
            },
            "title": "Profit"
        },
        "PurchaseOrder": {
            "type": "object",
            "properties": {
                "alternateCompany": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A dealer endpoint ID separate from the current accounting company where the purchase order originated from.",
                    "allowEmptyValue": false
                },
                "approvedBy": {
                    "type": "string",
                    "description": "Dealer user who approved the purchase order.",
                    "allowEmptyValue": false
                },
                "generalEntries": {
                    "type": "array",
                    "description": "Only one type of entry list will be present depending on the type value.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderEntry"
                    }
                },
                "invoiceDealerNumber": {
                    "type": "string",
                    "description": "Dealer-facing identifier for attached invoice.",
                    "allowEmptyValue": false
                },
                "poDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the purchase order was created",
                    "allowEmptyValue": false
                },
                "poNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A NON-DEALER-FACING identifier for the purchase order.",
                    "allowEmptyValue": false
                },
                "recvDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the purchase order was attached to its invoice or received",
                    "allowEmptyValue": false
                },
                "remarks": {
                    "type": "string",
                    "description": "Comments on the purchase order.",
                    "allowEmptyValue": false
                },
                "requestedBy": {
                    "type": "string",
                    "description": "Dealer user who requested the purchase order.",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "The purchase order status",
                    "allowEmptyValue": false,
                    "enum": [
                        "OPEN",
                        "CLOSED",
                        "DELETED",
                        "VOIDED",
                        "MANUALLY_CLOSED"
                    ]
                },
                "subletEntries": {
                    "type": "array",
                    "description": "Only one type of entry list will be present depending on the type value.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/SubletPurchaseOrderEntry"
                    }
                },
                "transaction": {
                    "description": "The pending transaction related to the purchase order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PendingTransaction"
                },
                "type": {
                    "type": "string",
                    "description": "The purchase order type",
                    "allowEmptyValue": false,
                    "enum": [
                        "GENERAL",
                        "SUBLET",
                        "PARTS",
                        "VEHICLE"
                    ]
                },
                "vehicleEntries": {
                    "type": "array",
                    "description": "Only one type of entry list will be present depending on the type value.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/VehiclePurchaseOrderEntry"
                    }
                },
                "vendor": {
                    "description": "The vendor the purchase order will be made to",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PurchaseOrderVendor"
                }
            },
            "title": "PurchaseOrder"
        },
        "PurchaseOrderEntry": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description for the ordered items",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity to order",
                    "allowEmptyValue": false
                },
                "remarks": {
                    "type": "string",
                    "description": "General dealer comments on the unit.",
                    "allowEmptyValue": false
                },
                "unitPrice": {
                    "type": "number",
                    "description": "The price per unit",
                    "allowEmptyValue": false
                }
            },
            "title": "PurchaseOrderEntry"
        },
        "PurchaseOrderVendor": {
            "type": "object",
            "properties": {
                "vendorName": {
                    "type": "string",
                    "description": "The vendor's name",
                    "allowEmptyValue": false
                },
                "vendorNumber": {
                    "type": "string",
                    "description": "Dealer-facing vendor ID AKA vendor control number",
                    "allowEmptyValue": false
                }
            },
            "title": "PurchaseOrderVendor"
        },
        "QuotedParts": {
            "type": "object",
            "properties": {
                "coreCost": {
                    "type": "number",
                    "description": "The core charge determined by the OEM that may be redeemed by the dealer when the part is returned to the OEM",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the part. This will allow you to distinguish the same part being billed to a repair order line multiple times. **This field will ONLY be populated once the part has been sold to a line on a Repair Order**",
                    "allowEmptyValue": false
                },
                "line": {
                    "type": "string",
                    "description": "Job line",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Job line part name",
                    "allowEmptyValue": false
                },
                "number": {
                    "type": "string",
                    "description": "Job line part number",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Quantity of part used for job line",
                    "allowEmptyValue": false
                },
                "returnedCoreCost": {
                    "type": "number",
                    "description": "The cost of the returned cores",
                    "allowEmptyValue": false
                },
                "returnedCoreQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of returned cores",
                    "allowEmptyValue": false
                },
                "totalCost": {
                    "type": "number",
                    "description": "Total cost of parts on job line",
                    "allowEmptyValue": false
                },
                "unitCost": {
                    "type": "number",
                    "description": "Unit cost of part",
                    "allowEmptyValue": false
                },
                "unitPrice": {
                    "type": "number",
                    "description": "Unit price of part for customer",
                    "allowEmptyValue": false
                }
            },
            "title": "QuotedParts"
        },
        "Rate": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage rate used in payment calculation",
                    "allowEmptyValue": false
                },
                "rateType": {
                    "type": "string",
                    "description": "Rate type used in payment calculation",
                    "allowEmptyValue": false,
                    "enum": [
                        "APR",
                        "MONEY_FACTOR"
                    ]
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Time of the payment terms, typically in months",
                    "allowEmptyValue": false
                }
            },
            "title": "Rate",
            "description": "Rate details for financing"
        },
        "Rebate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The rebate amount.",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the rebate.",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The position of the rebate in the rebates list when the deal is viewed through the DMSuser interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                },
                "rebateSetupItemId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The rebate setup item id. This id is unique in the rebate setups but the deal can have multiples of the same rebate.",
                    "allowEmptyValue": false
                }
            },
            "title": "Rebate"
        },
        "RebateSetup": {
            "type": "object",
            "properties": {
                "rebates": {
                    "type": "array",
                    "description": "The list of rebates for this setup",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RebateSetupItem"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "The state the rebate setup is for",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not rebates are taxed for this state",
                    "allowEmptyValue": false
                }
            },
            "title": "RebateSetup",
            "description": "Default rebate setup for the given state"
        },
        "RebateSetupItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The rebate's amount",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The rebate's description",
                    "allowEmptyValue": false
                },
                "rebateSetupItemId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The rebate setup item id. This id is unique in the rebate setups but the deal can havemultiples of the same rebate.",
                    "allowEmptyValue": false
                },
                "rebateType": {
                    "type": "string",
                    "description": "The type of rebate\n* DEALER: A Dealer rebate\n* MANUFACTURER: A Manufacturer rebate\n* UNKNOWN: Rebate type is not set",
                    "allowEmptyValue": false,
                    "enum": [
                        "DEALER",
                        "MANUFACTURER",
                        "UNKNOWN"
                    ]
                }
            },
            "title": "RebateSetupItem"
        },
        "ReceivePartsOrder": {
            "type": "object",
            "required": [
                "orderNumber",
                "orderReceivedBy",
                "orderedDmsPartNumber",
                "receivedDmsPartNumber",
                "receivedQuantity"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Free form comment about the part and/or order being received.Strings longer than 30 characters are truncated.",
                    "allowEmptyValue": false
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number identifying which parts order is being received.",
                    "allowEmptyValue": false
                },
                "orderReceivedBy": {
                    "type": "string",
                    "description": "The system or employee who received the part.Strings longer than 8 characters are truncated.",
                    "allowEmptyValue": false
                },
                "orderedDmsPartNumber": {
                    "type": "string",
                    "description": "The DMS part number of the originally ordered part.",
                    "allowEmptyValue": false
                },
                "receivedDmsPartNumber": {
                    "type": "string",
                    "description": "The DMS part number of the part being received.",
                    "allowEmptyValue": false
                },
                "receivedQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "How many of a given part are being received.",
                    "allowEmptyValue": false
                },
                "shipmentNumber": {
                    "type": "string",
                    "description": "The shipment number identifying which shipment is being received",
                    "allowEmptyValue": false
                }
            },
            "title": "ReceivePartsOrder"
        },
        "RecommendedServiceLine": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Description of the what caused a need for the recommended service",
                    "allowEmptyValue": false
                },
                "complaint": {
                    "type": "string",
                    "description": "Primary reason for service",
                    "allowEmptyValue": false
                },
                "correction": {
                    "type": "string",
                    "description": "Recommended action for response to concern",
                    "allowEmptyValue": false
                },
                "laborCost": {
                    "type": "number",
                    "description": "Cost of labor for the recommended service",
                    "allowEmptyValue": false
                },
                "laborHours": {
                    "type": "number",
                    "format": "double",
                    "description": "Hours of labor for the recommended service",
                    "allowEmptyValue": false
                },
                "lineIndicator": {
                    "type": "string",
                    "description": "Line indicator of recommended service line in its collection\nFor approved recommended services, this will match the 'lineNumber' field of a repair order line",
                    "allowEmptyValue": false
                },
                "miscCharges": {
                    "type": "array",
                    "description": "List of miscellaneous charges for the recommended service",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/MiscellaneousCharges"
                    }
                },
                "opcode": {
                    "type": "string",
                    "description": "Opcode for the service being recommended",
                    "allowEmptyValue": false
                },
                "partsCost": {
                    "type": "number",
                    "description": "Cost of parts for the recommended service",
                    "allowEmptyValue": false
                },
                "payType": {
                    "type": "string",
                    "description": "Pay type for recommended service line",
                    "allowEmptyValue": false,
                    "enum": [
                        "CUSTOMER",
                        "WARRANTY",
                        "INTERNAL",
                        "SVC_CONTRACT"
                    ]
                },
                "skillCode": {
                    "type": "string",
                    "description": "Technician skill code for recommended service line",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "The status of the recommended service (Pending/Approved/Declined)",
                    "allowEmptyValue": false,
                    "enum": [
                        "PENDING",
                        "APPROVED",
                        "DECLINED"
                    ]
                },
                "story": {
                    "type": "string",
                    "description": "Comments or remarks about the recommended service line",
                    "allowEmptyValue": false
                },
                "techId": {
                    "type": "string",
                    "description": "Unique identifier for Service Technician",
                    "allowEmptyValue": false
                },
                "techPayRateCode": {
                    "type": "string",
                    "description": "Code for the tech rate pay",
                    "allowEmptyValue": false
                }
            },
            "title": "RecommendedServiceLine"
        },
        "RecommendedServices": {
            "type": "object",
            "required": [
                "repairOrderNumber",
                "repairOrderUuid",
                "vehicle"
            ],
            "properties": {
                "approvedLines": {
                    "type": "array",
                    "description": "Recommended service operations that have been approved",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RecommendedServiceLine"
                    }
                },
                "declinedLines": {
                    "type": "array",
                    "description": "Recommended service operations that have been declined",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RecommendedServiceLine"
                    }
                },
                "estimatedMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The estimated mileage of the vehicle the services are recommended for",
                    "allowEmptyValue": false
                },
                "pendingLines": {
                    "type": "array",
                    "description": "Recommended service operations that are pending approval",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RecommendedServiceLine"
                    }
                },
                "repairOrderNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number identifying the repair order associated with the recommended services",
                    "allowEmptyValue": false
                },
                "repairOrderUuid": {
                    "type": "string",
                    "description": "The UUID for the repair order. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                },
                "story": {
                    "type": "string",
                    "description": "Comments or remarks about the recommended services",
                    "allowEmptyValue": false
                },
                "vehicle": {
                    "description": "Identification of the vehicle the recommended services are for",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleId"
                }
            },
            "title": "RecommendedServices"
        },
        "RepairOrder": {
            "type": "object",
            "required": [
                "appointmentNumber",
                "customer",
                "detailedStatus",
                "roNumber",
                "uuid",
                "vehicle",
                "vehicleOwner"
            ],
            "properties": {
                "appointmentNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The associated service appointment number",
                    "allowEmptyValue": false
                },
                "appointmentUuid": {
                    "type": "string",
                    "description": "The UUID for the appointment associated with the repair order",
                    "allowEmptyValue": false
                },
                "customer": {
                    "description": "Billing customer on the repair order -- the customer paying for the RO.  Note that this may differ from the vehicle owner.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "customerPaymentAmount": {
                    "type": "number",
                    "description": "The total amount that the customer must pay.",
                    "allowEmptyValue": false
                },
                "customerPaymentItems": {
                    "type": "array",
                    "description": "Subtotal amounts by category that the customer must pay.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrderPaymentItem"
                    }
                },
                "customerPayments": {
                    "type": "array",
                    "description": "A list of customer payment types (cash, credit, etc.) and amounts.",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/PaymentInfo"
                    }
                },
                "deliveryFlags": {
                    "type": "object",
                    "description": "Indicates transportation method of customer, defaults are WAITER and PICKUP, dealership can define custom values outside of defaults",
                    "allowEmptyValue": false,
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "detailedStatus": {
                    "type": "string",
                    "description": "Status of repair order",
                    "allowEmptyValue": false,
                    "enum": [
                        "COMPLETED",
                        "PARTIAL_CLOSE",
                        "WARRANTY_NOT_SUBMITTED",
                        "WARRANTY_SUBMITTED",
                        "OPEN",
                        "VOID"
                    ]
                },
                "hangTag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Hang tag used in dealership to track the vehicle for a repair order",
                    "allowEmptyValue": false
                },
                "historyDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the RO was 'sent to history'.  At this point it can no longer be changed",
                    "allowEmptyValue": false
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date the repair order was invoiced",
                    "allowEmptyValue": false
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time repair order was modified",
                    "allowEmptyValue": false
                },
                "odometerEstimated": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is odometer reading estimated",
                    "allowEmptyValue": false
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading at time of service",
                    "allowEmptyValue": false
                },
                "odometerOut": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading when work is completed",
                    "allowEmptyValue": false
                },
                "openDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Open date time for repair order",
                    "allowEmptyValue": false
                },
                "pickupDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time vehicle was picked up",
                    "allowEmptyValue": false
                },
                "pricing": {
                    "type": "array",
                    "description": "All additional pricing information for repair order, not associated with a line item",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrderPricing"
                    }
                },
                "promiseDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time repair order completion date given to customer",
                    "allowEmptyValue": false
                },
                "promiseText": {
                    "type": "string",
                    "description": "An alternative non-date promise text value, e.g. 'tomorrow afternoon'",
                    "allowEmptyValue": false
                },
                "repairOrderLines": {
                    "type": "array",
                    "description": "Repair order lines of repair order",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrderLine"
                    }
                },
                "requestedParts": {
                    "type": "array",
                    "description": "A list of parts requested for the repair order",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/QuotedParts"
                    }
                },
                "roNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Repair order number in service application",
                    "allowEmptyValue": false
                },
                "serviceAdvisor": {
                    "description": "Service advisor associated with repair order",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceAdvisor"
                },
                "story": {
                    "type": "string",
                    "description": "Comments or remarks pertaining to the repair order",
                    "allowEmptyValue": false
                },
                "terms": {
                    "type": "string",
                    "description": "The terms for the repair order.\n* CASH: Receivable amounts are cash type\n* CHARGE: Receivable amounts are charge type\n* CASH_AND_CHARGE: Receivable amounts are cash and charge type\n* NO_CHARGE: There are no receivable and payable amounts.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CASH",
                        "CHARGE",
                        "CASH_AND_CHARGE",
                        "NO_CHARGE"
                    ]
                },
                "uuid": {
                    "type": "string",
                    "description": "The UUID for the repair order. This is the primary key for use via Open/Mate APIs",
                    "allowEmptyValue": false
                },
                "vehicle": {
                    "description": "Vehicle repair order is associated with",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Vehicle"
                },
                "vehicleOwner": {
                    "description": "Customer that currently owns the vehicle.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings generated when the repair order is created",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "RepairOrder"
        },
        "RepairOrderLine": {
            "type": "object",
            "required": [
                "lineNumber",
                "origin",
                "payType"
            ],
            "properties": {
                "actualLaborTime": {
                    "type": "number",
                    "format": "double",
                    "description": "Actual Labor time in hours",
                    "allowEmptyValue": false
                },
                "cause": {
                    "type": "string",
                    "description": "Reason for performing repair",
                    "allowEmptyValue": false
                },
                "complaint": {
                    "type": "string",
                    "description": "Primary reason for service",
                    "allowEmptyValue": false
                },
                "correction": {
                    "type": "string",
                    "description": "Action taken to respond to concern",
                    "allowEmptyValue": false
                },
                "dispatchLineStatus": {
                    "description": "Dispatch status of repair order line. Only applicable for dealers using the dispatch system",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DispatchLineStatus"
                },
                "estimateLaborTime": {
                    "type": "number",
                    "format": "double",
                    "description": "Estimated labor time in hours",
                    "allowEmptyValue": false
                },
                "estimatedLaborHours": {
                    "type": "number",
                    "description": "The estimated number of hours for the service operation",
                    "allowEmptyValue": false
                },
                "flatRateLaborTime": {
                    "type": "number",
                    "format": "double",
                    "description": "Flat rate labor time in hours",
                    "allowEmptyValue": false
                },
                "historyDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date RO line was archived",
                    "allowEmptyValue": false
                },
                "laborPrice": {
                    "type": "number",
                    "description": "The price of labor for the service operation",
                    "allowEmptyValue": false
                },
                "lineNumber": {
                    "type": "string",
                    "description": "Alphabetic line number on the repair order",
                    "allowEmptyValue": false
                },
                "miscellaneousCharges": {
                    "type": "array",
                    "description": "Miscellaneous charges associated with repair order line",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/MiscellaneousCharges"
                    }
                },
                "narrative": {
                    "type": "string",
                    "description": "The narrative or story for the line",
                    "allowEmptyValue": false
                },
                "opCode": {
                    "type": "string",
                    "description": "Operation Code for the service operation",
                    "allowEmptyValue": false
                },
                "origin": {
                    "type": "string",
                    "description": "Origin of repair order line, indicates when the line was created",
                    "allowEmptyValue": false,
                    "enum": [
                        "APPOINTMENT",
                        "REPAIR_ORDER",
                        "ADD_ON",
                        "REC_SERVICE_LINE"
                    ]
                },
                "parts": {
                    "type": "array",
                    "description": "Parts associated with repair order line",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/Part"
                    }
                },
                "partsPrice": {
                    "type": "number",
                    "description": "The price of parts for the service operation",
                    "allowEmptyValue": false
                },
                "payType": {
                    "type": "string",
                    "description": "Pay type for repair order line",
                    "allowEmptyValue": false,
                    "enum": [
                        "CUSTOMER",
                        "SERVICE_CONTRACT",
                        "INTERNAL",
                        "WARRANTY"
                    ]
                },
                "pricing": {
                    "description": "Pricing information for Repair Order Line",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/LinePricing"
                },
                "quickOp": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the service operation is a Quick Op. Quick Ops typically indicate the most commonly used operation codes for ease of use within the system.",
                    "allowEmptyValue": false
                },
                "serviceTechnician": {
                    "description": "Service technician assigned to repair order line",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceTechnician"
                },
                "serviceTechnicianHistory": {
                    "type": "array",
                    "description": "Service Technicians who have tech hours on this repair order line",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ServiceTechnician"
                    }
                },
                "skillCode": {
                    "type": "string",
                    "description": "Technician skill code for repair order line",
                    "allowEmptyValue": false
                },
                "status": {
                    "type": "string",
                    "description": "Status of repair order line indicating if work has been completed",
                    "allowEmptyValue": false,
                    "enum": [
                        "OPEN",
                        "COMPLETED"
                    ]
                },
                "sublet": {
                    "type": "array",
                    "description": "Sublet information on repair order line",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrderLineSublet"
                    }
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "RepairOrderLine",
            "description": "Service operation representing work to be performed on vehicle"
        },
        "RepairOrderLineSublet": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Sublet line code",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "Sublet cost",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Sublet line description",
                    "allowEmptyValue": false
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "Sublet invoice number",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Sublet price",
                    "allowEmptyValue": false
                },
                "vendorName": {
                    "type": "string",
                    "description": "Sublet vendor name",
                    "allowEmptyValue": false
                }
            },
            "title": "RepairOrderLineSublet"
        },
        "RepairOrderPaymentItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Amount that must be paid",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "Dealership cost for this item",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the charge",
                    "allowEmptyValue": false
                }
            },
            "title": "RepairOrderPaymentItem"
        },
        "RepairOrderPricing": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Account number of charge payee",
                    "allowEmptyValue": false
                },
                "chargeAmount": {
                    "type": "number",
                    "description": "Dollar amount of charge",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of charge",
                    "allowEmptyValue": false
                },
                "payType": {
                    "type": "string",
                    "description": "Indicates the payee of the charge",
                    "allowEmptyValue": false,
                    "enum": [
                        "CUSTOMER",
                        "SERVICE_CONTRACT",
                        "INTERNAL",
                        "WARRANTY"
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Type of charge",
                    "allowEmptyValue": false,
                    "enum": [
                        "DISCOUNT",
                        "TAX_SUBLET",
                        "SHOP_CHARGE",
                        "OTHER"
                    ]
                }
            },
            "title": "RepairOrderPricing",
            "description": "Pricing information for additional charges on repair order"
        },
        "RepairOrderUuidSearchResult": {
            "type": "object",
            "properties": {
                "repairOrders": {
                    "type": "array",
                    "description": "Repair orders found from the uuid search",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/RepairOrder"
                    }
                },
                "requestedUuidsNotFound": {
                    "type": "array",
                    "description": "Any requested repair order uuids that were not found during the search",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "RepairOrderUuidSearchResult"
        },
        "Reserve": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The final calculated amount for the reserve type",
                    "allowEmptyValue": false
                },
                "buyRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate the dealer got the loan when the reserve type is BUY_RATE",
                    "allowEmptyValue": false
                },
                "percentAmountFinanced": {
                    "type": "number",
                    "format": "double",
                    "description": "Rate used to calculate finance reserve when the reserve type is PERCENT",
                    "allowEmptyValue": false
                },
                "reserveRate": {
                    "type": "number",
                    "format": "double",
                    "description": "Rate used to calculate finance reserve when the reserve type is BUY_RATE",
                    "allowEmptyValue": false
                },
                "reserveType": {
                    "type": "string",
                    "description": "Reserve type\n* BUY_RATE: The dealership bought the loan at a particular rate\n* FLAT: Flat fee profit on the financing\n* PERCENT: Percentage the dealership receives from the amount financed",
                    "allowEmptyValue": false,
                    "enum": [
                        "BUY_RATE",
                        "FLAT",
                        "PERCENT"
                    ]
                }
            },
            "title": "Reserve"
        },
        "SalesPerson": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code of the sales person",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "The unique id of the salesperson",
                    "allowEmptyValue": false
                },
                "identity": {
                    "description": "The person record of the sales person.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "licenseNumber": {
                    "type": "string",
                    "description": "Salesperson's license number (ID)",
                    "allowEmptyValue": false
                },
                "licenseState": {
                    "type": "string",
                    "description": "State the salesperson's license was issued by/for",
                    "allowEmptyValue": false
                },
                "roles": {
                    "type": "array",
                    "description": "Salesperson's roles",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "SALESPERSON"
                        ]
                    }
                }
            },
            "title": "SalesPerson"
        },
        "SalesStaff": {
            "type": "object",
            "properties": {
                "financeAndInsuranceManagers": {
                    "type": "array",
                    "description": "The finance and insurance managers who worked the deal or associated with the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                },
                "salesManagers": {
                    "type": "array",
                    "description": "The sales managers who worked the deal or associated with the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                },
                "salesPeople": {
                    "type": "array",
                    "description": "The sales people who worked the deal or associated with the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                }
            },
            "title": "SalesStaff"
        },
        "Schedule": {
            "type": "object",
            "required": [
                "accountNumbers",
                "balanceMethod",
                "company",
                "controlDescFormat",
                "id",
                "name",
                "scheduleType",
                "sortMethod"
            ],
            "properties": {
                "accountNumbers": {
                    "type": "array",
                    "description": "List of GL account numbers associated with the schedule",
                    "allowEmptyValue": false,
                    "items": {
                        "type": "string"
                    }
                },
                "balanceMethod": {
                    "type": "string",
                    "description": "Controls how balances on a schedule are represented or displayed",
                    "allowEmptyValue": false,
                    "enum": [
                        "BALANCE_BY_TOTAL",
                        "BALANCE_BY_ACCT",
                        "BALANCE_BY_ACCT_CONTROL_AGED",
                        "BALANCE_BY_CONTROL_AGED",
                        "BALANCE_BY_ITEM"
                    ]
                },
                "company": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint id of the company the schedule belongs to",
                    "allowEmptyValue": false
                },
                "controlDescFormat": {
                    "type": "string",
                    "description": "Indicates the meaning of a controlDescription of a schedule's statement",
                    "allowEmptyValue": false,
                    "enum": [
                        "VIN",
                        "YEAR_MAKE_MODEL",
                        "YEAR_MAKE_MODEL_OWNER",
                        "VEHICLE_OWNER",
                        "COMPLETE_VEHICLE",
                        "BLANK",
                        "NAME1",
                        "NAME_NOTE"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "Unique id of the schedule",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable name of the schedule",
                    "allowEmptyValue": false
                },
                "scheduleType": {
                    "type": "string",
                    "description": "The type of the schedule",
                    "allowEmptyValue": false,
                    "enum": [
                        "CONTRACTS_IN_TRANSIT",
                        "PAYABLE",
                        "RECEIVABLE",
                        "RECEIVABLE_OTHER",
                        "VEHICLE_INVENTORY",
                        "OTHER"
                    ]
                },
                "sortMethod": {
                    "type": "string",
                    "description": "Indicates by which field a schedule's statements are sorted",
                    "allowEmptyValue": false,
                    "enum": [
                        "BALANCE",
                        "CONTROL",
                        "NAME",
                        "AGE"
                    ]
                }
            },
            "title": "Schedule"
        },
        "ScheduleControlBalance": {
            "type": "object",
            "required": [
                "beginningBalances",
                "totalBalance"
            ],
            "properties": {
                "beginningBalances": {
                    "type": "array",
                    "description": "List of beginning balances, broken down by account number",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ControlBeginBalance"
                    }
                },
                "totalBalance": {
                    "type": "number",
                    "description": "The sum total of all balances",
                    "allowEmptyValue": false
                },
                "units": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If applicable, a count of inventory units for this balance",
                    "allowEmptyValue": false
                }
            },
            "title": "ScheduleControlBalance"
        },
        "ServiceAdvisor": {
            "type": "object",
            "required": [
                "id",
                "isActive"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "Service Advisor first name",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for Service Advisor",
                    "allowEmptyValue": false
                },
                "isActive": {
                    "type": "boolean",
                    "example": false,
                    "description": "Service Advisor status at dealership",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Service Advisor last name",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceAdvisor"
        },
        "ServiceAdvisorId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the service advisor",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceAdvisorId"
        },
        "ServiceContract": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Dealership cost of the service contract",
                    "allowEmptyValue": false
                },
                "deductible": {
                    "type": "number",
                    "description": "The flat amount deducted before coverage begins",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the service contract",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The position of the service contract in the service contracts list when the deal is viewed through the DMS user interface. Required for legacy purposes.",
                    "allowEmptyValue": false
                },
                "grossCreditedTo": {
                    "type": "string",
                    "description": "Whether the service contract gross is credited to the front or back.",
                    "allowEmptyValue": false,
                    "enum": [
                        "FRONT",
                        "BACK"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "Unique id of the service Contract.",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "Tax setup for the service contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ItemTaxSetup"
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the service contract",
                    "allowEmptyValue": false
                },
                "provider": {
                    "type": "string",
                    "description": "Name of the provider offering the service contract",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "The terms of the service contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceContractTerm"
                },
                "type": {
                    "type": "string",
                    "description": "Type of service contract",
                    "allowEmptyValue": false,
                    "enum": [
                        "AFTERMARKET",
                        "DENT",
                        "MAINTENANCE",
                        "MANUFACTURER",
                        "WARRANTY"
                    ]
                }
            },
            "title": "ServiceContract"
        },
        "ServiceContractExpiration": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The expiration date of the service contract",
                    "allowEmptyValue": false
                },
                "mileage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total mileage amount the contract will cover. This value minus term mileage is the additional mileage added to the service contract.",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceContractExpiration",
            "description": "Expiration terms of the service contract"
        },
        "ServiceContractItem": {
            "type": "object",
            "properties": {
                "deductible": {
                    "type": "number",
                    "description": "The flat amount deducted before coverage begins",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the service contract",
                    "allowEmptyValue": false
                },
                "grossCreditedTo": {
                    "type": "string",
                    "description": "Whether the service contract gross is credited to the front or back.",
                    "allowEmptyValue": false,
                    "enum": [
                        "FRONT",
                        "BACK"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the Service Contract",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the service contract",
                    "allowEmptyValue": false
                },
                "provider": {
                    "type": "string",
                    "description": "Name of the provider offering the service contract",
                    "allowEmptyValue": false
                },
                "taxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate at which to tax the service contract",
                    "allowEmptyValue": false
                },
                "taxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the service contract is taxable",
                    "allowEmptyValue": false
                },
                "terms": {
                    "description": "The terms of the service contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceContractTerm"
                },
                "type": {
                    "type": "string",
                    "description": "Type of service contract",
                    "allowEmptyValue": false,
                    "enum": [
                        "AFTERMARKET",
                        "DENT",
                        "MAINTENANCE",
                        "MANUFACTURER",
                        "WARRANTY"
                    ]
                }
            },
            "title": "ServiceContractItem",
            "description": "A default Service Contract setup for the given company, state, and financing type"
        },
        "ServiceContractSetup": {
            "type": "object",
            "properties": {
                "dealType": {
                    "type": "string",
                    "description": "The deal type the service contract setup is for (Finance/Lease/etc)",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "serviceContracts": {
                    "type": "array",
                    "description": "The service contracts for this setup",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ServiceContractItem"
                    }
                },
                "state": {
                    "type": "string",
                    "description": "The state the service contract setup is for",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceContractSetup",
            "description": "Service Contracts setup for the company"
        },
        "ServiceContractTerm": {
            "type": "object",
            "required": [
                "expiration"
            ],
            "properties": {
                "expiration": {
                    "description": "Expiration terms of the service contract",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ServiceContractExpiration"
                },
                "mileage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Standard amount of mileage the contract will cover",
                    "allowEmptyValue": false
                },
                "months": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The length of the service contract in months",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceContractTerm",
            "description": "Terms of the Service Contract"
        },
        "ServiceOperation": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Reason for performing repair",
                    "allowEmptyValue": false
                },
                "complaint": {
                    "type": "string",
                    "description": "Primary reason for service",
                    "allowEmptyValue": false
                },
                "correction": {
                    "type": "string",
                    "description": "Action taken to respond to concern",
                    "allowEmptyValue": false
                },
                "estimatedLaborHours": {
                    "type": "number",
                    "description": "The estimated number of hours for the service operation",
                    "allowEmptyValue": false
                },
                "laborPrice": {
                    "type": "number",
                    "description": "The price of labor for the service operation",
                    "allowEmptyValue": false
                },
                "narrative": {
                    "type": "string",
                    "description": "The narrative or story for the line",
                    "allowEmptyValue": false
                },
                "opCode": {
                    "type": "string",
                    "description": "Operation Code for the service operation",
                    "allowEmptyValue": false
                },
                "partsPrice": {
                    "type": "number",
                    "description": "The price of parts for the service operation",
                    "allowEmptyValue": false
                },
                "quickOp": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the service operation is a Quick Op. Quick Ops typically indicate the most commonly used operation codes for ease of use within the system.",
                    "allowEmptyValue": false
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "ServiceOperation"
        },
        "ServiceTechId": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the service technician",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceTechId"
        },
        "ServiceTechnician": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "First name of the service technician",
                    "allowEmptyValue": false
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the service technician",
                    "allowEmptyValue": false
                },
                "isActive": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the service technician is active or inactive at the dealership",
                    "allowEmptyValue": false
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the service technician",
                    "allowEmptyValue": false
                }
            },
            "title": "ServiceTechnician"
        },
        "StateTaxSetup": {
            "type": "object",
            "properties": {
                "dealType": {
                    "type": "string",
                    "description": "The type of deal (Finance/Lease/etc) that this tax is applicable to",
                    "allowEmptyValue": false,
                    "enum": [
                        "FINANCE",
                        "LEASE",
                        "CASH",
                        "BALLOON"
                    ]
                },
                "state": {
                    "type": "string",
                    "description": "The state abbreviation",
                    "allowEmptyValue": false
                },
                "taxes": {
                    "type": "array",
                    "description": "The list of specific taxes for this state and financing type",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TaxSetupRate"
                    }
                }
            },
            "title": "StateTaxSetup",
            "description": "State tax default values"
        },
        "Statement": {
            "type": "object",
            "required": [
                "controlNumber",
                "description",
                "endingAgedBalance",
                "entries",
                "isAgedBalance"
            ],
            "properties": {
                "beginningAgedBalance": {
                    "description": "Statement's beginning balance, broken up by age",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/AgedBalance"
                },
                "beginningControlBalance": {
                    "description": "Statement's beginning balance, broken up by account number",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/ScheduleControlBalance"
                },
                "controlNumber": {
                    "type": "string",
                    "description": "Control number of the statement's entries",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the control number, based on the schedule's controlDescFormat",
                    "allowEmptyValue": false
                },
                "endingAgedBalance": {
                    "description": "Statement's ending balance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/AgedBalance"
                },
                "entries": {
                    "type": "array",
                    "description": "The entries of a statement",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/StatementEntryModel"
                    }
                },
                "isAgedBalance": {
                    "type": "boolean",
                    "example": false,
                    "description": "Flag that determines whether statement's ending balance is aged",
                    "allowEmptyValue": false
                }
            },
            "title": "Statement"
        },
        "StatementEntryModel": {
            "type": "object",
            "required": [
                "accountNumber",
                "amount",
                "companyNumber",
                "controlNumber",
                "journalSourceCode",
                "referenceNumber",
                "scheduleId",
                "transactionDate"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The GL account of the statement entry",
                    "allowEmptyValue": false
                },
                "amount": {
                    "type": "number",
                    "description": "The amount in dollars",
                    "allowEmptyValue": false
                },
                "applyTo": {
                    "type": "string",
                    "description": "Secondary control number used by schedules using the BALANCE_BY_ITEM balancing method",
                    "allowEmptyValue": false
                },
                "comments": {
                    "type": "string",
                    "description": "Notes attached to statement entry",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the statement entry belongs to",
                    "allowEmptyValue": false
                },
                "controlNumber": {
                    "type": "string",
                    "description": "The control number of the record referenced by the statement entry",
                    "allowEmptyValue": false
                },
                "duplicateReferenceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Zero-based duplicate reference number of the transaction tied to this statement entry",
                    "allowEmptyValue": false
                },
                "journalSourceCode": {
                    "type": "string",
                    "description": "The journal source code of the statement entry",
                    "allowEmptyValue": false
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "Reference number of transaction tied to this statement entry",
                    "allowEmptyValue": false
                },
                "scheduleId": {
                    "type": "string",
                    "description": "The schedule that the statement entry belongs to",
                    "allowEmptyValue": false
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The transaction date of the transaction tied to this statement entry",
                    "allowEmptyValue": false
                },
                "units": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If applicable, number of inventory units in statement entry",
                    "allowEmptyValue": false
                }
            },
            "title": "StatementEntryModel"
        },
        "SubletPurchaseOrderEntry": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description for the ordered items",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity to order",
                    "allowEmptyValue": false
                },
                "remarks": {
                    "type": "string",
                    "description": "General dealer comments on the unit.",
                    "allowEmptyValue": false
                },
                "repairOrderLine": {
                    "type": "string",
                    "description": "Alphabetical character for the line on the repair order that needs the unit.",
                    "allowEmptyValue": false
                },
                "repairOrderNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Dealer-facing identifier for the repair order that resulted in the unit.",
                    "allowEmptyValue": false
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Internal identifier differentiating multiple sublets with similar info. Ignore unless informed otherwise.",
                    "allowEmptyValue": false
                },
                "unitPrice": {
                    "type": "number",
                    "description": "The price per unit",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "The VIN of the vehicle this purchase order is for.",
                    "allowEmptyValue": false
                }
            },
            "title": "SubletPurchaseOrderEntry"
        },
        "TaxRegion": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "Name of the city in which the taxes are calculated.",
                    "allowEmptyValue": false
                },
                "county": {
                    "type": "string",
                    "description": "County in which the taxes are calculated.",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "State in which the taxes are calculated",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Zip code in which the taxes are calculated.",
                    "allowEmptyValue": false
                }
            },
            "title": "TaxRegion"
        },
        "TaxSetup": {
            "type": "object",
            "properties": {
                "additionalTax": {
                    "type": "number",
                    "description": "Additional tax amount on the tax",
                    "allowEmptyValue": false
                },
                "leaseTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate for the tax on a lease deal",
                    "allowEmptyValue": false
                },
                "leaseTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if tax is taxable on a lease deal",
                    "allowEmptyValue": false
                },
                "retailTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The rate for the tax on a retail deal",
                    "allowEmptyValue": false
                },
                "retailTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if tax is taxable on a retail deal",
                    "allowEmptyValue": false
                },
                "taxBaseReduction": {
                    "type": "number",
                    "description": "Reduction amount of the tax",
                    "allowEmptyValue": false
                },
                "taxEntity": {
                    "type": "string",
                    "description": "The type of tax\n* TOTAL_REDUCTION: Holds the entire reduction tax amount\n* STATE: Holds the sales tax or total tax\n* STATE_REDUCTION: Holds the reduction tax paid to the state\n* COUNTY: Holds the sales tax paid to the county\n* COUNTY_REDUCTION: Holds the reduction tax paid to the county\n* CITY: Holds the sales tax paid to the city\n* CITY_REDUCTION: Holds the reduction tax paid to the city\n* LOCAL: Holds the local sales tax\n* LOCAL_TIER1: Used for legacy compatibility\n* LOCAL_TIER2: Used for legacy compatibility\n* LOCAL_REDUCTION: Holds the local reduction tax\n* LOCAL_STADIUM: _@ApiEnum annotation not available_\n* INTANGIBLE: Holds intangible local tax (if any)\n* RURAL_TRANSIT: Used for legacy compatibility\n* RURAL_TRANSIT_REDUCTION: Used for legacy compatibility\n* SERVICE_CONTRACT: Holds the tax on service contracts\n* REBATE: Used for legacy compatibility\n* CORPORATE_ACTIVITY: Holds the Corporate Activity Tax (CAT) if applicable\n* FEDERAL: Used for legacy compatibility\n* ALL: Used for legacy compatibility\n* UNKNOWN: Used for legacy compatibility\n* OVERRIDE: Used for legacy compatibility\n* PROPERTY: Used for legacy compatibility\n* BUSINESS: Used for legacy compatibility\n* SERVICE_CONTRACT_TAX: Holds the tax on service contracts",
                    "allowEmptyValue": false,
                    "enum": [
                        "TOTAL_REDUCTION",
                        "STATE",
                        "STATE_REDUCTION",
                        "COUNTY",
                        "COUNTY_REDUCTION",
                        "CITY",
                        "CITY_REDUCTION",
                        "LOCAL",
                        "LOCAL_TIER1",
                        "LOCAL_TIER2",
                        "LOCAL_REDUCTION",
                        "LOCAL_STADIUM",
                        "INTANGIBLE",
                        "RURAL_TRANSIT",
                        "RURAL_TRANSIT_REDUCTION",
                        "SERVICE_CONTRACT",
                        "REBATE",
                        "CORPORATE_ACTIVITY",
                        "FEDERAL",
                        "ALL",
                        "UNKNOWN",
                        "OVERRIDE",
                        "PROPERTY",
                        "BUSINESS",
                        "SERVICE_CONTRACT_TAX"
                    ]
                }
            },
            "title": "TaxSetup"
        },
        "TaxSetupRate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the tax",
                    "allowEmptyValue": false
                },
                "entityType": {
                    "type": "string",
                    "description": "The type of tax\n* TOTAL_REDUCTION: Holds the entire reduction tax amount\n* STATE: Holds the sales tax or total tax\n* STATE_REDUCTION: Holds the reduction tax paid to the state\n* COUNTY: Holds the sales tax paid to the county\n* COUNTY_REDUCTION: Holds the reduction tax paid to the county\n* CITY: Holds the sales tax paid to the city\n* CITY_REDUCTION: Holds the reduction tax paid to the city\n* LOCAL: Holds the local sales tax\n* LOCAL_TIER1: Used for legacy compatibility\n* LOCAL_TIER2: Used for legacy compatibility\n* LOCAL_REDUCTION: Holds the local reduction tax\n* LOCAL_STADIUM: _@ApiEnum annotation not available_\n* INTANGIBLE: Holds intangible local tax (if any)\n* RURAL_TRANSIT: Used for legacy compatibility\n* RURAL_TRANSIT_REDUCTION: Used for legacy compatibility\n* SERVICE_CONTRACT: Holds the tax on service contracts\n* REBATE: Used for legacy compatibility\n* CORPORATE_ACTIVITY: Holds the Corporate Activity Tax (CAT) if applicable\n* FEDERAL: Used for legacy compatibility\n* ALL: Used for legacy compatibility\n* UNKNOWN: Used for legacy compatibility\n* OVERRIDE: Used for legacy compatibility\n* PROPERTY: Used for legacy compatibility\n* BUSINESS: Used for legacy compatibility\n* SERVICE_CONTRACT_TAX: Holds the tax on service contracts",
                    "allowEmptyValue": false,
                    "enum": [
                        "TOTAL_REDUCTION",
                        "STATE",
                        "STATE_REDUCTION",
                        "COUNTY",
                        "COUNTY_REDUCTION",
                        "CITY",
                        "CITY_REDUCTION",
                        "LOCAL",
                        "LOCAL_TIER1",
                        "LOCAL_TIER2",
                        "LOCAL_REDUCTION",
                        "LOCAL_STADIUM",
                        "INTANGIBLE",
                        "RURAL_TRANSIT",
                        "RURAL_TRANSIT_REDUCTION",
                        "SERVICE_CONTRACT",
                        "REBATE",
                        "CORPORATE_ACTIVITY",
                        "FEDERAL",
                        "ALL",
                        "UNKNOWN",
                        "OVERRIDE",
                        "PROPERTY",
                        "BUSINESS",
                        "SERVICE_CONTRACT_TAX"
                    ]
                },
                "rate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate",
                    "allowEmptyValue": false
                }
            },
            "title": "TaxSetupRate",
            "description": "Specific tax setup item"
        },
        "TradeIn": {
            "type": "object",
            "properties": {
                "actualCashValue": {
                    "type": "number",
                    "description": "Cash value of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "allowance": {
                    "type": "number",
                    "description": "The allowance value of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "body": {
                    "type": "string",
                    "description": "Body of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "color": {
                    "type": "string",
                    "description": "Color of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "isLeaseTaxDeduction": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the vehicle trade-in is tax deductible for a lease deal",
                    "allowEmptyValue": false
                },
                "isRetailTaxDeduction": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the vehicle trade-in is tax deductible for a retail deal",
                    "allowEmptyValue": false
                },
                "make": {
                    "type": "string",
                    "description": "Make of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "mileage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Mileage of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "model": {
                    "type": "string",
                    "description": "Model of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "payoff": {
                    "type": "number",
                    "description": "Payoff balance of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "The stock number of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "The vin of the vehicle trade in",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Year of the vehicle trade in",
                    "allowEmptyValue": false
                }
            },
            "title": "TradeIn"
        },
        "Transaction": {
            "type": "object",
            "required": [
                "adjustReverseFlag",
                "journalSourceCode",
                "originatingCompany",
                "referenceNumber",
                "transactionDateTime",
                "transactionItemType",
                "transactionItems",
                "transactionStatus",
                "userId"
            ],
            "properties": {
                "adjustReverseFlag": {
                    "type": "string",
                    "description": "Indicates whether a Transaction is NORMAL, ADJUSTED or REVERSED",
                    "allowEmptyValue": false,
                    "enum": [
                        "ADJUSTED",
                        "REVERSED",
                        "NORMAL"
                    ]
                },
                "comments": {
                    "type": "string",
                    "description": "Notes attached to the transaction",
                    "allowEmptyValue": false
                },
                "duplicateReferenceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "A secondary number that allows you to have transactions with the same reference number",
                    "allowEmptyValue": false
                },
                "journalSourceCode": {
                    "type": "string",
                    "description": "The journal source the transaction was saved to",
                    "allowEmptyValue": false
                },
                "originatingCompany": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the transaction came from",
                    "allowEmptyValue": false
                },
                "postingDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the transaction was posted",
                    "allowEmptyValue": false
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "Identifies what the transaction is tied to. E.g. for an invoice this would be the invoiceDealerNumber",
                    "allowEmptyValue": false
                },
                "transactionDateTime": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of the transaction. This defaults to the date the transaction was created, but it can be arbitrarily set by the dealership",
                    "allowEmptyValue": false
                },
                "transactionItemType": {
                    "type": "string",
                    "description": "The type of the transaction's list of transaction items",
                    "allowEmptyValue": false,
                    "enum": [
                        "NORMAL",
                        "COST",
                        "INVENTORY"
                    ]
                },
                "transactionItems": {
                    "type": "array",
                    "description": "Line items of a transaction",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/TransactionItem"
                    }
                },
                "transactionStatus": {
                    "type": "string",
                    "description": "The status of the transaction",
                    "allowEmptyValue": false,
                    "enum": [
                        "PENDING",
                        "POSTED",
                        "VOIDED"
                    ]
                },
                "userId": {
                    "type": "string",
                    "description": "The user who created the transaction",
                    "allowEmptyValue": false
                }
            },
            "title": "Transaction"
        },
        "TransactionItem": {
            "type": "object",
            "required": [
                "accountNumber",
                "amount",
                "companyNumber",
                "controlNumber",
                "itemType"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The GL account of the transaction item",
                    "allowEmptyValue": false
                },
                "amount": {
                    "type": "number",
                    "description": "The dollar amount of the transaction item",
                    "allowEmptyValue": false
                },
                "applyTo": {
                    "type": "string",
                    "description": "Secondary control number used by schedules using the BALANCE_BY_ITEM balancing method",
                    "allowEmptyValue": false
                },
                "companyNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The dealer endpoint ID of the company the GL account belongs to",
                    "allowEmptyValue": false
                },
                "controlNumber": {
                    "type": "string",
                    "description": "Identifies the person/vendor the amount is being used for",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "A cost, in dollars, debited from the cost account of the Item's GL account",
                    "allowEmptyValue": false
                },
                "itemType": {
                    "type": "string",
                    "description": "The type of the transaction item",
                    "allowEmptyValue": false,
                    "enum": [
                        "NORMAL",
                        "COST",
                        "INVENTORY"
                    ]
                },
                "remarks": {
                    "type": "string",
                    "description": "Notes attached to the transaction item",
                    "allowEmptyValue": false
                },
                "unitCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates with a value of 0 or 1 whether or not a transaction item should be \"counted\" by the posting, reversal, or adjustment process.",
                    "allowEmptyValue": false
                }
            },
            "title": "TransactionItem"
        },
        "Transmission": {
            "type": "object",
            "properties": {
                "speeds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of speeds",
                    "allowEmptyValue": false
                },
                "transmissionType": {
                    "type": "string",
                    "description": "Type (Automatic, Manual)",
                    "allowEmptyValue": false,
                    "enum": [
                        "AUTOMATIC",
                        "MANUAL"
                    ]
                }
            },
            "title": "Transmission"
        },
        "UpdateBalloonDeal": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. May only update accessories that are already present",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "dealId": {
                    "type": "string",
                    "description": "Unique id of the deal",
                    "allowEmptyValue": false
                },
                "dealNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Users at the dealership will reference a deal by this number",
                    "allowEmptyValue": false
                },
                "fees": {
                    "type": "array",
                    "description": "Fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateFee"
                    }
                },
                "insurance": {
                    "description": "Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsurance"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal",
                    "allowEmptyValue": false
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer",
                    "allowEmptyValue": false
                },
                "salesStaff": {
                    "description": "Staff members involved with the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateSalesStaff"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealTrade"
                    }
                },
                "vehicleSellingPrice": {
                    "type": "number",
                    "description": "The selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateBalloonDeal"
        },
        "UpdateBuyer": {
            "type": "object",
            "properties": {
                "formName": {
                    "type": "string",
                    "description": "The buyer's form name",
                    "allowEmptyValue": false
                },
                "identity": {
                    "description": "The buyer's identity information",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/DealerUpdatePersonIdentity"
                }
            },
            "title": "UpdateBuyer"
        },
        "UpdateCashDeal": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. May only update accessories that are already present",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "dealId": {
                    "type": "string",
                    "description": "Unique id of the deal",
                    "allowEmptyValue": false
                },
                "dealNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Users at the dealership will reference a deal by this number",
                    "allowEmptyValue": false
                },
                "fees": {
                    "type": "array",
                    "description": "Fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateFee"
                    }
                },
                "insurance": {
                    "description": "Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsurance"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal",
                    "allowEmptyValue": false
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer",
                    "allowEmptyValue": false
                },
                "salesStaff": {
                    "description": "Staff members involved with the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateSalesStaff"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealTrade"
                    }
                },
                "vehicleSellingPrice": {
                    "type": "number",
                    "description": "The selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateCashDeal"
        },
        "UpdateDealAccessory": {
            "type": "object",
            "required": [
                "displayPosition",
                "selected"
            ],
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "The cost of the accessory",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the accessory",
                    "allowEmptyValue": false
                },
                "displayPosition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The current position of the accessory in the accessories list when the deal is viewed through the DMS user interface.",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Price the customer pays for the accessory",
                    "allowEmptyValue": false
                },
                "selected": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the accessory is selected",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateDealAccessory"
        },
        "UpdateDealTrade": {
            "type": "object",
            "properties": {
                "actualCashValue": {
                    "type": "number",
                    "description": "The actual cash value of the trade",
                    "allowEmptyValue": false
                },
                "allowance": {
                    "type": "number",
                    "description": "The allowance given for the trade",
                    "allowEmptyValue": false
                },
                "body": {
                    "type": "string",
                    "description": "The body of the trade",
                    "allowEmptyValue": false
                },
                "make": {
                    "type": "string",
                    "description": "The make of the trade",
                    "allowEmptyValue": false
                },
                "mileage": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The mileage of the trade",
                    "allowEmptyValue": false
                },
                "model": {
                    "type": "string",
                    "description": "The model of the trade",
                    "allowEmptyValue": false
                },
                "payoff": {
                    "type": "number",
                    "description": "The payoff left for the trade",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The year of the trade",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateDealTrade"
        },
        "UpdateFee": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "The amount of the fee",
                    "allowEmptyValue": false
                },
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The code of the fee",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "The description of the fee",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "The tax information for the fee",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateItemTax"
                },
                "paidAt": {
                    "type": "string",
                    "description": "Where the fee is to be paid (CAP/INCEPTION). PER_PAYMENT is not supported for fees.\n* CAP: Indicates the relevant value/price will be grouped into the total capitalized cost for the deal. The capitalized cost is the total amount to be paid by the customer over their payment term.\n* INCEPTION: Indicates the relevant value/price will have to be paid by the customer before they are able to leave the dealership with their purchased vehicle. Items due at inception are not part of the  capitalized cost and are therefore not part of the monthly payment the customer will pay.\n* PER_PAYMENT: Indicates the relevant value/price will be divided across all the monthly payments the customer  pays for their specified term.",
                    "allowEmptyValue": false,
                    "enum": [
                        "CAP",
                        "INCEPTION",
                        "PER_PAYMENT"
                    ]
                }
            },
            "title": "UpdateFee"
        },
        "UpdateFinanceDeal": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. May only update accessories that are already present",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "dealId": {
                    "type": "string",
                    "description": "Unique id of the deal",
                    "allowEmptyValue": false
                },
                "dealNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Users at the dealership will reference a deal by this number",
                    "allowEmptyValue": false
                },
                "fees": {
                    "type": "array",
                    "description": "Fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateFee"
                    }
                },
                "insurance": {
                    "description": "Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsurance"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal",
                    "allowEmptyValue": false
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer",
                    "allowEmptyValue": false
                },
                "salesStaff": {
                    "description": "Staff members involved with the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateSalesStaff"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealTrade"
                    }
                },
                "vehicleSellingPrice": {
                    "type": "number",
                    "description": "The selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateFinanceDeal"
        },
        "UpdateGapInsurance": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code for the GAP insurance",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "The cost of the GAP insurance",
                    "allowEmptyValue": false
                },
                "itemTaxSetup": {
                    "description": "The tax information for GAP insurance",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateItemTax"
                },
                "premium": {
                    "type": "number",
                    "description": "The premium of the GAP insurance",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateGapInsurance"
        },
        "UpdateInsurance": {
            "type": "object",
            "properties": {
                "accidentAndHealth": {
                    "description": "Any Accident and Health insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsuranceItem"
                },
                "gap": {
                    "description": "Any GAP insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateGapInsurance"
                },
                "life": {
                    "description": "Any Life insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsuranceItem"
                }
            },
            "title": "UpdateInsurance"
        },
        "UpdateInsuranceItem": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code for the insurance",
                    "allowEmptyValue": false
                },
                "premium": {
                    "type": "number",
                    "description": "The premium amount, if overriding",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateInsuranceItem"
        },
        "UpdateItemTax": {
            "type": "object",
            "properties": {
                "leaseTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate for lease deals",
                    "allowEmptyValue": false
                },
                "leaseTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the item is taxed on lease deals",
                    "allowEmptyValue": false
                },
                "retailTaxRate": {
                    "type": "number",
                    "format": "double",
                    "description": "The tax rate for retail deals",
                    "allowEmptyValue": false
                },
                "retailTaxable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether or not the item is taxed on retail deals",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateItemTax"
        },
        "UpdateLeaseDeal": {
            "type": "object",
            "properties": {
                "accessories": {
                    "type": "array",
                    "description": "Any accessories on the deal. May only update accessories that are already present",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealAccessory"
                    }
                },
                "buyer": {
                    "description": "Primary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "cashDeposit": {
                    "type": "number",
                    "description": "Money the customer pays up front before closing deal",
                    "allowEmptyValue": false
                },
                "coBuyer": {
                    "description": "Secondary buyer on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateBuyer"
                },
                "dealId": {
                    "type": "string",
                    "description": "Unique id of the deal",
                    "allowEmptyValue": false
                },
                "dealNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Users at the dealership will reference a deal by this number",
                    "allowEmptyValue": false
                },
                "fees": {
                    "type": "array",
                    "description": "Fees on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateFee"
                    }
                },
                "insurance": {
                    "description": "Insurance on the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateInsurance"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the deal",
                    "allowEmptyValue": false
                },
                "saleDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The delivery date of the vehicle to the buyer",
                    "allowEmptyValue": false
                },
                "salesStaff": {
                    "description": "Staff members involved with the deal",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateSalesStaff"
                },
                "tradeIns": {
                    "type": "array",
                    "description": "Trade-ins on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateDealTrade"
                    }
                },
                "vehicleSellingPrice": {
                    "type": "number",
                    "description": "The selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateLeaseDeal"
        },
        "UpdatePricingInformation": {
            "type": "object",
            "properties": {
                "advertisedPrice": {
                    "type": "number",
                    "description": "The advertised price of the vehicle",
                    "allowEmptyValue": false
                },
                "marketValue": {
                    "type": "number",
                    "description": "Market value or internet website amount",
                    "allowEmptyValue": false
                },
                "totalPrice": {
                    "type": "number",
                    "description": "The total selling price of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdatePricingInformation"
        },
        "UpdateRepairOrder": {
            "type": "object",
            "properties": {
                "hangTag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Hang tag used in dealership to track the vehicle for a repair order",
                    "allowEmptyValue": false
                },
                "odometerIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading before the work is started",
                    "allowEmptyValue": false
                },
                "odometerOut": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Odometer reading after the work is completed",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateRepairOrder",
            "description": "Use this to update repair order fields.  Only those fields explicitly listed here are supported for update"
        },
        "UpdateSalesStaff": {
            "type": "object",
            "properties": {
                "salesPeople": {
                    "type": "array",
                    "description": "The salespeople on the deal",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/UpdateSalesperson"
                    }
                }
            },
            "title": "UpdateSalesStaff"
        },
        "UpdateSalesperson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the salesperson",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateSalesperson"
        },
        "UpdateVehicle": {
            "type": "object",
            "properties": {
                "lotLocation": {
                    "description": "The area or the 'lot' where the physical vehicle resides",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Lot location (location where the physical vehicle resides)"
                },
                "modelNumber": {
                    "type": "string",
                    "description": "Model number",
                    "allowEmptyValue": false
                },
                "odometerReading": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Most recently updated mileage on the vehicle",
                    "allowEmptyValue": false
                },
                "pricingInfo": {
                    "description": "Pricing information on the vehicle",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdatePricingInformation"
                },
                "promoted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates if the vehicle is actively being promoted through advertising channels",
                    "allowEmptyValue": false
                },
                "titleStatus": {
                    "type": "string",
                    "description": "Current status of the title for the vehicle",
                    "allowEmptyValue": false,
                    "enum": [
                        "APPLIED",
                        "PROBLEM",
                        "RECEIVED"
                    ]
                },
                "vehicleIndicators": {
                    "description": "Boolean flags associated with various aspects of the vehicle, such as being pre-owned",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/UpdateVehicleIndicators"
                },
                "warnings": {
                    "type": "array",
                    "description": "A list of warnings for non-fatal problems during a request",
                    "allowEmptyValue": false,
                    "items": {
                        "$ref": "#/definitions/ApiWarning"
                    }
                }
            },
            "title": "UpdateVehicle",
            "description": "Use this to update inventory vehicle fields.  Only those fields explicitly listed here are supported for update"
        },
        "UpdateVehicleIndicators": {
            "type": "object",
            "properties": {
                "certifiedPreOwned": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicate if the vehicle is certified preowned",
                    "allowEmptyValue": false
                }
            },
            "title": "UpdateVehicleIndicators"
        },
        "Vehicle": {
            "type": "object",
            "required": [
                "vin"
            ],
            "properties": {
                "deliveryMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Miles on the vehicle at delivery to owner after being sold",
                    "allowEmptyValue": false
                },
                "inServiceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date that the vehicle was first sold (i.e. put into service)",
                    "allowEmptyValue": false
                },
                "licensePlate": {
                    "type": "string",
                    "description": "License plate of vehicle",
                    "allowEmptyValue": false
                },
                "licensePlateState": {
                    "type": "string",
                    "description": "License plate state",
                    "allowEmptyValue": false
                },
                "make": {
                    "type": "string",
                    "description": "Manufacturer of the vehicle",
                    "allowEmptyValue": false
                },
                "milesOrKilometers": {
                    "type": "string",
                    "description": "Indicator for miles/kilometers for odometer",
                    "allowEmptyValue": false,
                    "enum": [
                        "MILES",
                        "KILOMETERS"
                    ]
                },
                "model": {
                    "type": "string",
                    "description": "Brand of vehicle from manufacturer",
                    "allowEmptyValue": false
                },
                "odometerReading": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Most recently updated mileage on the vehicle",
                    "allowEmptyValue": false
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "UUID of customer that currently owns this vehicle",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "Stock number assigned to vehicle by dealership",
                    "allowEmptyValue": false
                },
                "userComment": {
                    "type": "string",
                    "description": "User defined comment that appears on an RO",
                    "allowEmptyValue": false
                },
                "vehicleColor": {
                    "type": "string",
                    "description": "Vehicle Color",
                    "allowEmptyValue": false
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle identification number",
                    "allowEmptyValue": false
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Year of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "Vehicle"
        },
        "Vehicle Engine": {
            "type": "object",
            "properties": {
                "cylinders": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of Cylinders",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description of the engine (4.0L, 2.5L, etc)",
                    "allowEmptyValue": false
                },
                "miles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Current odometer reading",
                    "allowEmptyValue": false
                }
            },
            "title": "Vehicle Engine"
        },
        "Vehicle Option": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code designated to this option",
                    "allowEmptyValue": false
                },
                "cost": {
                    "type": "number",
                    "description": "Cost",
                    "allowEmptyValue": false
                },
                "description": {
                    "type": "string",
                    "description": "Description",
                    "allowEmptyValue": false
                },
                "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer",
                    "allowEmptyValue": false
                },
                "model": {
                    "type": "string",
                    "description": "Model",
                    "allowEmptyValue": false
                },
                "name": {
                    "type": "string",
                    "description": "Name",
                    "allowEmptyValue": false
                },
                "notes": {
                    "type": "string",
                    "description": "Notes",
                    "allowEmptyValue": false
                },
                "price": {
                    "type": "number",
                    "description": "Price",
                    "allowEmptyValue": false
                }
            },
            "title": "Vehicle Option"
        },
        "Vehicle Ownership": {
            "type": "object",
            "properties": {
                "inventoryType": {
                    "type": "string",
                    "description": "Inventory type of vehicle (New, Used, Tradein, Demo,Other)",
                    "allowEmptyValue": false,
                    "enum": [
                        "NEW_INVENTORY",
                        "USED_INVENTORY",
                        "USED_INVENTORY_TRADE_IN",
                        "DEMO_INVENTORY",
                        "OTHER_INVENTORY"
                    ]
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "UUID of the owner",
                    "allowEmptyValue": false
                }
            },
            "title": "Vehicle Ownership"
        },
        "VehicleColor": {
            "type": "object",
            "properties": {
                "exteriorColor": {
                    "type": "string",
                    "description": "Exterior Color",
                    "allowEmptyValue": false
                },
                "exteriorColorCode": {
                    "type": "string",
                    "description": "Exterior Color code",
                    "allowEmptyValue": false
                },
                "interiorColor": {
                    "type": "string",
                    "description": "Interior Color",
                    "allowEmptyValue": false
                },
                "interiorColorCode": {
                    "type": "string",
                    "description": "Interior Color code",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleColor"
        },
        "VehicleCostCalculations": {
            "type": "object",
            "properties": {
                "advertisingIncluded": {
                    "type": "boolean",
                    "example": false,
                    "description": "Advertising cost is being added to the total vehicle cost calculation",
                    "allowEmptyValue": false
                },
                "costBumpIncluded": {
                    "type": "boolean",
                    "example": false,
                    "description": "Cost bump is being added to the total vehicle cost calculation",
                    "allowEmptyValue": false
                },
                "holdbackIncluded": {
                    "type": "boolean",
                    "example": false,
                    "description": "Holdback is being added to the total vehicle cost calculation",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleCostCalculations"
        },
        "VehicleCustomField": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Custom field name to provide context for the value. This field is configured by the dealer and may not always be present",
                    "allowEmptyValue": false
                },
                "value": {
                    "type": "string",
                    "description": "Value for the custom field. If the value is not set by the dealer, this field will not be present",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleCustomField"
        },
        "VehicleId": {
            "type": "object",
            "required": [
                "vin"
            ],
            "properties": {
                "vin": {
                    "type": "string",
                    "description": "The VIN of the vehicle",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleId"
        },
        "VehicleInsuranceAgent": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "Contact information for the vehicle insurance agent",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Contact"
                }
            },
            "title": "VehicleInsuranceAgent"
        },
        "VehicleInsuranceCompany": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "Contact information for the vehicle insurance company",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/Contact"
                }
            },
            "title": "VehicleInsuranceCompany"
        },
        "VehicleInsurancePolicy": {
            "type": "object",
            "properties": {
                "agent": {
                    "description": "Contact agent who is associated with the insurance policy",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleInsuranceAgent"
                },
                "company": {
                    "description": "The company that holds the insurance policy",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleInsuranceCompany"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the insurance policy becomes effective",
                    "allowEmptyValue": false
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the insurance policy expires",
                    "allowEmptyValue": false
                },
                "policyNumber": {
                    "type": "string",
                    "description": "Policy number of the insurance policy",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleInsurancePolicy"
        },
        "VehicleInventorySetup": {
            "type": "object",
            "properties": {
                "salesCostCalculations": {
                    "description": "Information that defines how Vehicle Inventory `salesCost` is calculated",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehicleCostCalculations"
                }
            },
            "title": "VehicleInventorySetup"
        },
        "VehicleOwnerHistory": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "The UUID for the customer that owns or has owned the vehicle.",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonId"
                },
                "ownershipEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp for when the customer relinquished ownership of the vehicle.",
                    "allowEmptyValue": false
                },
                "ownershipStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp for when the customer started owning the vehicle.",
                    "allowEmptyValue": false
                }
            },
            "title": "VehicleOwnerHistory"
        },
        "VehiclePurchaseOrderEntry": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description for the ordered items",
                    "allowEmptyValue": false
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The quantity to order",
                    "allowEmptyValue": false
                },
                "remarks": {
                    "type": "string",
                    "description": "General dealer comments on the unit.",
                    "allowEmptyValue": false
                },
                "stockNumber": {
                    "type": "string",
                    "description": "The stock number for the vehicle this purchase order is for",
                    "allowEmptyValue": false
                },
                "unitPrice": {
                    "type": "number",
                    "description": "The price per unit",
                    "allowEmptyValue": false
                }
            },
            "title": "VehiclePurchaseOrderEntry"
        },
        "VehiclePurchasedFrom": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Where the vehicle was purchased from",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/VehiclePurchasedFromAddress"
                },
                "name": {
                    "type": "string",
                    "description": "Who the vehicle was purchased from",
                    "allowEmptyValue": false
                }
            },
            "title": "VehiclePurchasedFrom"
        },
        "VehiclePurchasedFromAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of vehicle purchase location",
                    "allowEmptyValue": false
                },
                "city": {
                    "type": "string",
                    "description": "City of vehicle purchase location",
                    "allowEmptyValue": false
                },
                "state": {
                    "type": "string",
                    "description": "State of vehicle purchase location",
                    "allowEmptyValue": false
                },
                "zip": {
                    "type": "string",
                    "description": "Zip code of vehicle purchase location",
                    "allowEmptyValue": false
                }
            },
            "title": "VehiclePurchasedFromAddress"
        },
        "VehicleTrim": {
            "type": "object",
            "properties": {
                "exteriorTrimColor": {
                    "type": "string",
                    "description": "Color of the exterior trim",
                    "allowEmptyValue": false
                },
                "interiorTrimModel": {
                    "type": "string",
                    "description": "Interior Trim type: LEATHER, VINYL, or FABRIC",
                    "allowEmptyValue": false,
                    "enum": [
                        "LEATHER",
                        "VINYL",
                        "FABRIC"
                    ]
                }
            },
            "title": "VehicleTrim"
        },
        "Vendor": {
            "type": "object",
            "required": [
                "discountDays",
                "discountMatchTermDate",
                "discountPercent",
                "person",
                "term",
                "termSpecificDay"
            ],
            "properties": {
                "defaultGlAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The GL account ID this vendor is linked to",
                    "allowEmptyValue": false
                },
                "discountDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of days after the invoice date the dealership has to pay the invoice and receive the discount. Used only if discountMatchTermDate is false.",
                    "allowEmptyValue": false
                },
                "discountMatchTermDate": {
                    "type": "boolean",
                    "example": false,
                    "description": "Determines how to calculate discount date for an invoice. If true, discount date should be the same as the invoice due date. If false, discount date is discountDays after invoice date.",
                    "allowEmptyValue": false
                },
                "discountPercent": {
                    "type": "number",
                    "format": "double",
                    "description": "The discount percentage",
                    "allowEmptyValue": false
                },
                "person": {
                    "description": "The vendor, which is represented as a person",
                    "allowEmptyValue": false,
                    "$ref": "#/definitions/PersonIdentity"
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days after the invoice date the dealership has to pay. If zero, refer to termSpecificDay.",
                    "allowEmptyValue": false
                },
                "termSpecificDay": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Day of month used for invoice due date. If zero, refer to term.",
                    "allowEmptyValue": false
                }
            },
            "title": "Vendor"
        },
        "WarrantyModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "WarrantyModel Description",
                    "allowEmptyValue": false
                },
                "expirationMiles": {
                    "type": "integer",
                    "format": "int32",
                    "description": "WarrantyModel Expiration Mileage",
                    "allowEmptyValue": false
                }
            },
            "title": "WarrantyModel"
        }
    },
    "schemes": {
        
    }
}
